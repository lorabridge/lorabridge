version: "3.8"
services:
  chirpstack:
    image: chirpstack/chirpstack:4.0.0-rc.2
    command: -c /etc/chirpstack
    restart: unless-stopped
    environment:
      - POSTGRESQL_HOST=postgresql
      - REDIS_HOST=redis:6379
      - MQTT_BROKER_HOST=mqtt
      - LOG_LEVEL=warn
      - API_SECRET=verysecret
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
      # - ./lorawan-devices:/opt/lorawan-devices
    depends_on:
      - postgresql
      - mosquitto
      - redis
    ports:
      - 8080:8080
    networks:
      - loragatenet

  chirpstack-gateway-bridge:
    image: chirpstack/chirpstack-gateway-bridge:4.0.0-rc.1
    # ports:
    #   - 1700:1700/udp
    # volumes:
    #   - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    environment:
      - INTEGRATION__MQTT__AUTH__GENERIC__SERVERS=tcp://mosquitto:1883
      - GENERAL__LOG_LEVEL=4
      - INTEGRATION__MQTT__EVENT_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/event/{{ .EventType }}
      - INTEGRATION__MQTT__COMMAND_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/command/#
      - INTEGRATION__MQTT__STATE_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/state/{{ .StateType }}
    depends_on: 
      - mosquitto
    networks:
      - loragatenet

  postgresql:
    image: postgres:14-alpine
    # image: postgres:9.6-alpine
    environment:
      - POSTGRES_PASSWORD=root 
      - POSTGRES_DEV_EUI=${CHIRPSTACK_DEV_EUI}
      - POSTGRES_DEV_KEY=${CHIRPSTACK_DEV_KEY}
    volumes:
      - ./configuration/postgresql2/initdb:/docker-entrypoint-initdb.d
      - postgresqldata2:/var/lib/postgresql/data
    networks:
      - loragatenet
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    # image: redis:5-alpine
    volumes:
      - redisdata:/data
    networks:
      - loragatenet
    restart: unless-stopped
    command: [
            "sh", "-c",
            '
            docker-entrypoint.sh
            --appendonly "yes"
            '
    ]

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mqtt
    # ports:
    #   - 1883:1883
    networks:
      - loragatenet
    restart: unless-stopped
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      # - ./mosquitto/passwd:/mosquitto/passwd:ro
      - mdata:/mosquitto/data
      - mlog:/mosquitto/log

  gateway_fwd:
    # build: gateway-forwarder
    image: ghcr.io/lorabridge/gateway-forwarder:latest
    restart: unless-stopped
    volumes:
      # - ./data:/app/data
      # - /run/udev:/run/udev:ro
      # - /sys/class/gpio:/sys/class/gpio
      # - /sys:/sys
      # "remove" read-only sysfs mounted by docker
      - /sys
      # bind mound necessary gpio stuff
      - /sys/class/gpio:/sys/class/gpio
      - /sys/devices/platform/soc/fe200000.gpio:/sys/devices/platform/soc/fe200000.gpio
      - type: bind
        source: /sys/devices/platform/soc/soc:firmware/soc:firmware:gpio
        target: /sys/devices/platform/soc/soc:firmware/soc:firmware:gpio
    environment:
      - TZ=Europe/Vienna
      # - ZIGBEE2MQTT_CONFIG_SERIAL_PORT=/dev/ttyUSB0
    devices:
      - /dev/spidev0.0:/dev/spidev0.0
      - /dev/spidev0.1:/dev/spidev0.1
    #   - /dev/gpiomem:/dev/gpiomem
      # - /dev/mem:/dev/mem
      # - /dev/ttyAMA0:/dev/ttyAMA0
    # privileged: true
    # cap_add:
    #   - SYS_RAWIO
    group_add:
      - "999"
      - "997"
      # - spi
      # - gpio
    # user: 1337:1337
    networks:
      - loragatenet
    depends_on:
      - chirpstack-gateway-bridge

  homeassistant:
    # build: gateway-home-assistant
    image: ghcr.io/lorabridge/gateway-home-assistant:latest
    container_name: homeassistant
    # image: "ghcr.io/home-assistant/home-assistant:stable"
    depends_on: 
      - mosquitto
    volumes:
      - homeassistant_data:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    # privileged: true
    networks:
      - loragatenet
    ports:
      - 8123:8123

  converter:
    # build: gateway-converter
    image: ghcr.io/lorabridge/gateway-converter:latest
    environment:
      - CON_MQTT_USERNAME=${MQTT_USERNAME}
      - CON_MQTT_PASSWORD=${MQTT_PASSWORD}
      - CON_MQTT_HOST=${MQTT_HOST}
      - CON_MQTT_PORT=${MQTT_PORT}
      - CON_CHIRP_TOPIC=${CHIRP_TOPIC}
      - CON_DEV_MAN_TOPIC=${DEV_MAN_TOPIC}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - loragatenet
    depends_on:
      - mosquitto

  ha_integration:
    # build: gateway-ha_integration
    image: ghcr.io/lorabridge/gateway-ha_integration:latest
    environment:
      - HA_MQTT_USERNAME=${MQTT_USERNAME}
      - HA_MQTT_PASSWORD=${MQTT_PASSWORD}
      - HA_MQTT_HOST=${MQTT_HOST}
      - HA_MQTT_PORT=${MQTT_PORT}
      - HA_STATE_TOPIC=${DEV_STATE_TOPIC}
      - HA_DISCOVERY_TOPIC=${DEV_DISCOVERY_TOPIC}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - loragatenet
    depends_on:
      - mosquitto

  device_manager:
    # build: gateway-device_manager
    image: ghcr.io/lorabridge/gateway-device_manager:latest
    environment:
      - DEV_MQTT_USERNAME=${MQTT_USERNAME}
      - DEV_MQTT_PASSWORD=${MQTT_PASSWORD}
      - DEV_MQTT_HOST=${MQTT_HOST}
      - DEV_MQTT_PORT=${MQTT_PORT}
      - DEV_MAN_TOPIC=${DEV_MAN_TOPIC}
      - DEV_REDIS_HOST=${REDIS_HOST}
      - DEV_REDIS_PORT=${REDIS_PORT}
      - DEV_REDIS_DB=${REDIS_DB}
      - DEV_STATE_TOPIC=${DEV_STATE_TOPIC}
      - DEV_DISCOVERY_TOPIC=${DEV_DISCOVERY_TOPIC}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - loragatenet
    depends_on:
      - mosquitto
      - redis

volumes:
  redisdata:
  homeassistant_data:
  mdata:
  mlog:
  postgresqldata2:	

networks:
    loragatenet:
        attachable: true
        name: loragatenet
