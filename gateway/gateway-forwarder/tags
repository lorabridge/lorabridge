!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AGC_CMD_ABORT	libloragw/src/loragw_hal.c	70;"	d	file:
AGC_CMD_WAIT	libloragw/src/loragw_hal.c	69;"	d	file:
APPEND_INDENT	lora_pkt_fwd/src/parson.c	720;"	d	file:
APPEND_INDENT	lora_pkt_fwd/src/parson.c	881;"	d	file:
APPEND_INDENT	util_pkt_logger/src/parson.c	720;"	d	file:
APPEND_INDENT	util_pkt_logger/src/parson.c	881;"	d	file:
APPEND_STRING	lora_pkt_fwd/src/parson.c	715;"	d	file:
APPEND_STRING	lora_pkt_fwd/src/parson.c	880;"	d	file:
APPEND_STRING	util_pkt_logger/src/parson.c	715;"	d	file:
APPEND_STRING	util_pkt_logger/src/parson.c	880;"	d	file:
APP_NAME	lora_pkt_fwd/Makefile	/^APP_NAME := lora_pkt_fwd$/;"	m
APP_NAME	util_ack/Makefile	/^APP_NAME := util_ack$/;"	m
APP_NAME	util_pkt_logger/Makefile	/^APP_NAME := util_pkt_logger$/;"	m
APP_NAME	util_sink/Makefile	/^APP_NAME := util_sink$/;"	m
APP_NAME	util_tx_continuous/Makefile	/^APP_NAME := util_tx_continuous$/;"	m
APP_NAME	util_tx_test/Makefile	/^APP_NAME := util_tx_test$/;"	m
AR	libloragw/Makefile	/^AR := $(CROSS_COMPILE)ar$/;"	m
AR	lora_pkt_fwd/Makefile	/^AR := $(CROSS_COMPILE)ar$/;"	m
AR	util_ack/Makefile	/^AR := $(CROSS_COMPILE)ar$/;"	m
AR	util_pkt_logger/Makefile	/^AR := $(CROSS_COMPILE)ar$/;"	m
AR	util_sink/Makefile	/^AR := $(CROSS_COMPILE)ar$/;"	m
AR	util_tx_continuous/Makefile	/^AR := $(CROSS_COMPILE)ar$/;"	m
AR	util_tx_test/Makefile	/^AR := $(CROSS_COMPILE)ar$/;"	m
ARCH	Makefile	/^ARCH ?=$/;"	m
ARCH	libloragw/Makefile	/^ARCH ?=$/;"	m
ARCH	lora_pkt_fwd/Makefile	/^ARCH ?=$/;"	m
ARCH	util_pkt_logger/Makefile	/^ARCH ?=$/;"	m
ARCH	util_tx_continuous/Makefile	/^ARCH ?=$/;"	m
ARCH	util_tx_test/Makefile	/^ARCH ?=$/;"	m
ARRAY_MAX_CAPACITY	gps_hat/parson.c	34;"	d	file:
ARRAY_MAX_CAPACITY	lora_pkt_fwd/src/parson.c	36;"	d	file:
ARRAY_MAX_CAPACITY	util_pkt_logger/src/parson.c	36;"	d	file:
ARRAY_SIZE	gps_hat/base64.c	29;"	d	file:
ARRAY_SIZE	libloragw/src/loragw_fpga.c	35;"	d	file:
ARRAY_SIZE	libloragw/src/loragw_gps.c	40;"	d	file:
ARRAY_SIZE	libloragw/src/loragw_hal.c	37;"	d	file:
ARRAY_SIZE	libloragw/src/loragw_lbt.c	33;"	d	file:
ARRAY_SIZE	libloragw/src/loragw_radio.c	38;"	d	file:
ARRAY_SIZE	libloragw/src/loragw_reg.c	34;"	d	file:
ARRAY_SIZE	libloragw/src/loragw_spi.native.c	40;"	d	file:
ARRAY_SIZE	libloragw/tst/test_loragw_cal.c	43;"	d	file:
ARRAY_SIZE	libloragw/tst/test_loragw_hal.c	41;"	d	file:
ARRAY_SIZE	libloragw/tst/test_loragw_spi.c	29;"	d	file:
ARRAY_SIZE	lora_pkt_fwd/src/base64.c	29;"	d	file:
ARRAY_SIZE	lora_pkt_fwd/src/lora_pkt_fwd.c	64;"	d	file:
ARRAY_SIZE	util_ack/src/util_ack.c	44;"	d	file:
ARRAY_SIZE	util_pkt_logger/src/util_pkt_logger.c	43;"	d	file:
ARRAY_SIZE	util_sink/src/util_sink.c	43;"	d	file:
ARRAY_SIZE	util_tx_continuous/src/util_tx_continuous.c	44;"	d	file:
ARRAY_SIZE	util_tx_test/src/util_tx_test.c	44;"	d	file:
ASSERT	gps_hat/radio.h	19;"	d
BEACON_GUARD	gps_hat/jitqueue.c	26;"	d	file:
BEACON_GUARD	lora_pkt_fwd/src/jitqueue.c	42;"	d	file:
BEACON_POLL_MS	lora_pkt_fwd/src/lora_pkt_fwd.c	84;"	d	file:
BEACON_RESERVED	gps_hat/jitqueue.c	28;"	d	file:
BEACON_RESERVED	lora_pkt_fwd/src/jitqueue.c	44;"	d	file:
BURST_TEST_LENGTH	libloragw/tst/test_loragw_reg.c	28;"	d	file:
BURST_TEST_SIZE	libloragw/tst/test_loragw_spi.c	34;"	d	file:
BW_125KHZ	gps_hat/radio.h	169;"	d
BW_125KHZ	libloragw/inc/loragw_hal.h	90;"	d
BW_15K6HZ	gps_hat/radio.h	172;"	d
BW_15K6HZ	libloragw/inc/loragw_hal.h	93;"	d
BW_250KHZ	gps_hat/radio.h	168;"	d
BW_250KHZ	libloragw/inc/loragw_hal.h	89;"	d
BW_31K2HZ	gps_hat/radio.h	171;"	d
BW_31K2HZ	libloragw/inc/loragw_hal.h	92;"	d
BW_500KHZ	gps_hat/radio.h	167;"	d
BW_500KHZ	libloragw/inc/loragw_hal.h	88;"	d
BW_62K5HZ	gps_hat/radio.h	170;"	d
BW_62K5HZ	libloragw/inc/loragw_hal.h	91;"	d
BW_7K8HZ	gps_hat/radio.h	173;"	d
BW_7K8HZ	libloragw/inc/loragw_hal.h	94;"	d
BW_UNDEFINED	gps_hat/radio.h	166;"	d
BW_UNDEFINED	libloragw/inc/loragw_hal.h	87;"	d
CC	libloragw/Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CC	lora_pkt_fwd/Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CC	util_ack/Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CC	util_pkt_logger/Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CC	util_sink/Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CC	util_tx_continuous/Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CC	util_tx_test/Makefile	/^CC := $(CROSS_COMPILE)gcc$/;"	m
CFLAGS	libloragw/Makefile	/^CFLAGS := -O2 -Wall -Wextra -std=c99 -Iinc -I.$/;"	m
CFLAGS	lora_pkt_fwd/Makefile	/^CFLAGS := -O2 -Wall -Wextra -std=c99 -Iinc -I.$/;"	m
CFLAGS	util_ack/Makefile	/^CFLAGS := -O2 -Wall -Wextra -std=c99 -Iinc -I.$/;"	m
CFLAGS	util_pkt_logger/Makefile	/^CFLAGS=-O2 -Wall -Wextra -std=c99 -Iinc -I.$/;"	m
CFLAGS	util_sink/Makefile	/^CFLAGS := -O2 -Wall -Wextra -std=c99 -Iinc -I.$/;"	m
CFLAGS	util_tx_continuous/Makefile	/^CFLAGS=-O2 -Wall -Wextra -std=c99 -Iinc -I.$/;"	m
CFLAGS	util_tx_test/Makefile	/^CFLAGS=-O2 -Wall -Wextra -std=c99 -Iinc -I.$/;"	m
CHECK_NULL	libloragw/src/loragw_fpga.c	39;"	d	file:
CHECK_NULL	libloragw/src/loragw_fpga.c	43;"	d	file:
CHECK_NULL	libloragw/src/loragw_gps.c	44;"	d	file:
CHECK_NULL	libloragw/src/loragw_gps.c	48;"	d	file:
CHECK_NULL	libloragw/src/loragw_hal.c	42;"	d	file:
CHECK_NULL	libloragw/src/loragw_hal.c	47;"	d	file:
CHECK_NULL	libloragw/src/loragw_lbt.c	37;"	d	file:
CHECK_NULL	libloragw/src/loragw_lbt.c	41;"	d	file:
CHECK_NULL	libloragw/src/loragw_radio.c	42;"	d	file:
CHECK_NULL	libloragw/src/loragw_radio.c	46;"	d	file:
CHECK_NULL	libloragw/src/loragw_reg.c	38;"	d	file:
CHECK_NULL	libloragw/src/loragw_reg.c	42;"	d	file:
CHECK_NULL	libloragw/src/loragw_spi.native.c	44;"	d	file:
CHECK_NULL	libloragw/src/loragw_spi.native.c	48;"	d	file:
CRIT	gps_hat/base64.c	30;"	d	file:
CRIT	lora_pkt_fwd/src/base64.c	30;"	d	file:
CROSS_COMPILE	Makefile	/^CROSS_COMPILE ?=$/;"	m
CROSS_COMPILE	libloragw/Makefile	/^CROSS_COMPILE ?=$/;"	m
CROSS_COMPILE	lora_pkt_fwd/Makefile	/^CROSS_COMPILE ?=$/;"	m
CROSS_COMPILE	util_pkt_logger/Makefile	/^CROSS_COMPILE ?=$/;"	m
CROSS_COMPILE	util_tx_continuous/Makefile	/^CROSS_COMPILE ?=$/;"	m
CROSS_COMPILE	util_tx_test/Makefile	/^CROSS_COMPILE ?=$/;"	m
CR_LORA_4_5	gps_hat/radio.h	189;"	d
CR_LORA_4_5	libloragw/inc/loragw_hal.h	113;"	d
CR_LORA_4_6	gps_hat/radio.h	190;"	d
CR_LORA_4_6	libloragw/inc/loragw_hal.h	114;"	d
CR_LORA_4_7	gps_hat/radio.h	191;"	d
CR_LORA_4_7	libloragw/inc/loragw_hal.h	115;"	d
CR_LORA_4_8	gps_hat/radio.h	192;"	d
CR_LORA_4_8	libloragw/inc/loragw_hal.h	116;"	d
CR_UNDEFINED	gps_hat/radio.h	188;"	d
CR_UNDEFINED	libloragw/inc/loragw_hal.h	112;"	d
DEBUG	gps_hat/base64.c	33;"	d	file:
DEBUG	lora_pkt_fwd/src/base64.c	33;"	d	file:
DEBUG_ARRAY	libloragw/src/loragw_gps.c	43;"	d	file:
DEBUG_ARRAY	libloragw/src/loragw_gps.c	47;"	d	file:
DEBUG_ARRAY	libloragw/src/loragw_hal.c	41;"	d	file:
DEBUG_ARRAY	libloragw/src/loragw_hal.c	46;"	d	file:
DEBUG_BEACON	gps_hat/dual_pkt_fwd.c	/^int DEBUG_BEACON = 0;     $/;"	v
DEBUG_BEACON	gps_hat/hat_pkt_fwd.c	/^int DEBUG_BEACON = 0;     $/;"	v
DEBUG_BEACON	lora_pkt_fwd/inc/trace.h	24;"	d
DEBUG_ERROR	gps_hat/dual_pkt_fwd.c	/^int DEBUG_ERROR = 0;    $/;"	v
DEBUG_ERROR	gps_hat/hat_pkt_fwd.c	/^int DEBUG_ERROR = 0;    $/;"	v
DEBUG_ERROR	lora_pkt_fwd/inc/trace.h	29;"	d
DEBUG_GPS	gps_hat/dual_pkt_fwd.c	/^int DEBUG_GPS = 0;     $/;"	v
DEBUG_GPS	gps_hat/hat_pkt_fwd.c	/^int DEBUG_GPS = 0;     $/;"	v
DEBUG_GPS_FWD	lora_pkt_fwd/inc/trace.h	30;"	d
DEBUG_INFO	gps_hat/dual_pkt_fwd.c	/^int DEBUG_INFO = 0;       $/;"	v
DEBUG_INFO	gps_hat/hat_pkt_fwd.c	/^int DEBUG_INFO = 0;       $/;"	v
DEBUG_INFO	gps_hat/single_rx_tx.c	/^int DEBUG_INFO = 0;       $/;"	v
DEBUG_INFO	lora_pkt_fwd/inc/trace.h	26;"	d
DEBUG_JIT	gps_hat/dual_pkt_fwd.c	/^int DEBUG_JIT = 0;$/;"	v
DEBUG_JIT	gps_hat/hat_pkt_fwd.c	/^int DEBUG_JIT = 0;$/;"	v
DEBUG_JIT	lora_pkt_fwd/inc/trace.h	21;"	d
DEBUG_JIT_ERROR	gps_hat/dual_pkt_fwd.c	/^int DEBUG_JIT_ERROR = 0;  $/;"	v
DEBUG_JIT_ERROR	gps_hat/hat_pkt_fwd.c	/^int DEBUG_JIT_ERROR = 0;  $/;"	v
DEBUG_JIT_ERROR	lora_pkt_fwd/inc/trace.h	22;"	d
DEBUG_LOG	lora_pkt_fwd/inc/trace.h	25;"	d
DEBUG_MSG	libloragw/src/loragw_aux.c	34;"	d	file:
DEBUG_MSG	libloragw/src/loragw_aux.c	37;"	d	file:
DEBUG_MSG	libloragw/src/loragw_fpga.c	37;"	d	file:
DEBUG_MSG	libloragw/src/loragw_fpga.c	41;"	d	file:
DEBUG_MSG	libloragw/src/loragw_gps.c	42;"	d	file:
DEBUG_MSG	libloragw/src/loragw_gps.c	46;"	d	file:
DEBUG_MSG	libloragw/src/loragw_hal.c	39;"	d	file:
DEBUG_MSG	libloragw/src/loragw_hal.c	44;"	d	file:
DEBUG_MSG	libloragw/src/loragw_lbt.c	35;"	d	file:
DEBUG_MSG	libloragw/src/loragw_lbt.c	39;"	d	file:
DEBUG_MSG	libloragw/src/loragw_radio.c	40;"	d	file:
DEBUG_MSG	libloragw/src/loragw_radio.c	44;"	d	file:
DEBUG_MSG	libloragw/src/loragw_reg.c	36;"	d	file:
DEBUG_MSG	libloragw/src/loragw_reg.c	40;"	d	file:
DEBUG_MSG	libloragw/src/loragw_spi.native.c	42;"	d	file:
DEBUG_MSG	libloragw/src/loragw_spi.native.c	46;"	d	file:
DEBUG_PKT_FWD	gps_hat/dual_pkt_fwd.c	/^int DEBUG_PKT_FWD = 0;$/;"	v
DEBUG_PKT_FWD	gps_hat/hat_pkt_fwd.c	/^int DEBUG_PKT_FWD = 0;$/;"	v
DEBUG_PKT_FWD	lora_pkt_fwd/inc/trace.h	20;"	d
DEBUG_PPM	lora_pkt_fwd/inc/trace.h	27;"	d
DEBUG_PRINTF	libloragw/src/loragw_aux.c	35;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_aux.c	38;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_fpga.c	38;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_fpga.c	42;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_hal.c	40;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_hal.c	45;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_lbt.c	36;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_lbt.c	40;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_radio.c	41;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_radio.c	45;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_reg.c	37;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_reg.c	41;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_spi.native.c	43;"	d	file:
DEBUG_PRINTF	libloragw/src/loragw_spi.native.c	47;"	d	file:
DEBUG_SPI	gps_hat/dual_pkt_fwd.c	/^int DEBUG_SPI = 0;    $/;"	v
DEBUG_SPI	gps_hat/hat_pkt_fwd.c	/^int DEBUG_SPI = 0;    $/;"	v
DEBUG_TIMERSYNC	gps_hat/dual_pkt_fwd.c	/^int DEBUG_TIMERSYNC = 0;  $/;"	v
DEBUG_TIMERSYNC	gps_hat/hat_pkt_fwd.c	/^int DEBUG_TIMERSYNC = 0;  $/;"	v
DEBUG_TIMERSYNC	lora_pkt_fwd/inc/trace.h	23;"	d
DEBUG_WARNING	gps_hat/dual_pkt_fwd.c	/^int DEBUG_WARNING = 0;   $/;"	v
DEBUG_WARNING	gps_hat/hat_pkt_fwd.c	/^int DEBUG_WARNING = 0;   $/;"	v
DEBUG_WARNING	lora_pkt_fwd/inc/trace.h	28;"	d
DEFAULT_BAUDRATE	libloragw/src/loragw_gps.c	58;"	d	file:
DEFAULT_BEACON_BW_HZ	lora_pkt_fwd/src/lora_pkt_fwd.c	115;"	d	file:
DEFAULT_BEACON_DATARATE	lora_pkt_fwd/src/lora_pkt_fwd.c	114;"	d	file:
DEFAULT_BEACON_FREQ_HZ	lora_pkt_fwd/src/lora_pkt_fwd.c	111;"	d	file:
DEFAULT_BEACON_FREQ_NB	lora_pkt_fwd/src/lora_pkt_fwd.c	112;"	d	file:
DEFAULT_BEACON_FREQ_STEP	lora_pkt_fwd/src/lora_pkt_fwd.c	113;"	d	file:
DEFAULT_BEACON_INFODESC	lora_pkt_fwd/src/lora_pkt_fwd.c	117;"	d	file:
DEFAULT_BEACON_POWER	lora_pkt_fwd/src/lora_pkt_fwd.c	116;"	d	file:
DEFAULT_BR_KBPS	util_tx_continuous/src/util_tx_continuous.c	58;"	d	file:
DEFAULT_BR_KBPS	util_tx_test/src/util_tx_test.c	53;"	d	file:
DEFAULT_BT	util_tx_continuous/src/util_tx_continuous.c	60;"	d	file:
DEFAULT_BW_KHZ	util_tx_continuous/src/util_tx_continuous.c	57;"	d	file:
DEFAULT_DAC_GAIN	util_tx_continuous/src/util_tx_continuous.c	52;"	d	file:
DEFAULT_DIGITAL_GAIN	util_tx_continuous/src/util_tx_continuous.c	51;"	d	file:
DEFAULT_FDEV_KHZ	util_tx_continuous/src/util_tx_continuous.c	59;"	d	file:
DEFAULT_FDEV_KHZ	util_tx_test/src/util_tx_test.c	54;"	d	file:
DEFAULT_FREQ_HZ	util_tx_continuous/src/util_tx_continuous.c	50;"	d	file:
DEFAULT_KEEPALIVE	gps_hat/dual_pkt_fwd.c	58;"	d	file:
DEFAULT_KEEPALIVE	gps_hat/hat_pkt_fwd.c	58;"	d	file:
DEFAULT_KEEPALIVE	lora_pkt_fwd/src/lora_pkt_fwd.c	78;"	d	file:
DEFAULT_MIXER_GAIN	util_tx_continuous/src/util_tx_continuous.c	53;"	d	file:
DEFAULT_MODULATION	util_tx_continuous/src/util_tx_continuous.c	55;"	d	file:
DEFAULT_MODULATION	util_tx_test/src/util_tx_test.c	52;"	d	file:
DEFAULT_NOTCH_FREQ	libloragw/tst/test_loragw_hal.c	47;"	d	file:
DEFAULT_NOTCH_FREQ	util_tx_continuous/src/util_tx_continuous.c	61;"	d	file:
DEFAULT_NOTCH_FREQ	util_tx_test/src/util_tx_test.c	55;"	d	file:
DEFAULT_PA_GAIN	util_tx_continuous/src/util_tx_continuous.c	54;"	d	file:
DEFAULT_PORT_DW	lora_pkt_fwd/src/lora_pkt_fwd.c	77;"	d	file:
DEFAULT_PORT_UP	lora_pkt_fwd/src/lora_pkt_fwd.c	76;"	d	file:
DEFAULT_RSSI_OFFSET	libloragw/tst/test_loragw_cal.c	49;"	d	file:
DEFAULT_RSSI_OFFSET	libloragw/tst/test_loragw_hal.c	46;"	d	file:
DEFAULT_RSSI_OFFSET	util_tx_continuous/src/util_tx_continuous.c	48;"	d	file:
DEFAULT_RSSI_OFFSET	util_tx_test/src/util_tx_test.c	51;"	d	file:
DEFAULT_SERVER	lora_pkt_fwd/src/lora_pkt_fwd.c	75;"	d	file:
DEFAULT_SF	util_tx_continuous/src/util_tx_continuous.c	56;"	d	file:
DEFAULT_STAT	lora_pkt_fwd/src/lora_pkt_fwd.c	79;"	d	file:
DEFAULT_SX127X_RSSI_OFFSET	util_tx_test/src/util_tx_test.c	56;"	d	file:
DEFAULT_TX_NOTCH_FREQ	libloragw/tst/test_loragw_cal.c	48;"	d	file:
DETECTIONTHRESH_SF6	gps_hat/radio.h	156;"	d
DETECTIONTHRESH_SF7_TO_SF12	gps_hat/radio.h	155;"	d
DOUBLE_SERIALIZATION_FORMAT	lora_pkt_fwd/src/parson.c	39;"	d	file:
DOUBLE_SERIALIZATION_FORMAT	util_pkt_logger/src/parson.c	39;"	d	file:
DR_FSK_MAX	libloragw/inc/loragw_hal.h	108;"	d
DR_FSK_MIN	libloragw/inc/loragw_hal.h	107;"	d
DR_LORA_MULTI	gps_hat/radio.h	184;"	d
DR_LORA_MULTI	libloragw/inc/loragw_hal.h	105;"	d
DR_LORA_SF10	gps_hat/radio.h	181;"	d
DR_LORA_SF10	libloragw/inc/loragw_hal.h	102;"	d
DR_LORA_SF11	gps_hat/radio.h	182;"	d
DR_LORA_SF11	libloragw/inc/loragw_hal.h	103;"	d
DR_LORA_SF12	gps_hat/radio.h	183;"	d
DR_LORA_SF12	libloragw/inc/loragw_hal.h	104;"	d
DR_LORA_SF7	gps_hat/radio.h	178;"	d
DR_LORA_SF7	libloragw/inc/loragw_hal.h	99;"	d
DR_LORA_SF8	gps_hat/radio.h	179;"	d
DR_LORA_SF8	libloragw/inc/loragw_hal.h	100;"	d
DR_LORA_SF9	gps_hat/radio.h	180;"	d
DR_LORA_SF9	libloragw/inc/loragw_hal.h	101;"	d
DR_UNDEFINED	gps_hat/radio.h	177;"	d
DR_UNDEFINED	libloragw/inc/loragw_hal.h	98;"	d
ERROR	gps_hat/parson.c	31;"	d	file:
FETCH_SLEEP_MS	gps_hat/dual_pkt_fwd.c	61;"	d	file:
FETCH_SLEEP_MS	gps_hat/hat_pkt_fwd.c	61;"	d	file:
FETCH_SLEEP_MS	lora_pkt_fwd/src/lora_pkt_fwd.c	83;"	d	file:
FPGA_VERSION	libloragw/src/loragw_reg.c	/^const uint8_t FPGA_VERSION[] = { 31, 33 }; \/* several versions could be supported *\/$/;"	v
FREQ_SIG_NORM	libloragw/tst/test_loragw_cal.c	56;"	d	file:
FW_VERSION_ADDR	libloragw/src/loragw_hal.c	61;"	d	file:
FW_VERSION_ADDR	libloragw/tst/test_loragw_cal.c	53;"	d	file:
FW_VERSION_AGC	libloragw/src/loragw_hal.c	63;"	d	file:
FW_VERSION_ARB	libloragw/src/loragw_hal.c	64;"	d	file:
FW_VERSION_CAL	libloragw/src/loragw_hal.c	62;"	d	file:
FW_VERSION_CAL	libloragw/tst/test_loragw_cal.c	54;"	d	file:
GPIO_IN	gps_hat/radio.h	269;"	d
GPIO_IN	lora_pkt_fwd/inc/radio.h	170;"	d
GPIO_OUT	gps_hat/radio.h	268;"	d
GPIO_OUT	lora_pkt_fwd/inc/radio.h	169;"	d
GPS_FAMILY	libloragw/tst/test_loragw_gps.c	29;"	d	file:
GPS_FAMILY_DEFAULT	libloragw/src/loragw_gps.c	/^    GPS_FAMILY_DEFAULT,$/;"	e	enum:__anon5	file:
GPS_FAMILY_UBX7	libloragw/src/loragw_gps.c	/^    GPS_FAMILY_UBX7,$/;"	e	enum:__anon5	file:
GPS_REF_MAX_AGE	lora_pkt_fwd/src/lora_pkt_fwd.c	82;"	d	file:
HIGH	gps_hat/radio.h	266;"	d
HIGH	lora_pkt_fwd/inc/radio.h	167;"	d
IF_FSK_STD	libloragw/inc/loragw_hal.h	58;"	d
IF_HZ_TO_REG	libloragw/src/loragw_hal.c	50;"	d	file:
IF_LORA_MULTI	libloragw/inc/loragw_hal.h	57;"	d
IF_LORA_STD	libloragw/inc/loragw_hal.h	56;"	d
IF_UNDEFINED	libloragw/inc/loragw_hal.h	55;"	d
IGNORED	libloragw/inc/loragw_gps.h	/^    IGNORED,         \/*!> frame was not parsed by the system *\/$/;"	e	enum:gps_msg
IMMEDIATE	gps_hat/radio.h	22;"	d
IMMEDIATE	libloragw/inc/loragw_hal.h	126;"	d
INCLUDES	libloragw/Makefile	/^INCLUDES = $(wildcard inc\/*.h)$/;"	m
INCLUDES	lora_pkt_fwd/Makefile	/^INCLUDES = $(wildcard inc\/*.h)$/;"	m
INCOMPLETE	libloragw/inc/loragw_gps.h	/^    INCOMPLETE,      \/*!> frame parsed was missing bytes *\/$/;"	e	enum:gps_msg
INVALID	libloragw/inc/loragw_gps.h	/^    INVALID,         \/*!> system try to parse frame but failed *\/$/;"	e	enum:gps_msg
INVERTIQ2_OFF	gps_hat/radio.h	162;"	d
INVERTIQ2_OFF	lora_pkt_fwd/inc/radio.h	127;"	d
INVERTIQ2_ON	gps_hat/radio.h	161;"	d
INVERTIQ2_ON	lora_pkt_fwd/inc/radio.h	126;"	d
INVERTIQ_RX_MASK	gps_hat/radio.h	145;"	d
INVERTIQ_RX_MASK	lora_pkt_fwd/inc/radio.h	119;"	d
INVERTIQ_RX_OFF	gps_hat/radio.h	146;"	d
INVERTIQ_RX_OFF	lora_pkt_fwd/inc/radio.h	120;"	d
INVERTIQ_RX_ON	gps_hat/radio.h	147;"	d
INVERTIQ_RX_ON	lora_pkt_fwd/inc/radio.h	121;"	d
INVERTIQ_TX_MASK	gps_hat/radio.h	148;"	d
INVERTIQ_TX_MASK	lora_pkt_fwd/inc/radio.h	122;"	d
INVERTIQ_TX_OFF	gps_hat/radio.h	149;"	d
INVERTIQ_TX_OFF	lora_pkt_fwd/inc/radio.h	123;"	d
INVERTIQ_TX_ON	gps_hat/radio.h	150;"	d
INVERTIQ_TX_ON	lora_pkt_fwd/inc/radio.h	124;"	d
IRQ_LORA_CDDETD_MASK	gps_hat/radio.h	107;"	d
IRQ_LORA_CDDETD_MASK	lora_pkt_fwd/inc/radio.h	84;"	d
IRQ_LORA_CDDONE_MASK	gps_hat/radio.h	105;"	d
IRQ_LORA_CDDONE_MASK	lora_pkt_fwd/inc/radio.h	82;"	d
IRQ_LORA_CRCERR_MASK	gps_hat/radio.h	102;"	d
IRQ_LORA_CRCERR_MASK	lora_pkt_fwd/inc/radio.h	79;"	d
IRQ_LORA_FHSSCH_MASK	gps_hat/radio.h	106;"	d
IRQ_LORA_FHSSCH_MASK	lora_pkt_fwd/inc/radio.h	83;"	d
IRQ_LORA_HEADER_MASK	gps_hat/radio.h	103;"	d
IRQ_LORA_HEADER_MASK	lora_pkt_fwd/inc/radio.h	80;"	d
IRQ_LORA_RXDONE_MASK	gps_hat/radio.h	101;"	d
IRQ_LORA_RXDONE_MASK	lora_pkt_fwd/inc/radio.h	78;"	d
IRQ_LORA_RXTOUT_MASK	gps_hat/radio.h	100;"	d
IRQ_LORA_RXTOUT_MASK	lora_pkt_fwd/inc/radio.h	77;"	d
IRQ_LORA_TXDONE_MASK	gps_hat/radio.h	104;"	d
IRQ_LORA_TXDONE_MASK	lora_pkt_fwd/inc/radio.h	81;"	d
IS_CONT	lora_pkt_fwd/src/parson.c	52;"	d	file:
IS_CONT	util_pkt_logger/src/parson.c	52;"	d	file:
IS_FSK_BW	libloragw/inc/loragw_hal.h	36;"	d
IS_FSK_DR	libloragw/inc/loragw_hal.h	37;"	d
IS_LORA_BW	libloragw/inc/loragw_hal.h	31;"	d
IS_LORA_CR	libloragw/inc/loragw_hal.h	34;"	d
IS_LORA_MULTI_DR	libloragw/inc/loragw_hal.h	33;"	d
IS_LORA_STD_DR	libloragw/inc/loragw_hal.h	32;"	d
IS_TX_MODE	libloragw/inc/loragw_hal.h	39;"	d
JIT_ERROR_COLLISION_BEACON	gps_hat/jitqueue.h	/^    JIT_ERROR_COLLISION_BEACON, \/* A beacon is planned for this timeframe *\/$/;"	e	enum:jit_error_e
JIT_ERROR_COLLISION_BEACON	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_COLLISION_BEACON, \/* A beacon is planned for this timeframe *\/$/;"	e	enum:jit_error_e
JIT_ERROR_COLLISION_PACKET	gps_hat/jitqueue.h	/^    JIT_ERROR_COLLISION_PACKET, \/* A packet is already enqueued for this timeframe *\/$/;"	e	enum:jit_error_e
JIT_ERROR_COLLISION_PACKET	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_COLLISION_PACKET, \/* A packet is already enqueued for this timeframe *\/$/;"	e	enum:jit_error_e
JIT_ERROR_EMPTY	gps_hat/jitqueue.h	/^    JIT_ERROR_EMPTY,        \/* Downlink queue is empty *\/$/;"	e	enum:jit_error_e
JIT_ERROR_EMPTY	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_EMPTY,        \/* Downlink queue is empty *\/$/;"	e	enum:jit_error_e
JIT_ERROR_FULL	gps_hat/jitqueue.h	/^    JIT_ERROR_FULL,         \/* Downlink queue is full *\/$/;"	e	enum:jit_error_e
JIT_ERROR_FULL	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_FULL,         \/* Downlink queue is full *\/$/;"	e	enum:jit_error_e
JIT_ERROR_GPS_UNLOCKED	gps_hat/jitqueue.h	/^    JIT_ERROR_GPS_UNLOCKED, \/* GPS timestamp could not be used as GPS is unlocked *\/$/;"	e	enum:jit_error_e
JIT_ERROR_GPS_UNLOCKED	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_GPS_UNLOCKED, \/* GPS timestamp could not be used as GPS is unlocked *\/$/;"	e	enum:jit_error_e
JIT_ERROR_INVALID	gps_hat/jitqueue.h	/^    JIT_ERROR_INVALID       \/* Packet is invalid *\/$/;"	e	enum:jit_error_e
JIT_ERROR_INVALID	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_INVALID       \/* Packet is invalid *\/$/;"	e	enum:jit_error_e
JIT_ERROR_OK	gps_hat/jitqueue.h	/^    JIT_ERROR_OK,           \/* Packet ok to be sent *\/$/;"	e	enum:jit_error_e
JIT_ERROR_OK	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_OK,           \/* Packet ok to be sent *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TOO_EARLY	gps_hat/jitqueue.h	/^    JIT_ERROR_TOO_EARLY,    \/* Too early to queue this packet *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TOO_EARLY	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_TOO_EARLY,    \/* Too early to queue this packet *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TOO_LATE	gps_hat/jitqueue.h	/^    JIT_ERROR_TOO_LATE,     \/* Too late to send this packet *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TOO_LATE	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_TOO_LATE,     \/* Too late to send this packet *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TX_FREQ	gps_hat/jitqueue.h	/^    JIT_ERROR_TX_FREQ,      \/* The required frequency for downlink is not supported *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TX_FREQ	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_TX_FREQ,      \/* The required frequency for downlink is not supported *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TX_POWER	gps_hat/jitqueue.h	/^    JIT_ERROR_TX_POWER,     \/* The required power for downlink is not supported *\/$/;"	e	enum:jit_error_e
JIT_ERROR_TX_POWER	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_ERROR_TX_POWER,     \/* The required power for downlink is not supported *\/$/;"	e	enum:jit_error_e
JIT_NUM_BEACON_IN_QUEUE	gps_hat/jitqueue.h	13;"	d
JIT_NUM_BEACON_IN_QUEUE	lora_pkt_fwd/inc/jitqueue.h	34;"	d
JIT_PKT_TYPE_BEACON	gps_hat/jitqueue.h	/^    JIT_PKT_TYPE_BEACON$/;"	e	enum:jit_pkt_type_e
JIT_PKT_TYPE_BEACON	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_PKT_TYPE_BEACON$/;"	e	enum:jit_pkt_type_e
JIT_PKT_TYPE_DOWNLINK_CLASS_A	gps_hat/jitqueue.h	/^    JIT_PKT_TYPE_DOWNLINK_CLASS_A,$/;"	e	enum:jit_pkt_type_e
JIT_PKT_TYPE_DOWNLINK_CLASS_A	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_PKT_TYPE_DOWNLINK_CLASS_A,$/;"	e	enum:jit_pkt_type_e
JIT_PKT_TYPE_DOWNLINK_CLASS_B	gps_hat/jitqueue.h	/^    JIT_PKT_TYPE_DOWNLINK_CLASS_B,$/;"	e	enum:jit_pkt_type_e
JIT_PKT_TYPE_DOWNLINK_CLASS_B	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_PKT_TYPE_DOWNLINK_CLASS_B,$/;"	e	enum:jit_pkt_type_e
JIT_PKT_TYPE_DOWNLINK_CLASS_C	gps_hat/jitqueue.h	/^    JIT_PKT_TYPE_DOWNLINK_CLASS_C,$/;"	e	enum:jit_pkt_type_e
JIT_PKT_TYPE_DOWNLINK_CLASS_C	lora_pkt_fwd/inc/jitqueue.h	/^    JIT_PKT_TYPE_DOWNLINK_CLASS_C,$/;"	e	enum:jit_pkt_type_e
JIT_QUEUE_MAX	gps_hat/jitqueue.h	12;"	d
JIT_QUEUE_MAX	lora_pkt_fwd/inc/jitqueue.h	33;"	d
JSONArray	gps_hat/parson.h	/^    JSONArray   = 5,$/;"	e	enum:json_value_type
JSONArray	lora_pkt_fwd/inc/parson.h	/^    JSONArray   = 5,$/;"	e	enum:json_value_type
JSONArray	util_pkt_logger/inc/parson.h	/^    JSONArray   = 5,$/;"	e	enum:json_value_type
JSONBoolean	gps_hat/parson.h	/^    JSONBoolean = 6$/;"	e	enum:json_value_type
JSONBoolean	lora_pkt_fwd/inc/parson.h	/^    JSONBoolean = 6$/;"	e	enum:json_value_type
JSONBoolean	util_pkt_logger/inc/parson.h	/^    JSONBoolean = 6$/;"	e	enum:json_value_type
JSONError	gps_hat/parson.h	/^    JSONError   = 0,$/;"	e	enum:json_value_type
JSONError	lora_pkt_fwd/inc/parson.h	/^    JSONError   = -1,$/;"	e	enum:json_value_type
JSONError	util_pkt_logger/inc/parson.h	/^    JSONError   = -1,$/;"	e	enum:json_value_type
JSONFailure	lora_pkt_fwd/inc/parson.h	/^    JSONFailure = -1$/;"	e	enum:json_result_t
JSONFailure	util_pkt_logger/inc/parson.h	/^    JSONFailure = -1$/;"	e	enum:json_result_t
JSONNull	gps_hat/parson.h	/^    JSONNull    = 1,$/;"	e	enum:json_value_type
JSONNull	lora_pkt_fwd/inc/parson.h	/^    JSONNull    = 1,$/;"	e	enum:json_value_type
JSONNull	util_pkt_logger/inc/parson.h	/^    JSONNull    = 1,$/;"	e	enum:json_value_type
JSONNumber	gps_hat/parson.h	/^    JSONNumber  = 3,$/;"	e	enum:json_value_type
JSONNumber	lora_pkt_fwd/inc/parson.h	/^    JSONNumber  = 3,$/;"	e	enum:json_value_type
JSONNumber	util_pkt_logger/inc/parson.h	/^    JSONNumber  = 3,$/;"	e	enum:json_value_type
JSONObject	gps_hat/parson.h	/^    JSONObject  = 4,$/;"	e	enum:json_value_type
JSONObject	lora_pkt_fwd/inc/parson.h	/^    JSONObject  = 4,$/;"	e	enum:json_value_type
JSONObject	util_pkt_logger/inc/parson.h	/^    JSONObject  = 4,$/;"	e	enum:json_value_type
JSONString	gps_hat/parson.h	/^    JSONString  = 2,$/;"	e	enum:json_value_type
JSONString	lora_pkt_fwd/inc/parson.h	/^    JSONString  = 2,$/;"	e	enum:json_value_type
JSONString	util_pkt_logger/inc/parson.h	/^    JSONString  = 2,$/;"	e	enum:json_value_type
JSONSuccess	lora_pkt_fwd/inc/parson.h	/^    JSONSuccess = 0,$/;"	e	enum:json_result_t
JSONSuccess	util_pkt_logger/inc/parson.h	/^    JSONSuccess = 0,$/;"	e	enum:json_result_t
JSON_Array	gps_hat/parson.h	/^typedef struct json_array_t  JSON_Array;$/;"	t	typeref:struct:json_array_t
JSON_Array	lora_pkt_fwd/inc/parson.h	/^typedef struct json_array_t  JSON_Array;$/;"	t	typeref:struct:json_array_t
JSON_Array	util_pkt_logger/inc/parson.h	/^typedef struct json_array_t  JSON_Array;$/;"	t	typeref:struct:json_array_t
JSON_Free_Function	lora_pkt_fwd/inc/parson.h	/^typedef void   (*JSON_Free_Function)(void *);$/;"	t
JSON_Free_Function	util_pkt_logger/inc/parson.h	/^typedef void   (*JSON_Free_Function)(void *);$/;"	t
JSON_Malloc_Function	lora_pkt_fwd/inc/parson.h	/^typedef void * (*JSON_Malloc_Function)(size_t);$/;"	t
JSON_Malloc_Function	util_pkt_logger/inc/parson.h	/^typedef void * (*JSON_Malloc_Function)(size_t);$/;"	t
JSON_Object	gps_hat/parson.h	/^typedef struct json_object_t JSON_Object;$/;"	t	typeref:struct:json_object_t
JSON_Object	lora_pkt_fwd/inc/parson.h	/^typedef struct json_object_t JSON_Object;$/;"	t	typeref:struct:json_object_t
JSON_Object	util_pkt_logger/inc/parson.h	/^typedef struct json_object_t JSON_Object;$/;"	t	typeref:struct:json_object_t
JSON_Status	lora_pkt_fwd/inc/parson.h	/^typedef int JSON_Status;$/;"	t
JSON_Status	util_pkt_logger/inc/parson.h	/^typedef int JSON_Status;$/;"	t
JSON_Value	gps_hat/parson.h	/^typedef struct json_value_t  JSON_Value;$/;"	t	typeref:struct:json_value_t
JSON_Value	lora_pkt_fwd/inc/parson.h	/^typedef struct json_value_t  JSON_Value;$/;"	t	typeref:struct:json_value_t
JSON_Value	util_pkt_logger/inc/parson.h	/^typedef struct json_value_t  JSON_Value;$/;"	t	typeref:struct:json_value_t
JSON_Value_Type	gps_hat/parson.h	/^} JSON_Value_Type;$/;"	t	typeref:enum:json_value_type
JSON_Value_Type	lora_pkt_fwd/inc/parson.h	/^typedef int JSON_Value_Type;$/;"	t
JSON_Value_Type	util_pkt_logger/inc/parson.h	/^typedef int JSON_Value_Type;$/;"	t
JSON_Value_Value	gps_hat/parson.c	/^} JSON_Value_Value;$/;"	t	typeref:union:json_value_value	file:
JSON_Value_Value	lora_pkt_fwd/src/parson.c	/^} JSON_Value_Value;$/;"	t	typeref:union:json_value_value	file:
JSON_Value_Value	util_pkt_logger/src/parson.c	/^} JSON_Value_Value;$/;"	t	typeref:union:json_value_value	file:
KEEPALIVE_REC	gps_hat/dual_pkt_fwd.c	63;"	d	file:
LBT_CHANNEL_FREQ_NB	libloragw/inc/loragw_hal.h	156;"	d
LBT_TIMESTAMP_MASK	libloragw/src/loragw_lbt.c	44;"	d	file:
LGWX_LBT_MODE_DFLT	libloragw/inc/loragw_hal.h	/^enum { LGWX_LBT_MODE_DFLT=0, LGWX_LBT_MODE_OFF = 1 };$/;"	e	enum:__anon6
LGWX_LBT_MODE_OFF	libloragw/inc/loragw_hal.h	/^enum { LGWX_LBT_MODE_DFLT=0, LGWX_LBT_MODE_OFF = 1 };$/;"	e	enum:__anon6
LGW_ADDR_CAPTURE_COUNT	libloragw/inc/loragw_reg.h	351;"	d
LGW_ADJUST_MODEM_START_OFFSET_RDX4	libloragw/inc/loragw_reg.h	191;"	d
LGW_ADJUST_MODEM_START_OFFSET_SF12_RDX4	libloragw/inc/loragw_reg.h	192;"	d
LGW_BB_RSSI	libloragw/inc/loragw_reg.h	345;"	d
LGW_BIST0_FINISHED	libloragw/inc/loragw_reg.h	88;"	d
LGW_BIST1_FINISHED	libloragw/inc/loragw_reg.h	89;"	d
LGW_BURST_CHUNK	libloragw/inc/loragw_spi.h	36;"	d
LGW_CAPTURE_FORCE_TRIGGER	libloragw/inc/loragw_reg.h	334;"	d
LGW_CAPTURE_PERIOD	libloragw/inc/loragw_reg.h	336;"	d
LGW_CAPTURE_RAM_ADDR	libloragw/inc/loragw_reg.h	70;"	d
LGW_CAPTURE_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	92;"	d
LGW_CAPTURE_RAM_DATA	libloragw/inc/loragw_reg.h	71;"	d
LGW_CAPTURE_SOURCE	libloragw/inc/loragw_reg.h	332;"	d
LGW_CAPTURE_START	libloragw/inc/loragw_reg.h	333;"	d
LGW_CAPTURE_WRAP	libloragw/inc/loragw_reg.h	335;"	d
LGW_CHANN_AGC_GAIN	libloragw/inc/loragw_reg.h	166;"	d
LGW_CHANN_OVERRIDE_AGC_GAIN	libloragw/inc/loragw_reg.h	165;"	d
LGW_CHANN_RSSI	libloragw/inc/loragw_reg.h	344;"	d
LGW_CHANN_SELECT_RSSI	libloragw/inc/loragw_reg.h	231;"	d
LGW_CHAN_FIR_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	93;"	d
LGW_CHAN_FIR_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	94;"	d
LGW_CHAN_GAIN_OFFSET	libloragw/inc/loragw_reg.h	219;"	d
LGW_CHIP_ID	libloragw/inc/loragw_reg.h	145;"	d
LGW_CHIRP_INVERT_RX	libloragw/inc/loragw_reg.h	197;"	d
LGW_CLEAR_BIST0	libloragw/inc/loragw_reg.h	86;"	d
LGW_CLEAR_BIST1	libloragw/inc/loragw_reg.h	87;"	d
LGW_CLK32M_EN	libloragw/inc/loragw_reg.h	82;"	d
LGW_CLKHS_EN	libloragw/inc/loragw_reg.h	83;"	d
LGW_CONCENTRATOR_MODEM_ENABLE	libloragw/inc/loragw_reg.h	79;"	d
LGW_CORR0_DETECT_EN	libloragw/inc/loragw_reg.h	167;"	d
LGW_CORR0_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	95;"	d
LGW_CORR1_DETECT_EN	libloragw/inc/loragw_reg.h	168;"	d
LGW_CORR1_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	96;"	d
LGW_CORR2_DETECT_EN	libloragw/inc/loragw_reg.h	169;"	d
LGW_CORR2_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	97;"	d
LGW_CORR3_DETECT_EN	libloragw/inc/loragw_reg.h	170;"	d
LGW_CORR3_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	98;"	d
LGW_CORR4_DETECT_EN	libloragw/inc/loragw_reg.h	171;"	d
LGW_CORR4_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	99;"	d
LGW_CORR5_DETECT_EN	libloragw/inc/loragw_reg.h	172;"	d
LGW_CORR5_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	100;"	d
LGW_CORR6_DETECT_EN	libloragw/inc/loragw_reg.h	173;"	d
LGW_CORR6_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	101;"	d
LGW_CORR7_DETECT_EN	libloragw/inc/loragw_reg.h	174;"	d
LGW_CORR7_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	102;"	d
LGW_CORR_MAC_GAIN	libloragw/inc/loragw_reg.h	190;"	d
LGW_CORR_NUM_SAME_PEAK	libloragw/inc/loragw_reg.h	189;"	d
LGW_CORR_SAME_PEAKS_OPTION_SF10	libloragw/inc/loragw_reg.h	179;"	d
LGW_CORR_SAME_PEAKS_OPTION_SF11	libloragw/inc/loragw_reg.h	180;"	d
LGW_CORR_SAME_PEAKS_OPTION_SF12	libloragw/inc/loragw_reg.h	181;"	d
LGW_CORR_SAME_PEAKS_OPTION_SF6	libloragw/inc/loragw_reg.h	175;"	d
LGW_CORR_SAME_PEAKS_OPTION_SF7	libloragw/inc/loragw_reg.h	176;"	d
LGW_CORR_SAME_PEAKS_OPTION_SF8	libloragw/inc/loragw_reg.h	177;"	d
LGW_CORR_SAME_PEAKS_OPTION_SF9	libloragw/inc/loragw_reg.h	178;"	d
LGW_CORR_SIG_NOISE_RATIO_SF10	libloragw/inc/loragw_reg.h	186;"	d
LGW_CORR_SIG_NOISE_RATIO_SF11	libloragw/inc/loragw_reg.h	187;"	d
LGW_CORR_SIG_NOISE_RATIO_SF12	libloragw/inc/loragw_reg.h	188;"	d
LGW_CORR_SIG_NOISE_RATIO_SF6	libloragw/inc/loragw_reg.h	182;"	d
LGW_CORR_SIG_NOISE_RATIO_SF7	libloragw/inc/loragw_reg.h	183;"	d
LGW_CORR_SIG_NOISE_RATIO_SF8	libloragw/inc/loragw_reg.h	184;"	d
LGW_CORR_SIG_NOISE_RATIO_SF9	libloragw/inc/loragw_reg.h	185;"	d
LGW_DATABUFF_SIZE	libloragw/inc/loragw_hal.h	64;"	d
LGW_DATA_MNGT_CPT_FRAME_ALLOCATED	libloragw/inc/loragw_reg.h	385;"	d
LGW_DATA_MNGT_CPT_FRAME_FINISHED	libloragw/inc/loragw_reg.h	386;"	d
LGW_DATA_MNGT_CPT_FRAME_READEN	libloragw/inc/loragw_reg.h	387;"	d
LGW_DATA_MNGT_RAM_BIST0_STATUS	libloragw/inc/loragw_reg.h	136;"	d
LGW_DATA_MNGT_RAM_BIST1_STATUS	libloragw/inc/loragw_reg.h	137;"	d
LGW_DATA_MNGT_STATUS	libloragw/inc/loragw_reg.h	384;"	d
LGW_DBG_AGC_MCU_RAM_ADDR	libloragw/inc/loragw_reg.h	365;"	d
LGW_DBG_AGC_MCU_RAM_DATA	libloragw/inc/loragw_reg.h	349;"	d
LGW_DBG_ARB_MCU_RAM_ADDR	libloragw/inc/loragw_reg.h	364;"	d
LGW_DBG_ARB_MCU_RAM_DATA	libloragw/inc/loragw_reg.h	348;"	d
LGW_DBG_CHANN0_GAIN	libloragw/inc/loragw_reg.h	353;"	d
LGW_DBG_CHANN1_GAIN	libloragw/inc/loragw_reg.h	354;"	d
LGW_DBG_CHANN2_GAIN	libloragw/inc/loragw_reg.h	355;"	d
LGW_DBG_CHANN3_GAIN	libloragw/inc/loragw_reg.h	356;"	d
LGW_DBG_CHANN4_GAIN	libloragw/inc/loragw_reg.h	357;"	d
LGW_DBG_CHANN5_GAIN	libloragw/inc/loragw_reg.h	358;"	d
LGW_DBG_CHANN6_GAIN	libloragw/inc/loragw_reg.h	359;"	d
LGW_DBG_CHANN7_GAIN	libloragw/inc/loragw_reg.h	360;"	d
LGW_DBG_CORR_SELECT_CHANNEL	libloragw/inc/loragw_reg.h	194;"	d
LGW_DBG_CORR_SELECT_SF	libloragw/inc/loragw_reg.h	193;"	d
LGW_DBG_DEC_FILT_GAIN	libloragw/inc/loragw_reg.h	361;"	d
LGW_DBG_DETECT_CPT	libloragw/inc/loragw_reg.h	195;"	d
LGW_DBG_MCU_DATA	libloragw/inc/loragw_reg.h	347;"	d
LGW_DBG_SYMB_CPT	libloragw/inc/loragw_reg.h	196;"	d
LGW_DC_NOTCH_EN	libloragw/inc/loragw_reg.h	198;"	d
LGW_DEC_GAIN_OFFSET	libloragw/inc/loragw_reg.h	218;"	d
LGW_DEC_RSSI	libloragw/inc/loragw_reg.h	346;"	d
LGW_DEFAULT_NOTCH_FREQ	libloragw/inc/loragw_fpga.h	36;"	d
LGW_EMERGENCY_FORCE_HOST_CTRL	libloragw/inc/loragw_reg.h	146;"	d
LGW_FILTER_GAIN	libloragw/inc/loragw_reg.h	153;"	d
LGW_FORCE_DEC_FILTER_GAIN	libloragw/inc/loragw_reg.h	222;"	d
LGW_FORCE_HOST_FE_CTRL	libloragw/inc/loragw_reg.h	221;"	d
LGW_FORCE_HOST_RADIO_CTRL	libloragw/inc/loragw_reg.h	220;"	d
LGW_FPGA_CTRL_ACCESS_HISTO_MEM	libloragw/inc/loragw_fpga.h	55;"	d
LGW_FPGA_CTRL_CLEAR_HISTO_MEM	libloragw/inc/loragw_fpga.h	56;"	d
LGW_FPGA_CTRL_FEATURE_START	libloragw/inc/loragw_fpga.h	49;"	d
LGW_FPGA_CTRL_INPUT_SYNC_I	libloragw/inc/loragw_fpga.h	51;"	d
LGW_FPGA_CTRL_INPUT_SYNC_Q	libloragw/inc/loragw_fpga.h	52;"	d
LGW_FPGA_CTRL_INVERT_IQ	libloragw/inc/loragw_fpga.h	54;"	d
LGW_FPGA_CTRL_OUTPUT_SYNC	libloragw/inc/loragw_fpga.h	53;"	d
LGW_FPGA_CTRL_RADIO_RESET	libloragw/inc/loragw_fpga.h	50;"	d
LGW_FPGA_FEATURE	libloragw/inc/loragw_fpga.h	45;"	d
LGW_FPGA_HISTO_NB_READ	libloragw/inc/loragw_fpga.h	59;"	d
LGW_FPGA_HISTO_RAM_ADDR	libloragw/inc/loragw_fpga.h	57;"	d
LGW_FPGA_HISTO_RAM_DATA	libloragw/inc/loragw_fpga.h	58;"	d
LGW_FPGA_HISTO_SCAN_FREQ	libloragw/inc/loragw_fpga.h	80;"	d
LGW_FPGA_LBT_CH0_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	62;"	d
LGW_FPGA_LBT_CH1_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	63;"	d
LGW_FPGA_LBT_CH2_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	64;"	d
LGW_FPGA_LBT_CH3_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	65;"	d
LGW_FPGA_LBT_CH4_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	66;"	d
LGW_FPGA_LBT_CH5_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	67;"	d
LGW_FPGA_LBT_CH6_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	68;"	d
LGW_FPGA_LBT_CH7_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	69;"	d
LGW_FPGA_LBT_INITIAL_FREQ	libloragw/inc/loragw_fpga.h	46;"	d
LGW_FPGA_LBT_SCAN_TIME_CH0	libloragw/inc/loragw_fpga.h	71;"	d
LGW_FPGA_LBT_SCAN_TIME_CH1	libloragw/inc/loragw_fpga.h	72;"	d
LGW_FPGA_LBT_SCAN_TIME_CH2	libloragw/inc/loragw_fpga.h	73;"	d
LGW_FPGA_LBT_SCAN_TIME_CH3	libloragw/inc/loragw_fpga.h	74;"	d
LGW_FPGA_LBT_SCAN_TIME_CH4	libloragw/inc/loragw_fpga.h	75;"	d
LGW_FPGA_LBT_SCAN_TIME_CH5	libloragw/inc/loragw_fpga.h	76;"	d
LGW_FPGA_LBT_SCAN_TIME_CH6	libloragw/inc/loragw_fpga.h	77;"	d
LGW_FPGA_LBT_SCAN_TIME_CH7	libloragw/inc/loragw_fpga.h	78;"	d
LGW_FPGA_LBT_TIMESTAMP_CH	libloragw/inc/loragw_fpga.h	60;"	d
LGW_FPGA_LBT_TIMESTAMP_SELECT_CH	libloragw/inc/loragw_fpga.h	61;"	d
LGW_FPGA_NOTCH_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	81;"	d
LGW_FPGA_RSSI_TARGET	libloragw/inc/loragw_fpga.h	79;"	d
LGW_FPGA_SCAN_FREQ_OFFSET	libloragw/inc/loragw_fpga.h	70;"	d
LGW_FPGA_SOFT_RESET	libloragw/inc/loragw_fpga.h	44;"	d
LGW_FPGA_STATUS	libloragw/inc/loragw_fpga.h	48;"	d
LGW_FPGA_TOTALREGS	libloragw/inc/loragw_fpga.h	82;"	d
LGW_FPGA_VERSION	libloragw/inc/loragw_fpga.h	47;"	d
LGW_FRAME_SYNCH_GAIN	libloragw/inc/loragw_reg.h	210;"	d
LGW_FRAME_SYNCH_PEAK1_POS	libloragw/inc/loragw_reg.h	207;"	d
LGW_FRAME_SYNCH_PEAK2_POS	libloragw/inc/loragw_reg.h	208;"	d
LGW_FREQ_TO_TIME_DRIFT	libloragw/inc/loragw_reg.h	203;"	d
LGW_FREQ_TO_TIME_INVERT	libloragw/inc/loragw_reg.h	202;"	d
LGW_FSK_AUTO_AFC_ON	libloragw/inc/loragw_reg.h	310;"	d
LGW_FSK_BROADCAST	libloragw/inc/loragw_reg.h	309;"	d
LGW_FSK_BR_RATIO	libloragw/inc/loragw_reg.h	299;"	d
LGW_FSK_CH_BW_EXPO	libloragw/inc/loragw_reg.h	289;"	d
LGW_FSK_CRC_EN	libloragw/inc/loragw_reg.h	294;"	d
LGW_FSK_CRC_IBM	libloragw/inc/loragw_reg.h	296;"	d
LGW_FSK_DCFREE_ENC	libloragw/inc/loragw_reg.h	295;"	d
LGW_FSK_ERROR_OSR_TOL	libloragw/inc/loragw_reg.h	297;"	d
LGW_FSK_MODEM_ENABLE	libloragw/inc/loragw_reg.h	80;"	d
LGW_FSK_MODEM_INVERT_IQ	libloragw/inc/loragw_reg.h	152;"	d
LGW_FSK_NODE_ADRS	libloragw/inc/loragw_reg.h	308;"	d
LGW_FSK_PATTERN_TIMEOUT_CFG	libloragw/inc/loragw_reg.h	311;"	d
LGW_FSK_PKT_LENGTH	libloragw/inc/loragw_reg.h	302;"	d
LGW_FSK_PKT_MODE	libloragw/inc/loragw_reg.h	292;"	d
LGW_FSK_PSIZE	libloragw/inc/loragw_reg.h	293;"	d
LGW_FSK_RADIO_SELECT	libloragw/inc/loragw_reg.h	298;"	d
LGW_FSK_REF_PATTERN_LSB	libloragw/inc/loragw_reg.h	300;"	d
LGW_FSK_REF_PATTERN_MSB	libloragw/inc/loragw_reg.h	301;"	d
LGW_FSK_RSSI_LENGTH	libloragw/inc/loragw_reg.h	290;"	d
LGW_FSK_RX_INVERT	libloragw/inc/loragw_reg.h	291;"	d
LGW_FSK_TX_GAUSSIAN_EN	libloragw/inc/loragw_reg.h	303;"	d
LGW_FSK_TX_GAUSSIAN_SELECT_BT	libloragw/inc/loragw_reg.h	304;"	d
LGW_FSK_TX_PATTERN_EN	libloragw/inc/loragw_reg.h	305;"	d
LGW_FSK_TX_PREAMBLE_SEQ	libloragw/inc/loragw_reg.h	306;"	d
LGW_FSK_TX_PSIZE	libloragw/inc/loragw_reg.h	307;"	d
LGW_GLOBAL_EN	libloragw/inc/loragw_reg.h	81;"	d
LGW_GPIO_MODE	libloragw/inc/loragw_reg.h	140;"	d
LGW_GPIO_PIN_REG_IN	libloragw/inc/loragw_reg.h	141;"	d
LGW_GPIO_PIN_REG_OUT	libloragw/inc/loragw_reg.h	142;"	d
LGW_GPIO_SELECT_INPUT	libloragw/inc/loragw_reg.h	138;"	d
LGW_GPIO_SELECT_OUTPUT	libloragw/inc/loragw_reg.h	139;"	d
LGW_GPS_EN	libloragw/inc/loragw_reg.h	379;"	d
LGW_GPS_ERROR	libloragw/inc/loragw_gps.h	90;"	d
LGW_GPS_MIN_MSG_SIZE	libloragw/inc/loragw_gps.h	92;"	d
LGW_GPS_NMEA_SYNC_CHAR	libloragw/inc/loragw_gps.h	94;"	d
LGW_GPS_POL	libloragw/inc/loragw_reg.h	380;"	d
LGW_GPS_SUCCESS	libloragw/inc/loragw_gps.h	89;"	d
LGW_GPS_UBX_SYNC_CHAR	libloragw/inc/loragw_gps.h	93;"	d
LGW_HAL_ERROR	libloragw/inc/loragw_hal.h	46;"	d
LGW_HAL_SUCCESS	libloragw/inc/loragw_hal.h	45;"	d
LGW_IFMODEM_CONFIG	libloragw/inc/loragw_hal.h	67;"	d
LGW_IF_CHAIN_NB	libloragw/inc/loragw_hal.h	62;"	d
LGW_IF_FREQ_0	libloragw/inc/loragw_reg.h	155;"	d
LGW_IF_FREQ_1	libloragw/inc/loragw_reg.h	156;"	d
LGW_IF_FREQ_2	libloragw/inc/loragw_reg.h	157;"	d
LGW_IF_FREQ_3	libloragw/inc/loragw_reg.h	158;"	d
LGW_IF_FREQ_4	libloragw/inc/loragw_reg.h	159;"	d
LGW_IF_FREQ_5	libloragw/inc/loragw_reg.h	160;"	d
LGW_IF_FREQ_6	libloragw/inc/loragw_reg.h	161;"	d
LGW_IF_FREQ_7	libloragw/inc/loragw_reg.h	162;"	d
LGW_IF_FREQ_8	libloragw/inc/loragw_reg.h	163;"	d
LGW_IF_FREQ_9	libloragw/inc/loragw_reg.h	164;"	d
LGW_IMPLICIT_CODING_RATE	libloragw/inc/loragw_reg.h	200;"	d
LGW_IMPLICIT_CRC_EN	libloragw/inc/loragw_reg.h	199;"	d
LGW_IMPLICIT_PAYLOAD_LENGHT	libloragw/inc/loragw_reg.h	201;"	d
LGW_INC	util_pkt_logger/Makefile	/^LGW_INC = $(LGW_PATH)\/inc\/config.h$/;"	m
LGW_INC	util_tx_continuous/Makefile	/^LGW_INC = $(LGW_PATH)\/inc\/config.h$/;"	m
LGW_INC	util_tx_test/Makefile	/^LGW_INC = $(LGW_PATH)\/inc\/config.h$/;"	m
LGW_IQ_MISMATCH_A_AMP_COEFF	libloragw/inc/loragw_reg.h	238;"	d
LGW_IQ_MISMATCH_A_PHI_COEFF	libloragw/inc/loragw_reg.h	239;"	d
LGW_IQ_MISMATCH_B_AMP_COEFF	libloragw/inc/loragw_reg.h	240;"	d
LGW_IQ_MISMATCH_B_PHI_COEFF	libloragw/inc/loragw_reg.h	242;"	d
LGW_IQ_MISMATCH_B_SEL_I	libloragw/inc/loragw_reg.h	241;"	d
LGW_LBT_ERROR	libloragw/inc/loragw_lbt.h	31;"	d
LGW_LBT_ISSUE	libloragw/inc/loragw_hal.h	47;"	d
LGW_LBT_SUCCESS	libloragw/inc/loragw_lbt.h	30;"	d
LGW_LLR_SCALE	libloragw/inc/loragw_reg.h	212;"	d
LGW_LNA_A_CTRL_LUT	libloragw/inc/loragw_reg.h	328;"	d
LGW_LNA_A_EN	libloragw/inc/loragw_reg.h	323;"	d
LGW_LNA_B_CTRL_LUT	libloragw/inc/loragw_reg.h	330;"	d
LGW_LNA_B_EN	libloragw/inc/loragw_reg.h	325;"	d
LGW_MAX_NOTCH_FREQ	libloragw/inc/loragw_fpga.h	35;"	d
LGW_MAX_PAYLOAD_LEN	libloragw/inc/loragw_reg.h	215;"	d
LGW_MBWSSF_AGC_FREEZE_ON_DETECT	libloragw/inc/loragw_reg.h	264;"	d
LGW_MBWSSF_DETECT_MIN_SINGLE_PEAK	libloragw/inc/loragw_reg.h	270;"	d
LGW_MBWSSF_DETECT_TRIG_SAME_PEAK_NB	libloragw/inc/loragw_reg.h	271;"	d
LGW_MBWSSF_FRAME_SYNCH_GAIN	libloragw/inc/loragw_reg.h	268;"	d
LGW_MBWSSF_FRAME_SYNCH_PEAK1_POS	libloragw/inc/loragw_reg.h	265;"	d
LGW_MBWSSF_FRAME_SYNCH_PEAK2_POS	libloragw/inc/loragw_reg.h	266;"	d
LGW_MBWSSF_FREQ_TO_TIME_DRIFT	libloragw/inc/loragw_reg.h	273;"	d
LGW_MBWSSF_FREQ_TO_TIME_INVERT	libloragw/inc/loragw_reg.h	272;"	d
LGW_MBWSSF_IMPLICIT_CODING_RATE	libloragw/inc/loragw_reg.h	262;"	d
LGW_MBWSSF_IMPLICIT_CRC_EN	libloragw/inc/loragw_reg.h	261;"	d
LGW_MBWSSF_IMPLICIT_HEADER	libloragw/inc/loragw_reg.h	260;"	d
LGW_MBWSSF_IMPLICIT_PAYLOAD_LENGHT	libloragw/inc/loragw_reg.h	263;"	d
LGW_MBWSSF_LLR_SCALE	libloragw/inc/loragw_reg.h	282;"	d
LGW_MBWSSF_MAX_PAYLOAD_LEN	libloragw/inc/loragw_reg.h	287;"	d
LGW_MBWSSF_MODEM_BW	libloragw/inc/loragw_reg.h	279;"	d
LGW_MBWSSF_MODEM_ENABLE	libloragw/inc/loragw_reg.h	78;"	d
LGW_MBWSSF_MODEM_INVERT_IQ	libloragw/inc/loragw_reg.h	149;"	d
LGW_MBWSSF_ONLY_CRC_EN	libloragw/inc/loragw_reg.h	286;"	d
LGW_MBWSSF_PAYLOAD_FINE_TIMING_GAIN	libloragw/inc/loragw_reg.h	275;"	d
LGW_MBWSSF_PPM_CORRECTION	libloragw/inc/loragw_reg.h	274;"	d
LGW_MBWSSF_PPM_OFFSET	libloragw/inc/loragw_reg.h	284;"	d
LGW_MBWSSF_PREAMBLE_FINE_TIMING_GAIN	libloragw/inc/loragw_reg.h	276;"	d
LGW_MBWSSF_PREAMBLE_SYMB1_NB	libloragw/inc/loragw_reg.h	267;"	d
LGW_MBWSSF_RADIO_SELECT	libloragw/inc/loragw_reg.h	280;"	d
LGW_MBWSSF_RATE_SF	libloragw/inc/loragw_reg.h	285;"	d
LGW_MBWSSF_RX_CHIRP_INVERT	libloragw/inc/loragw_reg.h	281;"	d
LGW_MBWSSF_SNR_AVG_CST	libloragw/inc/loragw_reg.h	283;"	d
LGW_MBWSSF_SYNCH_DETECT_TH	libloragw/inc/loragw_reg.h	269;"	d
LGW_MBWSSF_TRACKING_INTEGRAL	libloragw/inc/loragw_reg.h	277;"	d
LGW_MBWSSF_ZERO_PAD	libloragw/inc/loragw_reg.h	278;"	d
LGW_MCU_AGC_DATA_RAM_BIST0_STATUS	libloragw/inc/loragw_reg.h	130;"	d
LGW_MCU_AGC_DATA_RAM_BIST1_STATUS	libloragw/inc/loragw_reg.h	131;"	d
LGW_MCU_AGC_PROG_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	90;"	d
LGW_MCU_AGC_STATUS	libloragw/inc/loragw_reg.h	143;"	d
LGW_MCU_ARB_DATA_RAM_BIST0_STATUS	libloragw/inc/loragw_reg.h	132;"	d
LGW_MCU_ARB_DATA_RAM_BIST1_STATUS	libloragw/inc/loragw_reg.h	133;"	d
LGW_MCU_ARB_PROG_RAM_BIST_STATUS	libloragw/inc/loragw_reg.h	91;"	d
LGW_MCU_ARB_STATUS	libloragw/inc/loragw_reg.h	144;"	d
LGW_MCU_CORRUPTION_DETECTED_0	libloragw/inc/loragw_reg.h	227;"	d
LGW_MCU_CORRUPTION_DETECTED_1	libloragw/inc/loragw_reg.h	228;"	d
LGW_MCU_PROM_ADDR	libloragw/inc/loragw_reg.h	72;"	d
LGW_MCU_PROM_DATA	libloragw/inc/loragw_reg.h	73;"	d
LGW_MCU_RST_0	libloragw/inc/loragw_reg.h	223;"	d
LGW_MCU_RST_1	libloragw/inc/loragw_reg.h	224;"	d
LGW_MCU_SELECT_EDGE_0	libloragw/inc/loragw_reg.h	229;"	d
LGW_MCU_SELECT_EDGE_1	libloragw/inc/loragw_reg.h	230;"	d
LGW_MCU_SELECT_MUX_0	libloragw/inc/loragw_reg.h	225;"	d
LGW_MCU_SELECT_MUX_1	libloragw/inc/loragw_reg.h	226;"	d
LGW_MIN_NOTCH_FREQ	libloragw/inc/loragw_fpga.h	34;"	d
LGW_MISC_RADIO_EN	libloragw/inc/loragw_reg.h	151;"	d
LGW_MODEM0_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	103;"	d
LGW_MODEM0_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	111;"	d
LGW_MODEM0_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	119;"	d
LGW_MODEM1_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	104;"	d
LGW_MODEM1_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	112;"	d
LGW_MODEM1_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	120;"	d
LGW_MODEM2_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	105;"	d
LGW_MODEM2_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	113;"	d
LGW_MODEM2_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	121;"	d
LGW_MODEM3_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	106;"	d
LGW_MODEM3_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	114;"	d
LGW_MODEM3_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	122;"	d
LGW_MODEM4_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	107;"	d
LGW_MODEM4_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	115;"	d
LGW_MODEM4_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	123;"	d
LGW_MODEM5_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	108;"	d
LGW_MODEM5_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	116;"	d
LGW_MODEM5_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	124;"	d
LGW_MODEM6_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	109;"	d
LGW_MODEM6_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	117;"	d
LGW_MODEM6_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	125;"	d
LGW_MODEM7_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	110;"	d
LGW_MODEM7_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	118;"	d
LGW_MODEM7_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	126;"	d
LGW_MODEM_INVERT_IQ	libloragw/inc/loragw_reg.h	148;"	d
LGW_MODEM_MBWSSF_RAM0_BIST_STATUS	libloragw/inc/loragw_reg.h	127;"	d
LGW_MODEM_MBWSSF_RAM1_BIST_STATUS	libloragw/inc/loragw_reg.h	128;"	d
LGW_MODEM_MBWSSF_RAM2_BIST_STATUS	libloragw/inc/loragw_reg.h	129;"	d
LGW_MODEM_STATUS	libloragw/inc/loragw_reg.h	337;"	d
LGW_MULTI_NB	libloragw/inc/loragw_hal.h	66;"	d
LGW_NEXT_PACKET_CNT	libloragw/inc/loragw_reg.h	350;"	d
LGW_ONLY_CRC_EN	libloragw/inc/loragw_reg.h	216;"	d
LGW_PACKET_DATA_FIFO_PTR	libloragw/inc/loragw_reg.h	363;"	d
LGW_PAGE_REG	libloragw/inc/loragw_reg.h	63;"	d
LGW_PATH	lora_pkt_fwd/Makefile	/^LGW_PATH ?= ..\/libloragw$/;"	m
LGW_PATH	util_pkt_logger/Makefile	/^LGW_PATH ?= ..\/libloragw$/;"	m
LGW_PATH	util_tx_continuous/Makefile	/^LGW_PATH ?= ..\/libloragw$/;"	m
LGW_PATH	util_tx_test/Makefile	/^LGW_PATH ?= ..\/libloragw$/;"	m
LGW_PAYLOAD_FINE_TIMING_GAIN	libloragw/inc/loragw_reg.h	204;"	d
LGW_PA_A_CTRL_LUT	libloragw/inc/loragw_reg.h	329;"	d
LGW_PA_A_EN	libloragw/inc/loragw_reg.h	324;"	d
LGW_PA_B_CTRL_LUT	libloragw/inc/loragw_reg.h	331;"	d
LGW_PA_B_EN	libloragw/inc/loragw_reg.h	326;"	d
LGW_PA_GAIN	libloragw/inc/loragw_reg.h	327;"	d
LGW_PKT_FIFO_SIZE	libloragw/inc/loragw_hal.h	63;"	d
LGW_PPM_OFFSET	libloragw/inc/loragw_reg.h	214;"	d
LGW_PREAMBLE_FINE_TIMING_GAIN	libloragw/inc/loragw_reg.h	205;"	d
LGW_PREAMBLE_SYMB1_NB	libloragw/inc/loragw_reg.h	209;"	d
LGW_RADIO_A_EN	libloragw/inc/loragw_reg.h	320;"	d
LGW_RADIO_B_EN	libloragw/inc/loragw_reg.h	321;"	d
LGW_RADIO_RST	libloragw/inc/loragw_reg.h	322;"	d
LGW_RADIO_SELECT	libloragw/inc/loragw_reg.h	154;"	d
LGW_RADIO_TYPE_NONE	libloragw/inc/loragw_hal.h	/^    LGW_RADIO_TYPE_NONE,$/;"	e	enum:lgw_radio_type_e
LGW_RADIO_TYPE_SX1255	libloragw/inc/loragw_hal.h	/^    LGW_RADIO_TYPE_SX1255,$/;"	e	enum:lgw_radio_type_e
LGW_RADIO_TYPE_SX1257	libloragw/inc/loragw_hal.h	/^    LGW_RADIO_TYPE_SX1257,$/;"	e	enum:lgw_radio_type_e
LGW_RADIO_TYPE_SX1272	libloragw/inc/loragw_hal.h	/^    LGW_RADIO_TYPE_SX1272,$/;"	e	enum:lgw_radio_type_e
LGW_RADIO_TYPE_SX1276	libloragw/inc/loragw_hal.h	/^    LGW_RADIO_TYPE_SX1276$/;"	e	enum:lgw_radio_type_e
LGW_REF_BW	libloragw/inc/loragw_hal.h	65;"	d
LGW_REG_ERROR	libloragw/inc/loragw_fpga.h	32;"	d
LGW_REG_ERROR	libloragw/inc/loragw_radio.h	29;"	d
LGW_REG_ERROR	libloragw/inc/loragw_reg.h	54;"	d
LGW_REG_SUCCESS	libloragw/inc/loragw_fpga.h	31;"	d
LGW_REG_SUCCESS	libloragw/inc/loragw_radio.h	28;"	d
LGW_REG_SUCCESS	libloragw/inc/loragw_reg.h	53;"	d
LGW_RF_CHAIN_NB	libloragw/inc/loragw_hal.h	51;"	d
LGW_RF_RX_BANDWIDTH	libloragw/inc/loragw_hal.h	52;"	d
LGW_RF_RX_BANDWIDTH_125KHZ	libloragw/src/loragw_hal.c	84;"	d	file:
LGW_RF_RX_BANDWIDTH_250KHZ	libloragw/src/loragw_hal.c	85;"	d	file:
LGW_RF_RX_BANDWIDTH_500KHZ	libloragw/src/loragw_hal.c	86;"	d	file:
LGW_RSSI_BB_DEFAULT_VALUE	libloragw/inc/loragw_reg.h	232;"	d
LGW_RSSI_BB_FILTER_ALPHA	libloragw/inc/loragw_reg.h	235;"	d
LGW_RSSI_CHANN_DEFAULT_VALUE	libloragw/inc/loragw_reg.h	234;"	d
LGW_RSSI_CHANN_FILTER_ALPHA	libloragw/inc/loragw_reg.h	237;"	d
LGW_RSSI_DEC_DEFAULT_VALUE	libloragw/inc/loragw_reg.h	233;"	d
LGW_RSSI_DEC_FILTER_ALPHA	libloragw/inc/loragw_reg.h	236;"	d
LGW_RX_DATA_BUF_ADDR	libloragw/inc/loragw_reg.h	66;"	d
LGW_RX_DATA_BUF_DATA	libloragw/inc/loragw_reg.h	67;"	d
LGW_RX_EDGE_SELECT	libloragw/inc/loragw_reg.h	150;"	d
LGW_RX_INVERT_IQ	libloragw/inc/loragw_reg.h	147;"	d
LGW_RX_PACKET_DATA_FIFO_ADDR_POINTER	libloragw/inc/loragw_reg.h	75;"	d
LGW_RX_PACKET_DATA_FIFO_NUM_STORED	libloragw/inc/loragw_reg.h	74;"	d
LGW_RX_PACKET_DATA_FIFO_PAYLOAD_SIZE	libloragw/inc/loragw_reg.h	77;"	d
LGW_RX_PACKET_DATA_FIFO_STATUS	libloragw/inc/loragw_reg.h	76;"	d
LGW_SIG_ANALYSER_AVG_LEN	libloragw/inc/loragw_reg.h	372;"	d
LGW_SIG_ANALYSER_EN	libloragw/inc/loragw_reg.h	371;"	d
LGW_SIG_ANALYSER_FREQ	libloragw/inc/loragw_reg.h	376;"	d
LGW_SIG_ANALYSER_I_OUT	libloragw/inc/loragw_reg.h	377;"	d
LGW_SIG_ANALYSER_PRECISION	libloragw/inc/loragw_reg.h	373;"	d
LGW_SIG_ANALYSER_Q_OUT	libloragw/inc/loragw_reg.h	378;"	d
LGW_SIG_ANALYSER_VALID_OUT	libloragw/inc/loragw_reg.h	374;"	d
LGW_SIG_GEN_ANALYSER_MUX_SEL	libloragw/inc/loragw_reg.h	369;"	d
LGW_SIG_GEN_EN	libloragw/inc/loragw_reg.h	370;"	d
LGW_SIG_GEN_FREQ	libloragw/inc/loragw_reg.h	375;"	d
LGW_SNR_AVG_CST	libloragw/inc/loragw_reg.h	213;"	d
LGW_SOFT_RESET	libloragw/inc/loragw_reg.h	64;"	d
LGW_SPI_DATA_FIFO_PTR	libloragw/inc/loragw_reg.h	362;"	d
LGW_SPI_ERROR	libloragw/inc/loragw_spi.h	35;"	d
LGW_SPI_MASTER_CHIP_SELECT_POLARITY	libloragw/inc/loragw_reg.h	366;"	d
LGW_SPI_MASTER_CPHA	libloragw/inc/loragw_reg.h	368;"	d
LGW_SPI_MASTER_CPOL	libloragw/inc/loragw_reg.h	367;"	d
LGW_SPI_MUX_MODE0	libloragw/inc/loragw_spi.h	38;"	d
LGW_SPI_MUX_MODE1	libloragw/inc/loragw_spi.h	39;"	d
LGW_SPI_MUX_TARGET_EEPROM	libloragw/inc/loragw_spi.h	43;"	d
LGW_SPI_MUX_TARGET_FPGA	libloragw/inc/loragw_spi.h	42;"	d
LGW_SPI_MUX_TARGET_SX127X	libloragw/inc/loragw_spi.h	44;"	d
LGW_SPI_MUX_TARGET_SX1301	libloragw/inc/loragw_spi.h	41;"	d
LGW_SPI_RADIO_A__ADDR	libloragw/inc/loragw_reg.h	314;"	d
LGW_SPI_RADIO_A__CS	libloragw/inc/loragw_reg.h	315;"	d
LGW_SPI_RADIO_A__DATA	libloragw/inc/loragw_reg.h	312;"	d
LGW_SPI_RADIO_A__DATA_READBACK	libloragw/inc/loragw_reg.h	313;"	d
LGW_SPI_RADIO_B__ADDR	libloragw/inc/loragw_reg.h	318;"	d
LGW_SPI_RADIO_B__CS	libloragw/inc/loragw_reg.h	319;"	d
LGW_SPI_RADIO_B__DATA	libloragw/inc/loragw_reg.h	316;"	d
LGW_SPI_RADIO_B__DATA_READBACK	libloragw/inc/loragw_reg.h	317;"	d
LGW_SPI_SUCCESS	libloragw/inc/loragw_spi.h	34;"	d
LGW_START_BIST0	libloragw/inc/loragw_reg.h	84;"	d
LGW_START_BIST1	libloragw/inc/loragw_reg.h	85;"	d
LGW_SW_TEST_REG1	libloragw/inc/loragw_reg.h	381;"	d
LGW_SW_TEST_REG2	libloragw/inc/loragw_reg.h	382;"	d
LGW_SW_TEST_REG3	libloragw/inc/loragw_reg.h	383;"	d
LGW_SX127X_RXBW_100K_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_100K_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_10K4_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_10K4_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_125K_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_125K_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_12K5_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_12K5_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_15K6_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_15K6_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_166K7_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_166K7_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_200K_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_200K_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_20K8_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_20K8_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_250K_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_250K_HZ$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_25K_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_25K_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_2K6_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_2K6_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_31K3_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_31K3_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_3K1_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_3K1_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_3K9_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_3K9_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_41K7_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_41K7_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_50K_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_50K_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_5K2_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_5K2_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_62K5_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_62K5_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_6K3_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_6K3_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_7K8_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_7K8_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SX127X_RXBW_83K3_HZ	libloragw/inc/loragw_radio.h	/^    LGW_SX127X_RXBW_83K3_HZ,$/;"	e	enum:lgw_sx127x_rxbw_e
LGW_SYNCH_DETECT_TH	libloragw/inc/loragw_reg.h	211;"	d
LGW_TIMESTAMP	libloragw/inc/loragw_reg.h	352;"	d
LGW_TOTALREGS	libloragw/inc/loragw_reg.h	390;"	d
LGW_TRACKING_INTEGRAL	libloragw/inc/loragw_reg.h	206;"	d
LGW_TX_CHIRP_LOW_PASS	libloragw/inc/loragw_reg.h	257;"	d
LGW_TX_DATA_BUF_ADDR	libloragw/inc/loragw_reg.h	68;"	d
LGW_TX_DATA_BUF_DATA	libloragw/inc/loragw_reg.h	69;"	d
LGW_TX_EDGE_SELECT	libloragw/inc/loragw_reg.h	254;"	d
LGW_TX_EDGE_SELECT_TOP	libloragw/inc/loragw_reg.h	255;"	d
LGW_TX_FCC_WIDEBAND	libloragw/inc/loragw_reg.h	258;"	d
LGW_TX_FRAME_SYNCH_PEAK1_POS	libloragw/inc/loragw_reg.h	247;"	d
LGW_TX_FRAME_SYNCH_PEAK2_POS	libloragw/inc/loragw_reg.h	248;"	d
LGW_TX_GAIN	libloragw/inc/loragw_reg.h	256;"	d
LGW_TX_MODE	libloragw/inc/loragw_reg.h	252;"	d
LGW_TX_OFFSET_I	libloragw/inc/loragw_reg.h	250;"	d
LGW_TX_OFFSET_Q	libloragw/inc/loragw_reg.h	251;"	d
LGW_TX_RAMP_DURATION	libloragw/inc/loragw_reg.h	249;"	d
LGW_TX_START_DELAY	libloragw/inc/loragw_reg.h	246;"	d
LGW_TX_STATUS	libloragw/inc/loragw_reg.h	288;"	d
LGW_TX_SWAP_IQ	libloragw/inc/loragw_reg.h	259;"	d
LGW_TX_TOP_RAM_BIST0_STATUS	libloragw/inc/loragw_reg.h	134;"	d
LGW_TX_TOP_RAM_BIST1_STATUS	libloragw/inc/loragw_reg.h	135;"	d
LGW_TX_TRIG_ALL	libloragw/inc/loragw_reg.h	388;"	d
LGW_TX_TRIG_DELAYED	libloragw/inc/loragw_reg.h	244;"	d
LGW_TX_TRIG_GPS	libloragw/inc/loragw_reg.h	245;"	d
LGW_TX_TRIG_IMMEDIATE	libloragw/inc/loragw_reg.h	243;"	d
LGW_TX_ZERO_PAD	libloragw/inc/loragw_reg.h	253;"	d
LGW_VALID_HEADER_COUNTER_0	libloragw/inc/loragw_reg.h	338;"	d
LGW_VALID_HEADER_COUNTER_FSK	libloragw/inc/loragw_reg.h	341;"	d
LGW_VALID_HEADER_COUNTER_MBWSSF	libloragw/inc/loragw_reg.h	340;"	d
LGW_VALID_PACKET_COUNTER_0	libloragw/inc/loragw_reg.h	339;"	d
LGW_VALID_PACKET_COUNTER_FSK	libloragw/inc/loragw_reg.h	343;"	d
LGW_VALID_PACKET_COUNTER_MBWSSF	libloragw/inc/loragw_reg.h	342;"	d
LGW_VERSION	libloragw/inc/loragw_reg.h	65;"	d
LGW_XTAL_FREQU	libloragw/inc/loragw_hal.h	50;"	d
LGW_ZERO_PAD	libloragw/inc/loragw_reg.h	217;"	d
LIBLORAGW_VERSION	libloragw/Makefile	/^LIBLORAGW_VERSION := `cat ..\/VERSION`$/;"	m
LIBS	libloragw/Makefile	/^LIBS := -lloragw -lrt -lm$/;"	m
LIBS	lora_pkt_fwd/Makefile	/^LIBS := -lloragw -lrt -lpthread -lm$/;"	m
LIBS	util_pkt_logger/Makefile	/^LIBS := -lloragw -lrt -lm$/;"	m
LIBS	util_tx_continuous/Makefile	/^LIBS := -lloragw -lrt -lm$/;"	m
LIBS	util_tx_test/Makefile	/^LIBS := -lloragw -lrt -lm$/;"	m
LNA_LOW_GAIN	gps_hat/radio.h	83;"	d
LNA_LOW_GAIN	lora_pkt_fwd/inc/radio.h	60;"	d
LNA_MAX_GAIN	gps_hat/radio.h	81;"	d
LNA_MAX_GAIN	lora_pkt_fwd/inc/radio.h	58;"	d
LNA_OFF_GAIN	gps_hat/radio.h	82;"	d
LNA_OFF_GAIN	lora_pkt_fwd/inc/radio.h	59;"	d
LORA_MAC_PREAMBLE	gps_hat/radio.h	75;"	d
LORA_MAC_PREAMBLE	lora_pkt_fwd/inc/radio.h	53;"	d
LOW	gps_hat/radio.h	265;"	d
LOW	lora_pkt_fwd/inc/radio.h	166;"	d
MAP_DIO0_LORA_RXDONE	gps_hat/radio.h	111;"	d
MAP_DIO0_LORA_RXDONE	lora_pkt_fwd/inc/radio.h	88;"	d
MAP_DIO0_LORA_TXDONE	gps_hat/radio.h	112;"	d
MAP_DIO0_LORA_TXDONE	lora_pkt_fwd/inc/radio.h	89;"	d
MAP_DIO1_LORA_NOP	gps_hat/radio.h	114;"	d
MAP_DIO1_LORA_NOP	lora_pkt_fwd/inc/radio.h	91;"	d
MAP_DIO1_LORA_RXTOUT	gps_hat/radio.h	113;"	d
MAP_DIO1_LORA_RXTOUT	lora_pkt_fwd/inc/radio.h	90;"	d
MAP_DIO2_LORA_NOP	gps_hat/radio.h	115;"	d
MAP_DIO2_LORA_NOP	lora_pkt_fwd/inc/radio.h	92;"	d
MAX	gps_hat/parson.c	40;"	d	file:
MAX	lora_pkt_fwd/src/parson.c	44;"	d	file:
MAX	util_pkt_logger/src/parson.c	44;"	d	file:
MAXLINE	gps_hat/radio.h	139;"	d
MAXLINE	lora_pkt_fwd/inc/radio.h	129;"	d
MAX_NESTING	gps_hat/parson.c	36;"	d	file:
MAX_NESTING	lora_pkt_fwd/src/parson.c	38;"	d	file:
MAX_NESTING	util_pkt_logger/src/parson.c	38;"	d	file:
MCU_AGC	libloragw/src/loragw_hal.c	58;"	d	file:
MCU_AGC	libloragw/tst/test_loragw_cal.c	51;"	d	file:
MCU_AGC_FW_BYTE	libloragw/src/loragw_hal.c	60;"	d	file:
MCU_AGC_FW_BYTE	libloragw/tst/test_loragw_cal.c	52;"	d	file:
MCU_ARB	libloragw/src/loragw_hal.c	57;"	d	file:
MCU_ARB_FW_BYTE	libloragw/src/loragw_hal.c	59;"	d	file:
MINUS_10PPM	libloragw/src/loragw_gps.c	57;"	d	file:
MIN_FSK_PREAMB	lora_pkt_fwd/src/lora_pkt_fwd.c	102;"	d	file:
MIN_FSK_PREAMBLE	libloragw/src/loragw_hal.c	74;"	d	file:
MIN_LORA_PREAMB	gps_hat/dual_pkt_fwd.c	74;"	d	file:
MIN_LORA_PREAMB	gps_hat/hat_pkt_fwd.c	75;"	d	file:
MIN_LORA_PREAMB	lora_pkt_fwd/src/lora_pkt_fwd.c	100;"	d	file:
MIN_LORA_PREAMBLE	libloragw/src/loragw_hal.c	72;"	d	file:
MOD_FSK	gps_hat/dual_pkt_fwd.c	132;"	d	file:
MOD_FSK	gps_hat/hat_pkt_fwd.c	133;"	d	file:
MOD_FSK	libloragw/inc/loragw_hal.h	83;"	d
MOD_LORA	gps_hat/dual_pkt_fwd.c	131;"	d	file:
MOD_LORA	gps_hat/hat_pkt_fwd.c	132;"	d	file:
MOD_LORA	libloragw/inc/loragw_hal.h	82;"	d
MOD_UNDEFINED	gps_hat/dual_pkt_fwd.c	130;"	d	file:
MOD_UNDEFINED	gps_hat/hat_pkt_fwd.c	131;"	d	file:
MOD_UNDEFINED	libloragw/inc/loragw_hal.h	81;"	d
MSG	gps_hat/radio.h	26;"	d
MSG	lora_pkt_fwd/inc/trace.h	32;"	d
MSG	util_ack/src/util_ack.c	47;"	d	file:
MSG	util_pkt_logger/src/util_pkt_logger.c	44;"	d	file:
MSG	util_sink/src/util_sink.c	46;"	d	file:
MSG	util_tx_continuous/src/util_tx_continuous.c	45;"	d	file:
MSG	util_tx_test/src/util_tx_test.c	45;"	d	file:
MSG_DEBUG	gps_hat/radio.h	27;"	d
MSG_DEBUG	lora_pkt_fwd/inc/trace.h	33;"	d
MSG_INFO	lora_pkt_fwd/inc/trace.h	39;"	d
MSG_LOG	gps_hat/radio.h	33;"	d
NB_CAL_MAX	libloragw/tst/test_loragw_cal.c	50;"	d	file:
NB_PKT_MAX	lora_pkt_fwd/src/lora_pkt_fwd.c	98;"	d	file:
NMEA_GBS	libloragw/inc/loragw_gps.h	/^    NMEA_GBS,        \/*!> GNSS Satellite Fault Detection *\/$/;"	e	enum:gps_msg
NMEA_GGA	libloragw/inc/loragw_gps.h	/^    NMEA_GGA,        \/*!> Global positioning system fix data (pos + alt) *\/$/;"	e	enum:gps_msg
NMEA_GLL	libloragw/inc/loragw_gps.h	/^    NMEA_GLL,        \/*!> Latitude and longitude, with time fix and status *\/$/;"	e	enum:gps_msg
NMEA_GNS	libloragw/inc/loragw_gps.h	/^    NMEA_GNS,        \/*!> GNSS fix data (pos + alt, sat number) *\/$/;"	e	enum:gps_msg
NMEA_GSA	libloragw/inc/loragw_gps.h	/^    NMEA_GSA,        \/*!> GNSS DOP and Active Satellites (sat number) *\/$/;"	e	enum:gps_msg
NMEA_GST	libloragw/inc/loragw_gps.h	/^    NMEA_GST,        \/*!> GNSS Pseudo Range Error Statistics *\/$/;"	e	enum:gps_msg
NMEA_GSV	libloragw/inc/loragw_gps.h	/^    NMEA_GSV,        \/*!> GNSS Satellites in View (sat SNR) *\/$/;"	e	enum:gps_msg
NMEA_RMC	libloragw/inc/loragw_gps.h	/^    NMEA_RMC,        \/*!> Recommended Minimum data (time + date) *\/$/;"	e	enum:gps_msg
NMEA_TXT	libloragw/inc/loragw_gps.h	/^    NMEA_TXT,        \/*!> Text Transmission *\/$/;"	e	enum:gps_msg
NMEA_VTG	libloragw/inc/loragw_gps.h	/^    NMEA_VTG,        \/*!> Course over ground and Ground speed *\/$/;"	e	enum:gps_msg
NMEA_ZDA	libloragw/inc/loragw_gps.h	/^    NMEA_ZDA,        \/*!> Time and Date *\/$/;"	e	enum:gps_msg
OBJDIR	libloragw/Makefile	/^OBJDIR = obj$/;"	m
OBJDIR	lora_pkt_fwd/Makefile	/^OBJDIR = obj$/;"	m
OBJDIR	util_ack/Makefile	/^OBJDIR = obj$/;"	m
OBJDIR	util_pkt_logger/Makefile	/^OBJDIR = obj$/;"	m
OBJDIR	util_sink/Makefile	/^OBJDIR = obj$/;"	m
OBJDIR	util_tx_continuous/Makefile	/^OBJDIR = obj$/;"	m
OBJDIR	util_tx_test/Makefile	/^OBJDIR = obj$/;"	m
OBJECT_MAX_CAPACITY	gps_hat/parson.c	35;"	d	file:
OBJECT_MAX_CAPACITY	lora_pkt_fwd/src/parson.c	37;"	d	file:
OBJECT_MAX_CAPACITY	util_pkt_logger/src/parson.c	37;"	d	file:
ON_GPS	gps_hat/radio.h	24;"	d
ON_GPS	libloragw/inc/loragw_hal.h	128;"	d
OPMODE_CAD	gps_hat/radio.h	96;"	d
OPMODE_CAD	lora_pkt_fwd/inc/radio.h	73;"	d
OPMODE_FSRX	gps_hat/radio.h	93;"	d
OPMODE_FSRX	lora_pkt_fwd/inc/radio.h	70;"	d
OPMODE_FSTX	gps_hat/radio.h	91;"	d
OPMODE_FSTX	lora_pkt_fwd/inc/radio.h	68;"	d
OPMODE_LORA	gps_hat/radio.h	87;"	d
OPMODE_LORA	lora_pkt_fwd/inc/radio.h	64;"	d
OPMODE_MASK	gps_hat/radio.h	88;"	d
OPMODE_MASK	lora_pkt_fwd/inc/radio.h	65;"	d
OPMODE_RX	gps_hat/radio.h	94;"	d
OPMODE_RX	lora_pkt_fwd/inc/radio.h	71;"	d
OPMODE_RX_SINGLE	gps_hat/radio.h	95;"	d
OPMODE_RX_SINGLE	lora_pkt_fwd/inc/radio.h	72;"	d
OPMODE_SLEEP	gps_hat/radio.h	89;"	d
OPMODE_SLEEP	lora_pkt_fwd/inc/radio.h	66;"	d
OPMODE_STANDBY	gps_hat/radio.h	90;"	d
OPMODE_STANDBY	lora_pkt_fwd/inc/radio.h	67;"	d
OPMODE_TX	gps_hat/radio.h	92;"	d
OPMODE_TX	lora_pkt_fwd/inc/radio.h	69;"	d
PAGE_ADDR	libloragw/src/loragw_reg.c	48;"	d	file:
PAGE_MASK	libloragw/src/loragw_reg.c	49;"	d	file:
PARSON_VERSION	gps_hat/parson.h	35;"	d
PAYLOAD_LENGTH	gps_hat/radio.h	77;"	d
PAYLOAD_LENGTH	lora_pkt_fwd/inc/radio.h	50;"	d
PKT_PULL_ACK	gps_hat/dual_pkt_fwd.c	71;"	d	file:
PKT_PULL_ACK	gps_hat/hat_pkt_fwd.c	71;"	d	file:
PKT_PULL_ACK	lora_pkt_fwd/src/lora_pkt_fwd.c	95;"	d	file:
PKT_PULL_ACK	util_ack/src/util_ack.c	58;"	d	file:
PKT_PULL_DATA	gps_hat/dual_pkt_fwd.c	69;"	d	file:
PKT_PULL_DATA	gps_hat/hat_pkt_fwd.c	69;"	d	file:
PKT_PULL_DATA	lora_pkt_fwd/src/lora_pkt_fwd.c	93;"	d	file:
PKT_PULL_DATA	util_ack/src/util_ack.c	56;"	d	file:
PKT_PULL_RESP	gps_hat/dual_pkt_fwd.c	70;"	d	file:
PKT_PULL_RESP	gps_hat/hat_pkt_fwd.c	70;"	d	file:
PKT_PULL_RESP	lora_pkt_fwd/src/lora_pkt_fwd.c	94;"	d	file:
PKT_PULL_RESP	util_ack/src/util_ack.c	57;"	d	file:
PKT_PUSH_ACK	gps_hat/dual_pkt_fwd.c	68;"	d	file:
PKT_PUSH_ACK	gps_hat/hat_pkt_fwd.c	68;"	d	file:
PKT_PUSH_ACK	lora_pkt_fwd/src/lora_pkt_fwd.c	92;"	d	file:
PKT_PUSH_ACK	util_ack/src/util_ack.c	55;"	d	file:
PKT_PUSH_DATA	gps_hat/dual_pkt_fwd.c	67;"	d	file:
PKT_PUSH_DATA	gps_hat/hat_pkt_fwd.c	67;"	d	file:
PKT_PUSH_DATA	lora_pkt_fwd/src/lora_pkt_fwd.c	91;"	d	file:
PKT_PUSH_DATA	util_ack/src/util_ack.c	54;"	d	file:
PKT_TX_ACK	gps_hat/dual_pkt_fwd.c	72;"	d	file:
PKT_TX_ACK	gps_hat/hat_pkt_fwd.c	72;"	d	file:
PKT_TX_ACK	lora_pkt_fwd/src/lora_pkt_fwd.c	96;"	d	file:
PLL_LOCK_MAX_ATTEMPTS	libloragw/src/loragw_radio.c	75;"	d	file:
PLUS_10PPM	libloragw/src/loragw_gps.c	56;"	d	file:
PROTOCOL_VERSION	gps_hat/dual_pkt_fwd.c	65;"	d	file:
PROTOCOL_VERSION	gps_hat/hat_pkt_fwd.c	65;"	d	file:
PROTOCOL_VERSION	lora_pkt_fwd/src/lora_pkt_fwd.c	86;"	d	file:
PROTOCOL_VERSION	util_ack/src/util_ack.c	52;"	d	file:
PULL_TIMEOUT_MS	gps_hat/dual_pkt_fwd.c	60;"	d	file:
PULL_TIMEOUT_MS	gps_hat/hat_pkt_fwd.c	60;"	d	file:
PULL_TIMEOUT_MS	lora_pkt_fwd/src/lora_pkt_fwd.c	81;"	d	file:
PUSH_PATH	gps_hat/dual_pkt_fwd.c	80;"	d	file:
PUSH_PATH	gps_hat/hat_pkt_fwd.c	81;"	d	file:
PUSH_TIMEOUT_MS	gps_hat/dual_pkt_fwd.c	59;"	d	file:
PUSH_TIMEOUT_MS	gps_hat/hat_pkt_fwd.c	59;"	d	file:
PUSH_TIMEOUT_MS	lora_pkt_fwd/src/lora_pkt_fwd.c	80;"	d	file:
QUEUESIZE	gps_hat/radio.h	258;"	d
RADIO1	gps_hat/single_rx_tx.c	28;"	d	file:
RADIO2	gps_hat/single_rx_tx.c	29;"	d	file:
RADIOHEAD	gps_hat/single_rx_tx.c	26;"	d	file:
RAM_SIZE	libloragw/tst/test_loragw_cal.c	55;"	d	file:
READ_ACCESS	gps_hat/radio.h	271;"	d
READ_ACCESS	libloragw/src/loragw_spi.native.c	54;"	d	file:
READ_ACCESS	lora_pkt_fwd/inc/radio.h	172;"	d
REG_DETECTION_OPTIMIZE	gps_hat/radio.h	68;"	d
REG_DETECTION_OPTIMIZE	lora_pkt_fwd/inc/radio.h	44;"	d
REG_DETECTION_THRESHOLD	gps_hat/radio.h	69;"	d
REG_DETECTION_THRESHOLD	lora_pkt_fwd/inc/radio.h	45;"	d
REG_DIO_MAPPING_1	gps_hat/radio.h	51;"	d
REG_DIO_MAPPING_1	lora_pkt_fwd/inc/radio.h	27;"	d
REG_DIO_MAPPING_2	gps_hat/radio.h	52;"	d
REG_DIO_MAPPING_2	lora_pkt_fwd/inc/radio.h	28;"	d
REG_FIFO	gps_hat/radio.h	43;"	d
REG_FIFO	lora_pkt_fwd/inc/radio.h	19;"	d
REG_FIFO_ADDR_PTR	gps_hat/radio.h	45;"	d
REG_FIFO_ADDR_PTR	lora_pkt_fwd/inc/radio.h	21;"	d
REG_FIFO_RX_BASE_AD	gps_hat/radio.h	47;"	d
REG_FIFO_RX_BASE_AD	lora_pkt_fwd/inc/radio.h	23;"	d
REG_FIFO_RX_CURRENT_ADDR	gps_hat/radio.h	49;"	d
REG_FIFO_RX_CURRENT_ADDR	lora_pkt_fwd/inc/radio.h	25;"	d
REG_FIFO_TX_BASE_AD	gps_hat/radio.h	46;"	d
REG_FIFO_TX_BASE_AD	lora_pkt_fwd/inc/radio.h	22;"	d
REG_FRF_LSB	gps_hat/radio.h	127;"	d
REG_FRF_LSB	lora_pkt_fwd/inc/radio.h	104;"	d
REG_FRF_MID	gps_hat/radio.h	126;"	d
REG_FRF_MID	lora_pkt_fwd/inc/radio.h	103;"	d
REG_FRF_MSB	gps_hat/radio.h	125;"	d
REG_FRF_MSB	lora_pkt_fwd/inc/radio.h	102;"	d
REG_HOP_PERIOD	gps_hat/radio.h	61;"	d
REG_HOP_PERIOD	lora_pkt_fwd/inc/radio.h	37;"	d
REG_INVERTIQ	gps_hat/radio.h	132;"	d
REG_INVERTIQ	lora_pkt_fwd/inc/radio.h	109;"	d
REG_INVERTIQ2	gps_hat/radio.h	133;"	d
REG_INVERTIQ2	lora_pkt_fwd/inc/radio.h	110;"	d
REG_IRQ_FLAGS	gps_hat/radio.h	50;"	d
REG_IRQ_FLAGS	lora_pkt_fwd/inc/radio.h	26;"	d
REG_IRQ_FLAGS_MASK	gps_hat/radio.h	59;"	d
REG_IRQ_FLAGS_MASK	lora_pkt_fwd/inc/radio.h	35;"	d
REG_LNA	gps_hat/radio.h	80;"	d
REG_LNA	lora_pkt_fwd/inc/radio.h	57;"	d
REG_MAX_PAYLOAD_LENGTH	gps_hat/radio.h	60;"	d
REG_MAX_PAYLOAD_LENGTH	lora_pkt_fwd/inc/radio.h	36;"	d
REG_MODEM_CONFIG	gps_hat/radio.h	53;"	d
REG_MODEM_CONFIG	lora_pkt_fwd/inc/radio.h	29;"	d
REG_MODEM_CONFIG2	gps_hat/radio.h	54;"	d
REG_MODEM_CONFIG2	lora_pkt_fwd/inc/radio.h	30;"	d
REG_MODEM_CONFIG3	gps_hat/radio.h	55;"	d
REG_MODEM_CONFIG3	lora_pkt_fwd/inc/radio.h	31;"	d
REG_OPMODE	gps_hat/radio.h	44;"	d
REG_OPMODE	lora_pkt_fwd/inc/radio.h	20;"	d
REG_PACONFIG	gps_hat/radio.h	129;"	d
REG_PACONFIG	lora_pkt_fwd/inc/radio.h	106;"	d
REG_PADAC	gps_hat/radio.h	64;"	d
REG_PADAC	lora_pkt_fwd/inc/radio.h	40;"	d
REG_PARAMP	gps_hat/radio.h	130;"	d
REG_PARAMP	lora_pkt_fwd/inc/radio.h	107;"	d
REG_PAYLOAD_LENGTH	gps_hat/radio.h	58;"	d
REG_PAYLOAD_LENGTH	lora_pkt_fwd/inc/radio.h	34;"	d
REG_PKTRSSI	gps_hat/radio.h	65;"	d
REG_PKTRSSI	lora_pkt_fwd/inc/radio.h	41;"	d
REG_PKT_SNR_VALUE	gps_hat/radio.h	57;"	d
REG_PKT_SNR_VALUE	lora_pkt_fwd/inc/radio.h	33;"	d
REG_PREAMBLE_LSB	gps_hat/radio.h	72;"	d
REG_PREAMBLE_LSB	lora_pkt_fwd/inc/radio.h	48;"	d
REG_PREAMBLE_MSB	gps_hat/radio.h	71;"	d
REG_PREAMBLE_MSB	lora_pkt_fwd/inc/radio.h	47;"	d
REG_RSSI	gps_hat/radio.h	66;"	d
REG_RSSI	lora_pkt_fwd/inc/radio.h	42;"	d
REG_RX_NB_BYTES	gps_hat/radio.h	48;"	d
REG_RX_NB_BYTES	lora_pkt_fwd/inc/radio.h	24;"	d
REG_SYMB_TIMEOUT_LSB	gps_hat/radio.h	56;"	d
REG_SYMB_TIMEOUT_LSB	lora_pkt_fwd/inc/radio.h	32;"	d
REG_SYNC_WORD	gps_hat/radio.h	62;"	d
REG_SYNC_WORD	lora_pkt_fwd/inc/radio.h	38;"	d
REG_VERSION	gps_hat/radio.h	63;"	d
REG_VERSION	lora_pkt_fwd/inc/radio.h	39;"	d
RELEASE_VERSION	lora_pkt_fwd/Makefile	/^RELEASE_VERSION := `cat ..\/VERSION`$/;"	m
RSSI_FSK_POLY_0	libloragw/src/loragw_hal.c	78;"	d	file:
RSSI_FSK_POLY_1	libloragw/src/loragw_hal.c	79;"	d	file:
RSSI_FSK_POLY_2	libloragw/src/loragw_hal.c	80;"	d	file:
RSSI_MULTI_BIAS	libloragw/src/loragw_hal.c	77;"	d	file:
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG1	gps_hat/radio.h	136;"	d
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG1	lora_pkt_fwd/inc/radio.h	113;"	d
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG2	gps_hat/radio.h	137;"	d
RXLORA_RXMODE_RSSI_REG_MODEM_CONFIG2	lora_pkt_fwd/inc/radio.h	114;"	d
RXMODE_RSSI	gps_hat/radio.h	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon1
RXMODE_RSSI	lora_pkt_fwd/inc/radio.h	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon3
RXMODE_SCAN	gps_hat/radio.h	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon1
RXMODE_SCAN	lora_pkt_fwd/inc/radio.h	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon3
RXMODE_SINGLE	gps_hat/radio.h	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon1
RXMODE_SINGLE	lora_pkt_fwd/inc/radio.h	/^enum { RXMODE_SINGLE, RXMODE_SCAN, RXMODE_RSSI };$/;"	e	enum:__anon3
RXRF_TIMEOUT_S	gps_hat/hat_pkt_fwd.c	63;"	d	file:
RX_METADATA_NB	libloragw/src/loragw_hal.c	67;"	d	file:
RX_MODE	gps_hat/single_rx_tx.c	25;"	d	file:
RX_OFF	libloragw/inc/loragw_hal.h	148;"	d
RX_ON	libloragw/inc/loragw_hal.h	149;"	d
RX_STATUS	libloragw/inc/loragw_hal.h	135;"	d
RX_STATUS_UNKNOWN	libloragw/inc/loragw_hal.h	147;"	d
RX_SUSPENDED	libloragw/inc/loragw_hal.h	150;"	d
RxBwExp	libloragw/src/loragw_radio.c	/^    uint8_t     RxBwExp;$/;"	m	struct:lgw_sx127x_FSK_bandwidth_s	file:
RxBwKHz	libloragw/src/loragw_radio.c	/^    uint32_t    RxBwKHz;$/;"	m	struct:lgw_sx127x_FSK_bandwidth_s	file:
RxBwMant	libloragw/src/loragw_radio.c	/^    uint8_t     RxBwMant;$/;"	m	struct:lgw_sx127x_FSK_bandwidth_s	file:
SET_PPM_ON	libloragw/src/loragw_hal.c	51;"	d	file:
SF10	gps_hat/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF10	lora_pkt_fwd/inc/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF11	gps_hat/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF11	lora_pkt_fwd/inc/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF12	gps_hat/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF12	lora_pkt_fwd/inc/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF7	gps_hat/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF7	lora_pkt_fwd/inc/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF8	gps_hat/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF8	lora_pkt_fwd/inc/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF9	gps_hat/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SF9	lora_pkt_fwd/inc/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	e	enum:sf_t
SIZEOF_TOKEN	lora_pkt_fwd/src/parson.c	41;"	d	file:
SIZEOF_TOKEN	util_pkt_logger/src/parson.c	41;"	d	file:
SKIP_CHAR	lora_pkt_fwd/src/parson.c	42;"	d	file:
SKIP_CHAR	util_pkt_logger/src/parson.c	42;"	d	file:
SKIP_WHITESPACES	lora_pkt_fwd/src/parson.c	43;"	d	file:
SKIP_WHITESPACES	util_pkt_logger/src/parson.c	43;"	d	file:
SPI_DEV_PATH	libloragw/src/loragw_spi.native.c	57;"	d	file:
SPI_DEV_RADIO	lora_pkt_fwd/inc/radio.h	175;"	d
SPI_DEV_RX	gps_hat/radio.h	274;"	d
SPI_DEV_TX	gps_hat/radio.h	275;"	d
SPI_SPEED	gps_hat/radio.h	273;"	d
SPI_SPEED	libloragw/src/loragw_spi.native.c	56;"	d	file:
SPI_SPEED	lora_pkt_fwd/inc/radio.h	174;"	d
STARTING_CAPACITY	gps_hat/parson.c	33;"	d	file:
STARTING_CAPACITY	lora_pkt_fwd/src/parson.c	35;"	d	file:
STARTING_CAPACITY	util_pkt_logger/src/parson.c	35;"	d	file:
STATUS_SIZE	gps_hat/dual_pkt_fwd.c	78;"	d	file:
STATUS_SIZE	gps_hat/hat_pkt_fwd.c	79;"	d	file:
STATUS_SIZE	lora_pkt_fwd/src/lora_pkt_fwd.c	105;"	d	file:
STAT_CRC_BAD	libloragw/inc/loragw_hal.h	122;"	d
STAT_CRC_OK	libloragw/inc/loragw_hal.h	123;"	d
STAT_NO_CRC	libloragw/inc/loragw_hal.h	121;"	d
STAT_UNDEFINED	libloragw/inc/loragw_hal.h	120;"	d
STD_FSK_PREAMB	lora_pkt_fwd/src/lora_pkt_fwd.c	103;"	d	file:
STD_FSK_PREAMBLE	libloragw/src/loragw_hal.c	75;"	d	file:
STD_LORA_PREAMB	gps_hat/dual_pkt_fwd.c	75;"	d	file:
STD_LORA_PREAMB	gps_hat/hat_pkt_fwd.c	76;"	d	file:
STD_LORA_PREAMB	lora_pkt_fwd/src/lora_pkt_fwd.c	101;"	d	file:
STD_LORA_PREAMBLE	libloragw/src/loragw_hal.c	73;"	d	file:
STR	lora_pkt_fwd/src/lora_pkt_fwd.c	66;"	d	file:
STR	util_ack/src/util_ack.c	46;"	d	file:
STR	util_sink/src/util_sink.c	45;"	d	file:
STRINGIFY	lora_pkt_fwd/src/lora_pkt_fwd.c	65;"	d	file:
STRINGIFY	util_ack/src/util_ack.c	45;"	d	file:
STRINGIFY	util_sink/src/util_sink.c	44;"	d	file:
SUCCESS	gps_hat/parson.c	32;"	d	file:
SX125x_32MHz_FRAC	libloragw/inc/loragw_radio.h	31;"	d
SX125x_ADC_TEMP	libloragw/inc/loragw_sx125x.h	45;"	d
SX125x_LNA_ZIN	libloragw/inc/loragw_sx125x.h	40;"	d
SX125x_RX_ADC_BW	libloragw/inc/loragw_sx125x.h	41;"	d
SX125x_RX_ADC_TRIM	libloragw/inc/loragw_sx125x.h	42;"	d
SX125x_RX_BB_BW	libloragw/inc/loragw_sx125x.h	43;"	d
SX125x_RX_BB_GAIN	libloragw/inc/loragw_sx125x.h	39;"	d
SX125x_RX_LNA_GAIN	libloragw/inc/loragw_sx125x.h	38;"	d
SX125x_RX_PLL_BW	libloragw/inc/loragw_sx125x.h	44;"	d
SX125x_TX_ANA_BW	libloragw/inc/loragw_sx125x.h	36;"	d
SX125x_TX_DAC_BW	libloragw/inc/loragw_sx125x.h	37;"	d
SX125x_TX_DAC_CLK_SEL	libloragw/inc/loragw_sx125x.h	32;"	d
SX125x_TX_DAC_GAIN	libloragw/inc/loragw_sx125x.h	33;"	d
SX125x_TX_MIX_GAIN	libloragw/inc/loragw_sx125x.h	34;"	d
SX125x_TX_PLL_BW	libloragw/inc/loragw_sx125x.h	35;"	d
SX125x_XOSC_DISABLE	libloragw/inc/loragw_sx125x.h	47;"	d
SX125x_XOSC_GM_STARTUP	libloragw/inc/loragw_sx125x.h	46;"	d
SX1272_REG_AFCBW	libloragw/inc/loragw_sx1272_fsk.h	45;"	d
SX1272_REG_AFCFEI	libloragw/inc/loragw_sx1272_fsk.h	52;"	d
SX1272_REG_AFCLSB	libloragw/inc/loragw_sx1272_fsk.h	54;"	d
SX1272_REG_AFCMSB	libloragw/inc/loragw_sx1272_fsk.h	53;"	d
SX1272_REG_AGCREF	libloragw/inc/loragw_sx1272_fsk.h	101;"	d
SX1272_REG_AGCTHRESH1	libloragw/inc/loragw_sx1272_fsk.h	102;"	d
SX1272_REG_AGCTHRESH2	libloragw/inc/loragw_sx1272_fsk.h	103;"	d
SX1272_REG_AGCTHRESH3	libloragw/inc/loragw_sx1272_fsk.h	104;"	d
SX1272_REG_BITRATEFRAC	libloragw/inc/loragw_sx1272_fsk.h	111;"	d
SX1272_REG_BITRATELSB	libloragw/inc/loragw_sx1272_fsk.h	27;"	d
SX1272_REG_BITRATEMSB	libloragw/inc/loragw_sx1272_fsk.h	26;"	d
SX1272_REG_BROADCASTADRS	libloragw/inc/loragw_sx1272_fsk.h	80;"	d
SX1272_REG_DIOMAPPING1	libloragw/inc/loragw_sx1272_fsk.h	96;"	d
SX1272_REG_DIOMAPPING2	libloragw/inc/loragw_sx1272_fsk.h	97;"	d
SX1272_REG_FDEVLSB	libloragw/inc/loragw_sx1272_fsk.h	29;"	d
SX1272_REG_FDEVMSB	libloragw/inc/loragw_sx1272_fsk.h	28;"	d
SX1272_REG_FEILSB	libloragw/inc/loragw_sx1272_fsk.h	56;"	d
SX1272_REG_FEIMSB	libloragw/inc/loragw_sx1272_fsk.h	55;"	d
SX1272_REG_FIFO	libloragw/inc/loragw_sx1272_fsk.h	23;"	d
SX1272_REG_FIFOTHRESH	libloragw/inc/loragw_sx1272_fsk.h	81;"	d
SX1272_REG_FORMERTEMP	libloragw/inc/loragw_sx1272_fsk.h	110;"	d
SX1272_REG_FRFLSB	libloragw/inc/loragw_sx1272_fsk.h	32;"	d
SX1272_REG_FRFMID	libloragw/inc/loragw_sx1272_fsk.h	31;"	d
SX1272_REG_FRFMSB	libloragw/inc/loragw_sx1272_fsk.h	30;"	d
SX1272_REG_IMAGECAL	libloragw/inc/loragw_sx1272_fsk.h	89;"	d
SX1272_REG_IRQFLAGS1	libloragw/inc/loragw_sx1272_fsk.h	93;"	d
SX1272_REG_IRQFLAGS2	libloragw/inc/loragw_sx1272_fsk.h	94;"	d
SX1272_REG_LNA	libloragw/inc/loragw_sx1272_fsk.h	38;"	d
SX1272_REG_LOWBAT	libloragw/inc/loragw_sx1272_fsk.h	91;"	d
SX1272_REG_LR_AGCREF	libloragw/inc/loragw_sx1272_lora.h	78;"	d
SX1272_REG_LR_AGCTHRESH1	libloragw/inc/loragw_sx1272_lora.h	79;"	d
SX1272_REG_LR_AGCTHRESH2	libloragw/inc/loragw_sx1272_lora.h	80;"	d
SX1272_REG_LR_AGCTHRESH3	libloragw/inc/loragw_sx1272_lora.h	81;"	d
SX1272_REG_LR_DETECTIONTHRESHOLD	libloragw/inc/loragw_sx1272_lora.h	67;"	d
SX1272_REG_LR_DETECTOPTIMIZE	libloragw/inc/loragw_sx1272_lora.h	65;"	d
SX1272_REG_LR_DIOMAPPING1	libloragw/inc/loragw_sx1272_lora.h	73;"	d
SX1272_REG_LR_DIOMAPPING2	libloragw/inc/loragw_sx1272_lora.h	74;"	d
SX1272_REG_LR_FEILSB	libloragw/inc/loragw_sx1272_lora.h	63;"	d
SX1272_REG_LR_FEIMID	libloragw/inc/loragw_sx1272_lora.h	62;"	d
SX1272_REG_LR_FEIMSB	libloragw/inc/loragw_sx1272_lora.h	61;"	d
SX1272_REG_LR_FIFO	libloragw/inc/loragw_sx1272_lora.h	23;"	d
SX1272_REG_LR_FIFOADDRPTR	libloragw/inc/loragw_sx1272_lora.h	36;"	d
SX1272_REG_LR_FIFORXBASEADDR	libloragw/inc/loragw_sx1272_lora.h	38;"	d
SX1272_REG_LR_FIFORXBYTEADDR	libloragw/inc/loragw_sx1272_lora.h	60;"	d
SX1272_REG_LR_FIFORXCURRENTADDR	libloragw/inc/loragw_sx1272_lora.h	39;"	d
SX1272_REG_LR_FIFOTXBASEADDR	libloragw/inc/loragw_sx1272_lora.h	37;"	d
SX1272_REG_LR_FORMERTEMP	libloragw/inc/loragw_sx1272_lora.h	87;"	d
SX1272_REG_LR_FRFLSB	libloragw/inc/loragw_sx1272_lora.h	28;"	d
SX1272_REG_LR_FRFMID	libloragw/inc/loragw_sx1272_lora.h	27;"	d
SX1272_REG_LR_FRFMSB	libloragw/inc/loragw_sx1272_lora.h	26;"	d
SX1272_REG_LR_HOPCHANNEL	libloragw/inc/loragw_sx1272_lora.h	51;"	d
SX1272_REG_LR_HOPPERIOD	libloragw/inc/loragw_sx1272_lora.h	59;"	d
SX1272_REG_LR_INVERTIQ	libloragw/inc/loragw_sx1272_lora.h	66;"	d
SX1272_REG_LR_INVERTIQ2	libloragw/inc/loragw_sx1272_lora.h	69;"	d
SX1272_REG_LR_IRQFLAGS	libloragw/inc/loragw_sx1272_lora.h	41;"	d
SX1272_REG_LR_IRQFLAGSMASK	libloragw/inc/loragw_sx1272_lora.h	40;"	d
SX1272_REG_LR_LNA	libloragw/inc/loragw_sx1272_lora.h	34;"	d
SX1272_REG_LR_MODEMCONFIG1	libloragw/inc/loragw_sx1272_lora.h	52;"	d
SX1272_REG_LR_MODEMCONFIG2	libloragw/inc/loragw_sx1272_lora.h	53;"	d
SX1272_REG_LR_MODEMSTAT	libloragw/inc/loragw_sx1272_lora.h	47;"	d
SX1272_REG_LR_OCP	libloragw/inc/loragw_sx1272_lora.h	32;"	d
SX1272_REG_LR_OPMODE	libloragw/inc/loragw_sx1272_lora.h	25;"	d
SX1272_REG_LR_PACONFIG	libloragw/inc/loragw_sx1272_lora.h	30;"	d
SX1272_REG_LR_PADAC	libloragw/inc/loragw_sx1272_lora.h	84;"	d
SX1272_REG_LR_PARAMP	libloragw/inc/loragw_sx1272_lora.h	31;"	d
SX1272_REG_LR_PAYLOADLENGTH	libloragw/inc/loragw_sx1272_lora.h	57;"	d
SX1272_REG_LR_PAYLOADMAXLENGTH	libloragw/inc/loragw_sx1272_lora.h	58;"	d
SX1272_REG_LR_PKTRSSIVALUE	libloragw/inc/loragw_sx1272_lora.h	49;"	d
SX1272_REG_LR_PKTSNRVALUE	libloragw/inc/loragw_sx1272_lora.h	48;"	d
SX1272_REG_LR_PLL	libloragw/inc/loragw_sx1272_lora.h	85;"	d
SX1272_REG_LR_PLLHOP	libloragw/inc/loragw_sx1272_lora.h	82;"	d
SX1272_REG_LR_PLLLOWPN	libloragw/inc/loragw_sx1272_lora.h	86;"	d
SX1272_REG_LR_PREAMBLELSB	libloragw/inc/loragw_sx1272_lora.h	56;"	d
SX1272_REG_LR_PREAMBLEMSB	libloragw/inc/loragw_sx1272_lora.h	55;"	d
SX1272_REG_LR_RSSIVALUE	libloragw/inc/loragw_sx1272_lora.h	50;"	d
SX1272_REG_LR_RSSIWIDEBAND	libloragw/inc/loragw_sx1272_lora.h	64;"	d
SX1272_REG_LR_RXHEADERCNTVALUELSB	libloragw/inc/loragw_sx1272_lora.h	44;"	d
SX1272_REG_LR_RXHEADERCNTVALUEMSB	libloragw/inc/loragw_sx1272_lora.h	43;"	d
SX1272_REG_LR_RXNBBYTES	libloragw/inc/loragw_sx1272_lora.h	42;"	d
SX1272_REG_LR_RXPACKETCNTVALUELSB	libloragw/inc/loragw_sx1272_lora.h	46;"	d
SX1272_REG_LR_RXPACKETCNTVALUEMSB	libloragw/inc/loragw_sx1272_lora.h	45;"	d
SX1272_REG_LR_SYMBTIMEOUTLSB	libloragw/inc/loragw_sx1272_lora.h	54;"	d
SX1272_REG_LR_SYNCWORD	libloragw/inc/loragw_sx1272_lora.h	68;"	d
SX1272_REG_LR_TCXO	libloragw/inc/loragw_sx1272_lora.h	83;"	d
SX1272_REG_LR_VERSION	libloragw/inc/loragw_sx1272_lora.h	76;"	d
SX1272_REG_NODEADRS	libloragw/inc/loragw_sx1272_fsk.h	79;"	d
SX1272_REG_OCP	libloragw/inc/loragw_sx1272_fsk.h	36;"	d
SX1272_REG_OOKAVG	libloragw/inc/loragw_sx1272_fsk.h	48;"	d
SX1272_REG_OOKFIX	libloragw/inc/loragw_sx1272_fsk.h	47;"	d
SX1272_REG_OOKPEAK	libloragw/inc/loragw_sx1272_fsk.h	46;"	d
SX1272_REG_OPMODE	libloragw/inc/loragw_sx1272_fsk.h	25;"	d
SX1272_REG_OSC	libloragw/inc/loragw_sx1272_fsk.h	63;"	d
SX1272_REG_PACKETCONFIG1	libloragw/inc/loragw_sx1272_fsk.h	76;"	d
SX1272_REG_PACKETCONFIG2	libloragw/inc/loragw_sx1272_fsk.h	77;"	d
SX1272_REG_PACONFIG	libloragw/inc/loragw_sx1272_fsk.h	34;"	d
SX1272_REG_PADAC	libloragw/inc/loragw_sx1272_fsk.h	107;"	d
SX1272_REG_PARAMP	libloragw/inc/loragw_sx1272_fsk.h	35;"	d
SX1272_REG_PAYLOADLENGTH	libloragw/inc/loragw_sx1272_fsk.h	78;"	d
SX1272_REG_PLL	libloragw/inc/loragw_sx1272_fsk.h	108;"	d
SX1272_REG_PLLHOP	libloragw/inc/loragw_sx1272_fsk.h	105;"	d
SX1272_REG_PLLLOWPN	libloragw/inc/loragw_sx1272_fsk.h	109;"	d
SX1272_REG_PREAMBLEDETECT	libloragw/inc/loragw_sx1272_fsk.h	57;"	d
SX1272_REG_PREAMBLELSB	libloragw/inc/loragw_sx1272_fsk.h	66;"	d
SX1272_REG_PREAMBLEMSB	libloragw/inc/loragw_sx1272_fsk.h	65;"	d
SX1272_REG_RES17	libloragw/inc/loragw_sx1272_fsk.h	49;"	d
SX1272_REG_RES18	libloragw/inc/loragw_sx1272_fsk.h	50;"	d
SX1272_REG_RES19	libloragw/inc/loragw_sx1272_fsk.h	51;"	d
SX1272_REG_RSSICOLLISION	libloragw/inc/loragw_sx1272_fsk.h	41;"	d
SX1272_REG_RSSICONFIG	libloragw/inc/loragw_sx1272_fsk.h	40;"	d
SX1272_REG_RSSITHRESH	libloragw/inc/loragw_sx1272_fsk.h	42;"	d
SX1272_REG_RSSIVALUE	libloragw/inc/loragw_sx1272_fsk.h	43;"	d
SX1272_REG_RXBW	libloragw/inc/loragw_sx1272_fsk.h	44;"	d
SX1272_REG_RXCONFIG	libloragw/inc/loragw_sx1272_fsk.h	39;"	d
SX1272_REG_RXDELAY	libloragw/inc/loragw_sx1272_fsk.h	61;"	d
SX1272_REG_RXTIMEOUT1	libloragw/inc/loragw_sx1272_fsk.h	58;"	d
SX1272_REG_RXTIMEOUT2	libloragw/inc/loragw_sx1272_fsk.h	59;"	d
SX1272_REG_RXTIMEOUT3	libloragw/inc/loragw_sx1272_fsk.h	60;"	d
SX1272_REG_SEQCONFIG1	libloragw/inc/loragw_sx1272_fsk.h	83;"	d
SX1272_REG_SEQCONFIG2	libloragw/inc/loragw_sx1272_fsk.h	84;"	d
SX1272_REG_SYNCCONFIG	libloragw/inc/loragw_sx1272_fsk.h	67;"	d
SX1272_REG_SYNCVALUE1	libloragw/inc/loragw_sx1272_fsk.h	68;"	d
SX1272_REG_SYNCVALUE2	libloragw/inc/loragw_sx1272_fsk.h	69;"	d
SX1272_REG_SYNCVALUE3	libloragw/inc/loragw_sx1272_fsk.h	70;"	d
SX1272_REG_SYNCVALUE4	libloragw/inc/loragw_sx1272_fsk.h	71;"	d
SX1272_REG_SYNCVALUE5	libloragw/inc/loragw_sx1272_fsk.h	72;"	d
SX1272_REG_SYNCVALUE6	libloragw/inc/loragw_sx1272_fsk.h	73;"	d
SX1272_REG_SYNCVALUE7	libloragw/inc/loragw_sx1272_fsk.h	74;"	d
SX1272_REG_SYNCVALUE8	libloragw/inc/loragw_sx1272_fsk.h	75;"	d
SX1272_REG_TCXO	libloragw/inc/loragw_sx1272_fsk.h	106;"	d
SX1272_REG_TEMP	libloragw/inc/loragw_sx1272_fsk.h	90;"	d
SX1272_REG_TIMER1COEF	libloragw/inc/loragw_sx1272_fsk.h	86;"	d
SX1272_REG_TIMER2COEF	libloragw/inc/loragw_sx1272_fsk.h	87;"	d
SX1272_REG_TIMERRESOL	libloragw/inc/loragw_sx1272_fsk.h	85;"	d
SX1272_REG_VERSION	libloragw/inc/loragw_sx1272_fsk.h	99;"	d
SX1276_MC2_RX_PAYLOAD_CRCON	gps_hat/radio.h	118;"	d
SX1276_MC2_RX_PAYLOAD_CRCON	lora_pkt_fwd/inc/radio.h	95;"	d
SX1276_MC3_AGCAUTO	gps_hat/radio.h	122;"	d
SX1276_MC3_AGCAUTO	lora_pkt_fwd/inc/radio.h	99;"	d
SX1276_MC3_LOW_DATA_RATE_OPTIMIZE	gps_hat/radio.h	121;"	d
SX1276_MC3_LOW_DATA_RATE_OPTIMIZE	lora_pkt_fwd/inc/radio.h	98;"	d
SX1276_REG_AFCBW	libloragw/inc/loragw_sx1276_fsk.h	45;"	d
SX1276_REG_AFCFEI	libloragw/inc/loragw_sx1276_fsk.h	52;"	d
SX1276_REG_AFCLSB	libloragw/inc/loragw_sx1276_fsk.h	54;"	d
SX1276_REG_AFCMSB	libloragw/inc/loragw_sx1276_fsk.h	53;"	d
SX1276_REG_AGCREF	libloragw/inc/loragw_sx1276_fsk.h	106;"	d
SX1276_REG_AGCTHRESH1	libloragw/inc/loragw_sx1276_fsk.h	107;"	d
SX1276_REG_AGCTHRESH2	libloragw/inc/loragw_sx1276_fsk.h	108;"	d
SX1276_REG_AGCTHRESH3	libloragw/inc/loragw_sx1276_fsk.h	109;"	d
SX1276_REG_BITRATEFRAC	libloragw/inc/loragw_sx1276_fsk.h	105;"	d
SX1276_REG_BITRATELSB	libloragw/inc/loragw_sx1276_fsk.h	27;"	d
SX1276_REG_BITRATEMSB	libloragw/inc/loragw_sx1276_fsk.h	26;"	d
SX1276_REG_BROADCASTADRS	libloragw/inc/loragw_sx1276_fsk.h	80;"	d
SX1276_REG_DIOMAPPING1	libloragw/inc/loragw_sx1276_fsk.h	96;"	d
SX1276_REG_DIOMAPPING2	libloragw/inc/loragw_sx1276_fsk.h	97;"	d
SX1276_REG_FDEVLSB	libloragw/inc/loragw_sx1276_fsk.h	29;"	d
SX1276_REG_FDEVMSB	libloragw/inc/loragw_sx1276_fsk.h	28;"	d
SX1276_REG_FEILSB	libloragw/inc/loragw_sx1276_fsk.h	56;"	d
SX1276_REG_FEIMSB	libloragw/inc/loragw_sx1276_fsk.h	55;"	d
SX1276_REG_FIFO	libloragw/inc/loragw_sx1276_fsk.h	23;"	d
SX1276_REG_FIFOTHRESH	libloragw/inc/loragw_sx1276_fsk.h	81;"	d
SX1276_REG_FORMERTEMP	libloragw/inc/loragw_sx1276_fsk.h	104;"	d
SX1276_REG_FRFLSB	libloragw/inc/loragw_sx1276_fsk.h	32;"	d
SX1276_REG_FRFMID	libloragw/inc/loragw_sx1276_fsk.h	31;"	d
SX1276_REG_FRFMSB	libloragw/inc/loragw_sx1276_fsk.h	30;"	d
SX1276_REG_IMAGECAL	libloragw/inc/loragw_sx1276_fsk.h	89;"	d
SX1276_REG_IRQFLAGS1	libloragw/inc/loragw_sx1276_fsk.h	93;"	d
SX1276_REG_IRQFLAGS2	libloragw/inc/loragw_sx1276_fsk.h	94;"	d
SX1276_REG_LNA	libloragw/inc/loragw_sx1276_fsk.h	38;"	d
SX1276_REG_LOWBAT	libloragw/inc/loragw_sx1276_fsk.h	91;"	d
SX1276_REG_LR_AGCREF	libloragw/inc/loragw_sx1276_lora.h	88;"	d
SX1276_REG_LR_AGCTHRESH1	libloragw/inc/loragw_sx1276_lora.h	89;"	d
SX1276_REG_LR_AGCTHRESH2	libloragw/inc/loragw_sx1276_lora.h	90;"	d
SX1276_REG_LR_AGCTHRESH3	libloragw/inc/loragw_sx1276_lora.h	91;"	d
SX1276_REG_LR_BITRATEFRAC	libloragw/inc/loragw_sx1276_lora.h	87;"	d
SX1276_REG_LR_DETECTIONTHRESHOLD	libloragw/inc/loragw_sx1276_lora.h	71;"	d
SX1276_REG_LR_DETECTOPTIMIZE	libloragw/inc/loragw_sx1276_lora.h	68;"	d
SX1276_REG_LR_DIOMAPPING1	libloragw/inc/loragw_sx1276_lora.h	78;"	d
SX1276_REG_LR_DIOMAPPING2	libloragw/inc/loragw_sx1276_lora.h	79;"	d
SX1276_REG_LR_FEILSB	libloragw/inc/loragw_sx1276_lora.h	64;"	d
SX1276_REG_LR_FEIMID	libloragw/inc/loragw_sx1276_lora.h	63;"	d
SX1276_REG_LR_FEIMSB	libloragw/inc/loragw_sx1276_lora.h	62;"	d
SX1276_REG_LR_FIFO	libloragw/inc/loragw_sx1276_lora.h	23;"	d
SX1276_REG_LR_FIFOADDRPTR	libloragw/inc/loragw_sx1276_lora.h	36;"	d
SX1276_REG_LR_FIFORXBASEADDR	libloragw/inc/loragw_sx1276_lora.h	38;"	d
SX1276_REG_LR_FIFORXBYTEADDR	libloragw/inc/loragw_sx1276_lora.h	60;"	d
SX1276_REG_LR_FIFORXCURRENTADDR	libloragw/inc/loragw_sx1276_lora.h	39;"	d
SX1276_REG_LR_FIFOTXBASEADDR	libloragw/inc/loragw_sx1276_lora.h	37;"	d
SX1276_REG_LR_FORMERTEMP	libloragw/inc/loragw_sx1276_lora.h	86;"	d
SX1276_REG_LR_FRFLSB	libloragw/inc/loragw_sx1276_lora.h	28;"	d
SX1276_REG_LR_FRFMID	libloragw/inc/loragw_sx1276_lora.h	27;"	d
SX1276_REG_LR_FRFMSB	libloragw/inc/loragw_sx1276_lora.h	26;"	d
SX1276_REG_LR_HOPCHANNEL	libloragw/inc/loragw_sx1276_lora.h	51;"	d
SX1276_REG_LR_HOPPERIOD	libloragw/inc/loragw_sx1276_lora.h	59;"	d
SX1276_REG_LR_INVERTIQ	libloragw/inc/loragw_sx1276_lora.h	69;"	d
SX1276_REG_LR_INVERTIQ2	libloragw/inc/loragw_sx1276_lora.h	74;"	d
SX1276_REG_LR_IRQFLAGS	libloragw/inc/loragw_sx1276_lora.h	41;"	d
SX1276_REG_LR_IRQFLAGSMASK	libloragw/inc/loragw_sx1276_lora.h	40;"	d
SX1276_REG_LR_LNA	libloragw/inc/loragw_sx1276_lora.h	34;"	d
SX1276_REG_LR_MODEMCONFIG1	libloragw/inc/loragw_sx1276_lora.h	52;"	d
SX1276_REG_LR_MODEMCONFIG2	libloragw/inc/loragw_sx1276_lora.h	53;"	d
SX1276_REG_LR_MODEMCONFIG3	libloragw/inc/loragw_sx1276_lora.h	61;"	d
SX1276_REG_LR_MODEMSTAT	libloragw/inc/loragw_sx1276_lora.h	47;"	d
SX1276_REG_LR_OCP	libloragw/inc/loragw_sx1276_lora.h	32;"	d
SX1276_REG_LR_OPMODE	libloragw/inc/loragw_sx1276_lora.h	25;"	d
SX1276_REG_LR_PACONFIG	libloragw/inc/loragw_sx1276_lora.h	30;"	d
SX1276_REG_LR_PADAC	libloragw/inc/loragw_sx1276_lora.h	85;"	d
SX1276_REG_LR_PARAMP	libloragw/inc/loragw_sx1276_lora.h	31;"	d
SX1276_REG_LR_PAYLOADLENGTH	libloragw/inc/loragw_sx1276_lora.h	57;"	d
SX1276_REG_LR_PAYLOADMAXLENGTH	libloragw/inc/loragw_sx1276_lora.h	58;"	d
SX1276_REG_LR_PKTRSSIVALUE	libloragw/inc/loragw_sx1276_lora.h	49;"	d
SX1276_REG_LR_PKTSNRVALUE	libloragw/inc/loragw_sx1276_lora.h	48;"	d
SX1276_REG_LR_PLL	libloragw/inc/loragw_sx1276_lora.h	92;"	d
SX1276_REG_LR_PLLHOP	libloragw/inc/loragw_sx1276_lora.h	83;"	d
SX1276_REG_LR_PREAMBLELSB	libloragw/inc/loragw_sx1276_lora.h	56;"	d
SX1276_REG_LR_PREAMBLEMSB	libloragw/inc/loragw_sx1276_lora.h	55;"	d
SX1276_REG_LR_RSSIVALUE	libloragw/inc/loragw_sx1276_lora.h	50;"	d
SX1276_REG_LR_RSSIWIDEBAND	libloragw/inc/loragw_sx1276_lora.h	65;"	d
SX1276_REG_LR_RXHEADERCNTVALUELSB	libloragw/inc/loragw_sx1276_lora.h	44;"	d
SX1276_REG_LR_RXHEADERCNTVALUEMSB	libloragw/inc/loragw_sx1276_lora.h	43;"	d
SX1276_REG_LR_RXNBBYTES	libloragw/inc/loragw_sx1276_lora.h	42;"	d
SX1276_REG_LR_RXPACKETCNTVALUELSB	libloragw/inc/loragw_sx1276_lora.h	46;"	d
SX1276_REG_LR_RXPACKETCNTVALUEMSB	libloragw/inc/loragw_sx1276_lora.h	45;"	d
SX1276_REG_LR_SYMBTIMEOUTLSB	libloragw/inc/loragw_sx1276_lora.h	54;"	d
SX1276_REG_LR_SYNCWORD	libloragw/inc/loragw_sx1276_lora.h	72;"	d
SX1276_REG_LR_TCXO	libloragw/inc/loragw_sx1276_lora.h	84;"	d
SX1276_REG_LR_TEST2F	libloragw/inc/loragw_sx1276_lora.h	66;"	d
SX1276_REG_LR_TEST30	libloragw/inc/loragw_sx1276_lora.h	67;"	d
SX1276_REG_LR_TEST36	libloragw/inc/loragw_sx1276_lora.h	70;"	d
SX1276_REG_LR_TEST3A	libloragw/inc/loragw_sx1276_lora.h	73;"	d
SX1276_REG_LR_VERSION	libloragw/inc/loragw_sx1276_lora.h	81;"	d
SX1276_REG_NODEADRS	libloragw/inc/loragw_sx1276_fsk.h	79;"	d
SX1276_REG_OCP	libloragw/inc/loragw_sx1276_fsk.h	36;"	d
SX1276_REG_OOKAVG	libloragw/inc/loragw_sx1276_fsk.h	48;"	d
SX1276_REG_OOKFIX	libloragw/inc/loragw_sx1276_fsk.h	47;"	d
SX1276_REG_OOKPEAK	libloragw/inc/loragw_sx1276_fsk.h	46;"	d
SX1276_REG_OPMODE	libloragw/inc/loragw_sx1276_fsk.h	25;"	d
SX1276_REG_OSC	libloragw/inc/loragw_sx1276_fsk.h	63;"	d
SX1276_REG_PACKETCONFIG1	libloragw/inc/loragw_sx1276_fsk.h	76;"	d
SX1276_REG_PACKETCONFIG2	libloragw/inc/loragw_sx1276_fsk.h	77;"	d
SX1276_REG_PACONFIG	libloragw/inc/loragw_sx1276_fsk.h	34;"	d
SX1276_REG_PADAC	libloragw/inc/loragw_sx1276_fsk.h	103;"	d
SX1276_REG_PARAMP	libloragw/inc/loragw_sx1276_fsk.h	35;"	d
SX1276_REG_PAYLOADLENGTH	libloragw/inc/loragw_sx1276_fsk.h	78;"	d
SX1276_REG_PLL	libloragw/inc/loragw_sx1276_fsk.h	110;"	d
SX1276_REG_PLLHOP	libloragw/inc/loragw_sx1276_fsk.h	101;"	d
SX1276_REG_PREAMBLEDETECT	libloragw/inc/loragw_sx1276_fsk.h	57;"	d
SX1276_REG_PREAMBLELSB	libloragw/inc/loragw_sx1276_fsk.h	66;"	d
SX1276_REG_PREAMBLEMSB	libloragw/inc/loragw_sx1276_fsk.h	65;"	d
SX1276_REG_RES17	libloragw/inc/loragw_sx1276_fsk.h	49;"	d
SX1276_REG_RES18	libloragw/inc/loragw_sx1276_fsk.h	50;"	d
SX1276_REG_RES19	libloragw/inc/loragw_sx1276_fsk.h	51;"	d
SX1276_REG_RSSICOLLISION	libloragw/inc/loragw_sx1276_fsk.h	41;"	d
SX1276_REG_RSSICONFIG	libloragw/inc/loragw_sx1276_fsk.h	40;"	d
SX1276_REG_RSSITHRESH	libloragw/inc/loragw_sx1276_fsk.h	42;"	d
SX1276_REG_RSSIVALUE	libloragw/inc/loragw_sx1276_fsk.h	43;"	d
SX1276_REG_RXBW	libloragw/inc/loragw_sx1276_fsk.h	44;"	d
SX1276_REG_RXCONFIG	libloragw/inc/loragw_sx1276_fsk.h	39;"	d
SX1276_REG_RXDELAY	libloragw/inc/loragw_sx1276_fsk.h	61;"	d
SX1276_REG_RXTIMEOUT1	libloragw/inc/loragw_sx1276_fsk.h	58;"	d
SX1276_REG_RXTIMEOUT2	libloragw/inc/loragw_sx1276_fsk.h	59;"	d
SX1276_REG_RXTIMEOUT3	libloragw/inc/loragw_sx1276_fsk.h	60;"	d
SX1276_REG_SEQCONFIG1	libloragw/inc/loragw_sx1276_fsk.h	83;"	d
SX1276_REG_SEQCONFIG2	libloragw/inc/loragw_sx1276_fsk.h	84;"	d
SX1276_REG_SYNCCONFIG	libloragw/inc/loragw_sx1276_fsk.h	67;"	d
SX1276_REG_SYNCVALUE1	libloragw/inc/loragw_sx1276_fsk.h	68;"	d
SX1276_REG_SYNCVALUE2	libloragw/inc/loragw_sx1276_fsk.h	69;"	d
SX1276_REG_SYNCVALUE3	libloragw/inc/loragw_sx1276_fsk.h	70;"	d
SX1276_REG_SYNCVALUE4	libloragw/inc/loragw_sx1276_fsk.h	71;"	d
SX1276_REG_SYNCVALUE5	libloragw/inc/loragw_sx1276_fsk.h	72;"	d
SX1276_REG_SYNCVALUE6	libloragw/inc/loragw_sx1276_fsk.h	73;"	d
SX1276_REG_SYNCVALUE7	libloragw/inc/loragw_sx1276_fsk.h	74;"	d
SX1276_REG_SYNCVALUE8	libloragw/inc/loragw_sx1276_fsk.h	75;"	d
SX1276_REG_TCXO	libloragw/inc/loragw_sx1276_fsk.h	102;"	d
SX1276_REG_TEMP	libloragw/inc/loragw_sx1276_fsk.h	90;"	d
SX1276_REG_TIMER1COEF	libloragw/inc/loragw_sx1276_fsk.h	86;"	d
SX1276_REG_TIMER2COEF	libloragw/inc/loragw_sx1276_fsk.h	87;"	d
SX1276_REG_TIMERRESOL	libloragw/inc/loragw_sx1276_fsk.h	85;"	d
SX1276_REG_VERSION	libloragw/inc/loragw_sx1276_fsk.h	99;"	d
TAKE_N_BITS_FROM	libloragw/inc/loragw_aux.h	35;"	d
TIMESTAMPED	gps_hat/radio.h	23;"	d
TIMESTAMPED	libloragw/inc/loragw_hal.h	127;"	d
TIMING_REPEAT	libloragw/tst/test_loragw_spi.c	35;"	d	file:
TRACE	libloragw/src/loragw_gps.c	50;"	d	file:
TRACE	libloragw/src/loragw_hal.c	52;"	d	file:
TS_CPS	libloragw/src/loragw_gps.c	55;"	d	file:
TX_BUFF_SIZE	gps_hat/dual_pkt_fwd.c	77;"	d	file:
TX_BUFF_SIZE	gps_hat/hat_pkt_fwd.c	78;"	d	file:
TX_BUFF_SIZE	lora_pkt_fwd/src/lora_pkt_fwd.c	106;"	d	file:
TX_EMITTING	libloragw/inc/loragw_hal.h	143;"	d
TX_FREE	libloragw/inc/loragw_hal.h	141;"	d
TX_GAIN_LUT_SIZE_MAX	libloragw/inc/loragw_hal.h	153;"	d
TX_JIT_DELAY	gps_hat/jitqueue.c	23;"	d	file:
TX_JIT_DELAY	lora_pkt_fwd/src/jitqueue.c	39;"	d	file:
TX_MARGIN_DELAY	gps_hat/jitqueue.c	21;"	d	file:
TX_MARGIN_DELAY	lora_pkt_fwd/src/jitqueue.c	37;"	d	file:
TX_MAX_ADVANCE_DELAY	gps_hat/jitqueue.c	24;"	d	file:
TX_MAX_ADVANCE_DELAY	lora_pkt_fwd/src/jitqueue.c	40;"	d	file:
TX_METADATA_NB	libloragw/src/loragw_hal.c	66;"	d	file:
TX_MODE	gps_hat/single_rx_tx.c	24;"	d	file:
TX_OFF	libloragw/inc/loragw_hal.h	140;"	d
TX_RF_CHAIN	util_tx_continuous/src/util_tx_continuous.c	47;"	d	file:
TX_RF_CHAIN	util_tx_test/src/util_tx_test.c	50;"	d	file:
TX_SCHEDULED	libloragw/inc/loragw_hal.h	142;"	d
TX_START_DELAY	gps_hat/jitqueue.c	19;"	d	file:
TX_START_DELAY	lora_pkt_fwd/src/jitqueue.c	35;"	d	file:
TX_START_DELAY_DEFAULT	libloragw/src/loragw_hal.c	88;"	d	file:
TX_STATUS	libloragw/inc/loragw_hal.h	134;"	d
TX_STATUS_UNKNOWN	libloragw/inc/loragw_hal.h	139;"	d
UBX_MSG_NAVTIMEGPS_LEN	libloragw/src/loragw_gps.c	60;"	d	file:
UBX_NAV_TIMEGPS	libloragw/inc/loragw_gps.h	/^    UBX_NAV_TIMEGPS, \/*!> GPS Time Solution *\/$/;"	e	enum:gps_msg
UBX_NAV_TIMEUTC	libloragw/inc/loragw_gps.h	/^    UBX_NAV_TIMEUTC  \/*!> UTC Time Solution *\/$/;"	e	enum:gps_msg
UNIX_GPS_EPOCH_OFFSET	lora_pkt_fwd/src/lora_pkt_fwd.c	108;"	d	file:
UNKNOWN	libloragw/inc/loragw_gps.h	/^    UNKNOWN,         \/*!> neutral value *\/$/;"	e	enum:gps_msg
VERSION_STRING	gps_hat/dual_pkt_fwd.c	55;"	d	file:
VERSION_STRING	gps_hat/hat_pkt_fwd.c	55;"	d	file:
VERSION_STRING	lora_pkt_fwd/src/lora_pkt_fwd.c	72;"	d	file:
VFLAG	lora_pkt_fwd/Makefile	/^VFLAG := -D VERSION_STRING="\\"$(RELEASE_VERSION)\\""$/;"	m
WAIT_GPIO	reset_lgw.sh	/^WAIT_GPIO() {$/;"	f
WRITE_ACCESS	gps_hat/radio.h	272;"	d
WRITE_ACCESS	libloragw/src/loragw_spi.native.c	55;"	d	file:
WRITE_ACCESS	lora_pkt_fwd/inc/radio.h	173;"	d
XERR_FILT_COEF	lora_pkt_fwd/src/lora_pkt_fwd.c	89;"	d	file:
XERR_INIT_AVG	lora_pkt_fwd/src/lora_pkt_fwd.c	88;"	d	file:
_BASE64_H	gps_hat/base64.h	18;"	d
_BASE64_H	lora_pkt_fwd/inc/base64.h	18;"	d
_CRT_SECURE_NO_WARNINGS	lora_pkt_fwd/src/parson.c	24;"	d	file:
_CRT_SECURE_NO_WARNINGS	util_pkt_logger/src/parson.c	24;"	d	file:
_GNU_SOURCE	libloragw/inc/loragw_gps.h	25;"	d
_GNU_SOURCE	libloragw/src/loragw_gps.c	22;"	d	file:
_GNU_SOURCE	lora_pkt_fwd/src/jitqueue.c	19;"	d	file:
_LORAGW_AUX_H	libloragw/inc/loragw_aux.h	18;"	d
_LORAGW_FPGA_REG_H	libloragw/inc/loragw_fpga.h	20;"	d
_LORAGW_GPS_H	libloragw/inc/loragw_gps.h	20;"	d
_LORAGW_HAL_H	libloragw/inc/loragw_hal.h	18;"	d
_LORAGW_LBT_H	libloragw/inc/loragw_lbt.h	17;"	d
_LORAGW_RADIO_H	libloragw/inc/loragw_radio.h	17;"	d
_LORAGW_REG_H	libloragw/inc/loragw_reg.h	21;"	d
_LORAGW_SPI_H	libloragw/inc/loragw_spi.h	22;"	d
_LORAGW_SX1272_REGS_FSK_H	libloragw/inc/loragw_sx1272_fsk.h	16;"	d
_LORAGW_SX1272_REGS_LORA_H	libloragw/inc/loragw_sx1272_lora.h	16;"	d
_LORAGW_SX1276_REGS_FSK_H	libloragw/inc/loragw_sx1276_fsk.h	16;"	d
_LORAGW_SX1276_REGS_LORA_H	libloragw/inc/loragw_sx1276_lora.h	16;"	d
_LORA_PKTFWD_JIT_H	gps_hat/jitqueue.h	2;"	d
_LORA_PKTFWD_JIT_H	lora_pkt_fwd/inc/jitqueue.h	18;"	d
_LORA_PKTFWD_TIMERSYNC_H	lora_pkt_fwd/inc/timersync.h	18;"	d
_LORA_PKTFWD_TRACE_H	lora_pkt_fwd/inc/trace.h	18;"	d
_RADIO_H	gps_hat/radio.h	17;"	d
_RADIO_H	lora_pkt_fwd/inc/radio.h	13;"	d
_XOPEN_SOURCE	gps_hat/dual_pkt_fwd.c	18;"	d	file:
_XOPEN_SOURCE	gps_hat/dual_pkt_fwd.c	20;"	d	file:
_XOPEN_SOURCE	gps_hat/hat_pkt_fwd.c	18;"	d	file:
_XOPEN_SOURCE	gps_hat/hat_pkt_fwd.c	20;"	d	file:
_XOPEN_SOURCE	libloragw/src/loragw_aux.c	22;"	d	file:
_XOPEN_SOURCE	libloragw/src/loragw_aux.c	24;"	d	file:
_XOPEN_SOURCE	libloragw/tst/test_loragw_cal.c	22;"	d	file:
_XOPEN_SOURCE	libloragw/tst/test_loragw_cal.c	24;"	d	file:
_XOPEN_SOURCE	libloragw/tst/test_loragw_gps.c	22;"	d	file:
_XOPEN_SOURCE	libloragw/tst/test_loragw_gps.c	24;"	d	file:
_XOPEN_SOURCE	libloragw/tst/test_loragw_hal.c	22;"	d	file:
_XOPEN_SOURCE	libloragw/tst/test_loragw_hal.c	24;"	d	file:
_XOPEN_SOURCE	lora_pkt_fwd/src/lora_pkt_fwd.c	24;"	d	file:
_XOPEN_SOURCE	lora_pkt_fwd/src/lora_pkt_fwd.c	26;"	d	file:
_XOPEN_SOURCE	util_ack/src/util_ack.c	22;"	d	file:
_XOPEN_SOURCE	util_ack/src/util_ack.c	24;"	d	file:
_XOPEN_SOURCE	util_pkt_logger/src/util_pkt_logger.c	22;"	d	file:
_XOPEN_SOURCE	util_pkt_logger/src/util_pkt_logger.c	24;"	d	file:
_XOPEN_SOURCE	util_sink/src/util_sink.c	22;"	d	file:
_XOPEN_SOURCE	util_sink/src/util_sink.c	24;"	d	file:
_XOPEN_SOURCE	util_tx_continuous/src/util_tx_continuous.c	23;"	d	file:
_XOPEN_SOURCE	util_tx_continuous/src/util_tx_continuous.c	25;"	d	file:
_XOPEN_SOURCE	util_tx_test/src/util_tx_test.c	22;"	d	file:
_XOPEN_SOURCE	util_tx_test/src/util_tx_test.c	24;"	d	file:
__SX125X_REGS_H__	libloragw/inc/loragw_sx125x.h	16;"	d
__compar_d_fn_t	gps_hat/jitqueue.c	/^typedef int (*__compar_d_fn_t) (const void *, const void *, void *);$/;"	t	file:
addr	libloragw/inc/loragw_reg.h	/^    uint8_t addr;        \/*!< base address of the register (7 bit) *\/$/;"	m	struct:lgw_reg_s
alt	gps_hat/dual_pkt_fwd.c	/^static float alt = 0.0;$/;"	v	file:
alt	gps_hat/hat_pkt_fwd.c	/^static float alt = 0.0;$/;"	v	file:
alt	libloragw/inc/loragw_gps.h	/^    short   alt;    \/*!> altitude in meters (WGS 84 geoid ref.) *\/$/;"	m	struct:coord_s
amp_a	libloragw/tst/test_loragw_cal.c	/^    int8_t amp_a;$/;"	m	struct:cal_res_s	file:
amp_b	libloragw/tst/test_loragw_cal.c	/^    int8_t amp_b;$/;"	m	struct:cal_res_s	file:
antenna_gain	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int8_t antenna_gain = 0;$/;"	v	file:
append_indent	lora_pkt_fwd/src/parson.c	/^static int append_indent(char *buf, int level) {$/;"	f	file:
append_indent	util_pkt_logger/src/parson.c	/^static int append_indent(char *buf, int level) {$/;"	f	file:
append_string	lora_pkt_fwd/src/parson.c	/^static int append_string(char *buf, const char *string) {$/;"	f	file:
append_string	util_pkt_logger/src/parson.c	/^static int append_string(char *buf, const char *string) {$/;"	f	file:
array	gps_hat/parson.c	/^    JSON_Array  *array;$/;"	m	union:json_value_value	file:
array	lora_pkt_fwd/src/parson.c	/^    JSON_Array  *array;$/;"	m	union:json_value_value	file:
array	util_pkt_logger/src/parson.c	/^    JSON_Array  *array;$/;"	m	union:json_value_value	file:
autoquit_threshold	gps_hat/dual_pkt_fwd.c	/^static uint32_t autoquit_threshold = 0; \/* enable auto-quit after a number of non-acknowledged PULL_DATA (0 = disabled)*\/$/;"	v	file:
autoquit_threshold	gps_hat/hat_pkt_fwd.c	/^static uint32_t autoquit_threshold = 0; \/* enable auto-quit after a number of non-acknowledged PULL_DATA (0 = disabled)*\/$/;"	v	file:
autoquit_threshold	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t autoquit_threshold = 0; \/* enable auto-quit after a number of non-acknowledged PULL_DATA (0 = disabled)*\/$/;"	v	file:
b64_to_bin	gps_hat/base64.c	/^int b64_to_bin(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
b64_to_bin	lora_pkt_fwd/src/base64.c	/^int b64_to_bin(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
b64_to_bin_nopad	gps_hat/base64.c	/^int b64_to_bin_nopad(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
b64_to_bin_nopad	lora_pkt_fwd/src/base64.c	/^int b64_to_bin_nopad(const char * in, int size, uint8_t * out, int max_len) {$/;"	f
bandwidth	gps_hat/radio.h	/^    uint8_t     bandwidth;      \/*!> modulation bandwidth (LoRa only) *\/$/;"	m	struct:pkt_tx_s
bandwidth	libloragw/inc/loragw_hal.h	/^    uint8_t     bandwidth;      \/*!> RX bandwidth, 0 for default *\/$/;"	m	struct:lgw_conf_rxif_s
bandwidth	libloragw/inc/loragw_hal.h	/^    uint8_t     bandwidth;      \/*!> modulation bandwidth (LoRa only) *\/$/;"	m	struct:lgw_pkt_rx_s
bandwidth	libloragw/inc/loragw_hal.h	/^    uint8_t     bandwidth;      \/*!> modulation bandwidth (LoRa only) *\/$/;"	m	struct:lgw_pkt_tx_s
beacon_bw_hz	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t beacon_bw_hz = DEFAULT_BEACON_BW_HZ; \/* set beacon bandwidth, in Hz *\/$/;"	v	file:
beacon_datarate	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint8_t beacon_datarate = DEFAULT_BEACON_DATARATE; \/* set beacon datarate (SF) *\/$/;"	v	file:
beacon_freq_hz	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t beacon_freq_hz = DEFAULT_BEACON_FREQ_HZ; \/* set beacon TX frequency, in Hz *\/$/;"	v	file:
beacon_freq_nb	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint8_t beacon_freq_nb = DEFAULT_BEACON_FREQ_NB; \/* set number of beaconing channels beacon *\/$/;"	v	file:
beacon_freq_step	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t beacon_freq_step = DEFAULT_BEACON_FREQ_STEP; \/* set frequency step between beacon channels, in Hz *\/$/;"	v	file:
beacon_infodesc	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint8_t beacon_infodesc = DEFAULT_BEACON_INFODESC; \/* set beacon information descriptor *\/$/;"	v	file:
beacon_period	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t beacon_period = 0; \/* set beaconing period, must be a sub-multiple of 86400, the nb of sec in a day *\/$/;"	v	file:
beacon_power	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int8_t beacon_power = DEFAULT_BEACON_POWER; \/* set beacon TX power, in dBm *\/$/;"	v	file:
bin_to_b64	gps_hat/base64.c	/^int bin_to_b64(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
bin_to_b64	lora_pkt_fwd/src/base64.c	/^int bin_to_b64(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
bin_to_b64_nopad	gps_hat/base64.c	/^int bin_to_b64_nopad(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
bin_to_b64_nopad	lora_pkt_fwd/src/base64.c	/^int bin_to_b64_nopad(const uint8_t * in, int size, char * out, int max_len) {$/;"	f
board	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static char board[16] = "PG301";$/;"	v	file:
boolean	gps_hat/parson.c	/^    int          boolean;$/;"	m	union:json_value_value	file:
boolean	lora_pkt_fwd/src/parson.c	/^    int          boolean;$/;"	m	union:json_value_value	file:
boolean	util_pkt_logger/src/parson.c	/^    int          boolean;$/;"	m	union:json_value_value	file:
build_all	compile.sh	/^build_all() {$/;"	f
bw	gps_hat/radio.h	/^    uint32_t bw;$/;"	m	struct:__anon2
bw	gps_hat/single_rx_tx.c	/^static char bw[8] = "125000";$/;"	v	file:
bw	lora_pkt_fwd/inc/radio.h	/^    uint32_t bw;$/;"	m	struct:__anon4
bw	lora_pkt_fwd/src/single_tx.c	/^static char bw[8] = "125000";$/;"	v	file:
bw_getval	gps_hat/radio.c	/^int32_t bw_getval(int x) {$/;"	f
bw_toval	gps_hat/radio.c	/^int32_t bw_toval(int x) {$/;"	f
cal_offset_a_i	libloragw/src/loragw_hal.c	/^static int8_t cal_offset_a_i[8]; \/* TX I offset for radio A *\/$/;"	v	file:
cal_offset_a_q	libloragw/src/loragw_hal.c	/^static int8_t cal_offset_a_q[8]; \/* TX Q offset for radio A *\/$/;"	v	file:
cal_offset_b_i	libloragw/src/loragw_hal.c	/^static int8_t cal_offset_b_i[8]; \/* TX I offset for radio B *\/$/;"	v	file:
cal_offset_b_q	libloragw/src/loragw_hal.c	/^static int8_t cal_offset_b_q[8]; \/* TX Q offset for radio B *\/$/;"	v	file:
cal_res_s	libloragw/tst/test_loragw_cal.c	/^struct cal_res_s {$/;"	s	file:
capacity	gps_hat/parson.c	/^    size_t       capacity;$/;"	m	struct:json_array_t	file:
capacity	gps_hat/parson.c	/^    size_t       capacity;$/;"	m	struct:json_object_t	file:
capacity	lora_pkt_fwd/src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_array_t	file:
capacity	lora_pkt_fwd/src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_object_t	file:
capacity	util_pkt_logger/src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_array_t	file:
capacity	util_pkt_logger/src/parson.c	/^    size_t       capacity;$/;"	m	struct:json_object_t	file:
channels	libloragw/inc/loragw_hal.h	/^    struct lgw_conf_lbt_chan_s  channels[LBT_CHANNEL_FREQ_NB];$/;"	m	struct:lgw_conf_lbt_s	typeref:struct:lgw_conf_lbt_s::lgw_conf_lbt_chan_s
char_to_code	gps_hat/base64.c	/^uint8_t char_to_code(char x) {$/;"	f
char_to_code	lora_pkt_fwd/src/base64.c	/^uint8_t char_to_code(char x) {$/;"	f
check_fpga_version	libloragw/src/loragw_reg.c	/^bool check_fpga_version(uint8_t version) {$/;"	f
clean_all	compile.sh	/^clean_all() {$/;"	f
clksrc	libloragw/inc/loragw_hal.h	/^    uint8_t clksrc;         \/*!> Index of RF chain which provides clock to concentrator *\/$/;"	m	struct:lgw_conf_board_s
code_62	gps_hat/base64.c	/^static char code_62 = '+';	\/* RFC 1421 standard character for code 62 *\/$/;"	v	file:
code_62	lora_pkt_fwd/src/base64.c	/^static char code_62 = '+';    \/* RFC 1421 standard character for code 62 *\/$/;"	v	file:
code_63	gps_hat/base64.c	/^static char code_63 = '\/';	\/* RFC 1421 standard character for code 63 *\/$/;"	v	file:
code_63	lora_pkt_fwd/src/base64.c	/^static char code_63 = '\/';    \/* RFC 1421 standard character for code 63 *\/$/;"	v	file:
code_pad	gps_hat/base64.c	/^static char code_pad = '=';	\/* RFC 1421 padding character if padding *\/$/;"	v	file:
code_pad	lora_pkt_fwd/src/base64.c	/^static char code_pad = '=';    \/* RFC 1421 padding character if padding *\/$/;"	v	file:
code_to_char	gps_hat/base64.c	/^char code_to_char(uint8_t x) {$/;"	f
code_to_char	lora_pkt_fwd/src/base64.c	/^char code_to_char(uint8_t x) {$/;"	f
coderate	gps_hat/radio.h	/^    uint8_t     coderate;       \/*!> error-correcting code of the packet (LoRa only) *\/$/;"	m	struct:pkt_tx_s
coderate	libloragw/inc/loragw_hal.h	/^    uint8_t     coderate;       \/*!> error-correcting code of the packet (LoRa only) *\/$/;"	m	struct:lgw_pkt_rx_s
coderate	libloragw/inc/loragw_hal.h	/^    uint8_t     coderate;       \/*!> error-correcting code of the packet (LoRa only) *\/$/;"	m	struct:lgw_pkt_tx_s
compare	gps_hat/jitqueue.c	/^int compare(const void *a, const void *b, void *arg)$/;"	f
compare	lora_pkt_fwd/src/jitqueue.c	/^int compare(const void *a, const void *b, void *arg)$/;"	f
coord_s	libloragw/inc/loragw_gps.h	/^struct coord_s {$/;"	s
count	gps_hat/parson.c	/^    size_t       count;$/;"	m	struct:json_array_t	file:
count	gps_hat/parson.c	/^    size_t       count;$/;"	m	struct:json_object_t	file:
count	lora_pkt_fwd/src/parson.c	/^    size_t       count;$/;"	m	struct:json_array_t	file:
count	lora_pkt_fwd/src/parson.c	/^    size_t       count;$/;"	m	struct:json_object_t	file:
count	util_pkt_logger/src/parson.c	/^    size_t       count;$/;"	m	struct:json_array_t	file:
count	util_pkt_logger/src/parson.c	/^    size_t       count;$/;"	m	struct:json_object_t	file:
count_us	gps_hat/radio.h	/^    uint32_t    count_us;       \/*!> timestamp or delay in microseconds for TX trigger *\/$/;"	m	struct:pkt_tx_s
count_us	libloragw/inc/loragw_gps.h	/^    uint32_t        count_us;   \/*!> reference concentrator internal timestamp *\/$/;"	m	struct:tref
count_us	libloragw/inc/loragw_hal.h	/^    uint32_t    count_us;       \/*!> internal concentrator counter for timestamping, 1 microsecond resolution *\/$/;"	m	struct:lgw_pkt_rx_s
count_us	libloragw/inc/loragw_hal.h	/^    uint32_t    count_us;       \/*!> timestamp or delay in microseconds for TX trigger *\/$/;"	m	struct:lgw_pkt_tx_s
cr	gps_hat/radio.h	/^    uint8_t cr;$/;"	m	struct:__anon2
cr	gps_hat/single_rx_tx.c	/^static char cr[8] = "5";$/;"	v	file:
cr	lora_pkt_fwd/inc/radio.h	/^    uint8_t cr;$/;"	m	struct:__anon4
cr	lora_pkt_fwd/src/single_tx.c	/^static char cr[8] = "1";$/;"	v	file:
crc	gps_hat/radio.h	/^    uint16_t    crc;          \/*!> CRC that was received in the payload *\/$/;"	m	struct:pkt_rx_s
crc	libloragw/inc/loragw_hal.h	/^    uint16_t    crc;            \/*!> CRC that was received in the payload *\/$/;"	m	struct:lgw_pkt_rx_s
crc16	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint16_t crc16(const uint8_t * data, unsigned size) {$/;"	f	file:
crccheck	gps_hat/radio.c	/^void crccheck(uint8_t spidev, uint8_t nocrc)$/;"	f
crccheck	lora_pkt_fwd/src/radio.c	/^void crccheck(uint8_t spidev, uint8_t nocrc)$/;"	f
ctx	gps_hat/dual_pkt_fwd.c	/^static struct uci_context * ctx = NULL; $/;"	v	typeref:struct:uci_context	file:
dac_gain	libloragw/inc/loragw_hal.h	/^    uint8_t dac_gain;   \/*!> 2 bits, control of the radio DAC *\/$/;"	m	struct:lgw_tx_gain_s
datarate	gps_hat/radio.h	/^    uint32_t    datarate;       \/*!> TX datarate (baudrate for FSK, SF for LoRa) *\/$/;"	m	struct:pkt_tx_s
datarate	libloragw/inc/loragw_hal.h	/^    uint32_t    datarate;       \/*!> RX datarate of the packet (SF for LoRa) *\/$/;"	m	struct:lgw_pkt_rx_s
datarate	libloragw/inc/loragw_hal.h	/^    uint32_t    datarate;       \/*!> RX datarate, 0 for default *\/$/;"	m	struct:lgw_conf_rxif_s
datarate	libloragw/inc/loragw_hal.h	/^    uint32_t    datarate;       \/*!> TX datarate (baudrate for FSK, SF for LoRa) *\/$/;"	m	struct:lgw_pkt_tx_s
debug	libloragw/tst/test_loragw_cal.c	/^    uint8_t debug [8];$/;"	m	struct:cal_res_s	file:
desc	gps_hat/radio.h	/^    char desc[8];$/;"	m	struct:__anon2
desc	lora_pkt_fwd/inc/radio.h	/^    char desc[8];$/;"	m	struct:__anon4
description	gps_hat/dual_pkt_fwd.c	/^static char description[16] = "DESC";                        \/* used for free form description *\/$/;"	v	file:
description	gps_hat/hat_pkt_fwd.c	/^static char description[16] = "DESC";                        \/* used for free form description *\/$/;"	v	file:
device	gps_hat/single_rx_tx.c	/^static int device = 49;$/;"	v	file:
dflt	libloragw/inc/loragw_reg.h	/^    int32_t dflt;        \/*!< register default value *\/$/;"	m	struct:lgw_reg_s
difftimespec	gps_hat/dual_pkt_fwd.c	/^static double difftimespec(struct timespec end, struct timespec beginning) {$/;"	f	file:
difftimespec	gps_hat/hat_pkt_fwd.c	/^static double difftimespec(struct timespec end, struct timespec beginning) {$/;"	f	file:
difftimespec	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static double difftimespec(struct timespec end, struct timespec beginning) {$/;"	f	file:
dig_gain	libloragw/inc/loragw_hal.h	/^    uint8_t dig_gain;   \/*!> 2 bits, control of the digital gain of SX1301 *\/$/;"	m	struct:lgw_tx_gain_s
digitalRead	gps_hat/radio.c	/^int digitalRead(int gpio) {$/;"	f
digitalRead	lora_pkt_fwd/src/radio.c	/^int digitalRead(int gpio) {$/;"	f
digitalWrite	gps_hat/radio.c	/^void digitalWrite(int gpio, int state)$/;"	f
digitalWrite	lora_pkt_fwd/src/radio.c	/^void digitalWrite(int gpio, int state)$/;"	f
dio	gps_hat/radio.h	/^    uint8_t dio[3];$/;"	m	struct:__anon2
dio	lora_pkt_fwd/inc/radio.h	/^    uint8_t dio[3];$/;"	m	struct:__anon4
email	gps_hat/dual_pkt_fwd.c	/^static char email[32]  = "support@dragino.com";                        \/* used for contact email *\/$/;"	v	file:
email	gps_hat/hat_pkt_fwd.c	/^static char email[32]  = "support@dragino.com";                        \/* used for contact email *\/$/;"	v	file:
empty	gps_hat/radio.h	/^    uint8_t     empty;        \/*!> empty label *\/$/;"	m	struct:pkt_rx_s
enable	libloragw/inc/loragw_hal.h	/^    bool                        enable;             \/*!> enable or disable LBT *\/$/;"	m	struct:lgw_conf_lbt_s
enable	libloragw/inc/loragw_hal.h	/^    bool                    enable;         \/*!> enable or disable that RF chain *\/$/;"	m	struct:lgw_conf_rxrf_s
enable	libloragw/inc/loragw_hal.h	/^    bool        enable;         \/*!> enable or disable that IF chain *\/$/;"	m	struct:lgw_conf_rxif_s
exit_sig	gps_hat/dual_pkt_fwd.c	/^volatile bool exit_sig = false; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v
exit_sig	gps_hat/hat_pkt_fwd.c	/^volatile bool exit_sig = false; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v
exit_sig	gps_hat/single_rx_tx.c	/^volatile bool exit_sig = false; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v
exit_sig	libloragw/tst/test_loragw_gps.c	/^static int exit_sig = 0; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v	file:
exit_sig	libloragw/tst/test_loragw_hal.c	/^static int exit_sig = 0; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v	file:
exit_sig	lora_pkt_fwd/src/lora_pkt_fwd.c	/^volatile bool exit_sig = false; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v
exit_sig	lora_pkt_fwd/src/single_tx.c	/^volatile bool exit_sig = false; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v
exit_sig	util_pkt_logger/src/util_pkt_logger.c	/^static int exit_sig = 0; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v	file:
exit_sig	util_tx_continuous/src/util_tx_continuous.c	/^static int exit_sig = 0; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v	file:
exit_sig	util_tx_test/src/util_tx_test.c	/^static int exit_sig = 0; \/* 1 -> application terminates cleanly (shut down hardware, close open files, etc) *\/$/;"	v	file:
f_dev	libloragw/inc/loragw_hal.h	/^    uint8_t     f_dev;          \/*!> frequency deviation, in kHz (FSK only) *\/$/;"	m	struct:lgw_pkt_tx_s
filepath	gps_hat/single_rx_tx.c	/^static char filepath[32] = {'\\0'};$/;"	v	file:
fp	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static FILE *fp = NULL;$/;"	v	file:
fpga_regs	libloragw/src/loragw_fpga.c	/^const struct lgw_reg_s fpga_regs[LGW_FPGA_TOTALREGS] = {$/;"	v	typeref:struct:lgw_reg_s
free	lora_pkt_fwd/src/parson.c	47;"	d	file:
free	util_pkt_logger/src/parson.c	47;"	d	file:
freq	gps_hat/radio.h	/^    uint32_t freq;$/;"	m	struct:__anon2
freq	gps_hat/single_rx_tx.c	/^static char freq[16] = "868500000";            \/* frequency of radio *\/$/;"	v	file:
freq	lora_pkt_fwd/inc/radio.h	/^    uint32_t freq;$/;"	m	struct:__anon4
freq	lora_pkt_fwd/src/single_tx.c	/^static char freq[16] = "868500000";            \/* frequency of radio *\/$/;"	v	file:
freq_hz	gps_hat/radio.h	/^    uint32_t    freq_hz;        \/*!> center frequency of TX *\/$/;"	m	struct:pkt_tx_s
freq_hz	libloragw/inc/loragw_hal.h	/^    int32_t     freq_hz;        \/*!> center frequ of the IF chain, relative to RF chain frequency *\/$/;"	m	struct:lgw_conf_rxif_s
freq_hz	libloragw/inc/loragw_hal.h	/^    uint32_t                freq_hz;        \/*!> center frequency of the radio in Hz *\/$/;"	m	struct:lgw_conf_rxrf_s
freq_hz	libloragw/inc/loragw_hal.h	/^    uint32_t    freq_hz;        \/*!> center frequency of TX *\/$/;"	m	struct:lgw_pkt_tx_s
freq_hz	libloragw/inc/loragw_hal.h	/^    uint32_t    freq_hz;        \/*!> central frequency of the IF chain *\/$/;"	m	struct:lgw_pkt_rx_s
freq_hz	libloragw/inc/loragw_hal.h	/^    uint32_t freq_hz;$/;"	m	struct:lgw_conf_lbt_chan_s
fsk_rx_bw	libloragw/src/loragw_hal.c	/^static uint8_t fsk_rx_bw; \/* bandwidth setting of FSK modem *\/$/;"	v	file:
fsk_rx_dr	libloragw/src/loragw_hal.c	/^static uint32_t fsk_rx_dr; \/* FSK modem datarate in bauds *\/$/;"	v	file:
fsk_sync_word	libloragw/src/loragw_hal.c	/^static uint64_t fsk_sync_word= 0xC194C1; \/* default FSK sync word (ALIGNED RIGHT, MSbit first) *\/$/;"	v	file:
fsk_sync_word_size	libloragw/src/loragw_hal.c	/^static uint8_t fsk_sync_word_size = 3; \/* default number of bytes for FSK sync word *\/$/;"	v	file:
fwd_error_pkt	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool fwd_error_pkt = false; \/* packets with PAYLOAD CRC ERROR are NOT forwarded *\/$/;"	v	file:
fwd_nocrc_pkt	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool fwd_nocrc_pkt = false; \/* packets with NO PAYLOAD CRC are NOT forwarded *\/$/;"	v	file:
fwd_valid_pkt	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool fwd_valid_pkt = true; \/* packets with PAYLOAD CRC OK are forwarded *\/$/;"	v	file:
get_concentrator_time	lora_pkt_fwd/src/timersync.c	/^int get_concentrator_time(struct timeval *concent_time, struct timeval unix_time) {$/;"	f
get_img_rej	libloragw/tst/test_loragw_cal.c	/^uint8_t get_img_rej(int16_t *sig_i, int16_t *sig_q, int nb_samp, double f_sig_norm) {$/;"	f
get_processed_string	gps_hat/parson.c	/^static const char * get_processed_string(const char **string) {$/;"	f	file:
get_quoted_string	lora_pkt_fwd/src/parson.c	/^static char * get_quoted_string(const char **string) {$/;"	f	file:
get_quoted_string	util_pkt_logger/src/parson.c	/^static char * get_quoted_string(const char **string) {$/;"	f	file:
get_radio_version	gps_hat/radio.c	/^bool get_radio_version(radiodev *dev)$/;"	f
get_radio_version	lora_pkt_fwd/src/radio.c	/^bool get_radio_version(radiodev *dev)$/;"	f
getversion	gps_hat/single_rx_tx.c	/^static bool getversion = false;$/;"	v	file:
gpio_get_state	gps_hat/radio.c	/^static int gpio_get_state(int gpio) {$/;"	f	file:
gpio_get_state	lora_pkt_fwd/src/radio.c	/^static int gpio_get_state(int gpio) {$/;"	f	file:
gpio_release	gps_hat/radio.c	/^static bool gpio_release(int gpio) {$/;"	f	file:
gpio_release	lora_pkt_fwd/src/radio.c	/^static bool gpio_release(int gpio) {$/;"	f	file:
gpio_reserve	gps_hat/radio.c	/^static bool gpio_reserve(int gpio) {$/;"	f	file:
gpio_reserve	lora_pkt_fwd/src/radio.c	/^static bool gpio_reserve(int gpio) {$/;"	f	file:
gpio_set_direction	gps_hat/radio.c	/^static bool gpio_set_direction(int gpio, int direction) {$/;"	f	file:
gpio_set_direction	lora_pkt_fwd/src/radio.c	/^static bool gpio_set_direction(int gpio, int direction) {$/;"	f	file:
gpio_set_state	gps_hat/radio.c	/^static bool gpio_set_state(int gpio, int state) {$/;"	f	file:
gpio_set_state	lora_pkt_fwd/src/radio.c	/^static bool gpio_set_state(int gpio, int state) {$/;"	f	file:
gps	libloragw/inc/loragw_gps.h	/^    struct timespec gps;        \/*!> reference GPS time (since 01.Jan.1980) *\/$/;"	m	struct:tref	typeref:struct:tref::timespec
gps_alt	libloragw/src/loragw_gps.c	/^static short gps_alt = 0; \/* altitude *\/$/;"	v	file:
gps_coord_valid	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool gps_coord_valid; \/* could we get valid GPS coordinates ? *\/$/;"	v	file:
gps_day	libloragw/src/loragw_gps.c	/^static short gps_day = 0; \/* day of the month (1-31) *\/$/;"	v	file:
gps_dla	libloragw/src/loragw_gps.c	/^static short gps_dla = 0; \/* degrees of latitude *\/$/;"	v	file:
gps_dlo	libloragw/src/loragw_gps.c	/^static short gps_dlo = 0; \/* degrees of longitude *\/$/;"	v	file:
gps_enabled	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool gps_enabled = false; \/* is GPS enabled on that gateway ? *\/$/;"	v	file:
gps_fTOW	libloragw/src/loragw_gps.c	/^static int32_t gps_fTOW = 0; \/* Fractional part of iTOW (+\/-500000) in nanosec *\/$/;"	v	file:
gps_fake_enable	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool gps_fake_enable; \/* enable the feature *\/$/;"	v	file:
gps_family	libloragw/src/loragw_gps.c	/^} gps_family;$/;"	v	typeref:enum:__anon5	file:
gps_fra	libloragw/src/loragw_gps.c	/^static float gps_fra = 0.0; \/* fractions of seconds (<1) *\/$/;"	v	file:
gps_hou	libloragw/src/loragw_gps.c	/^static short gps_hou = 0; \/* hours (0-23) *\/$/;"	v	file:
gps_iTOW	libloragw/src/loragw_gps.c	/^static uint32_t gps_iTOW = 0; \/* GPS time of week in milliseconds *\/$/;"	v	file:
gps_min	libloragw/src/loragw_gps.c	/^static short gps_min = 0; \/* minutes (0-59) *\/$/;"	v	file:
gps_mla	libloragw/src/loragw_gps.c	/^static double gps_mla = 0.0; \/* minutes of latitude *\/$/;"	v	file:
gps_mlo	libloragw/src/loragw_gps.c	/^static double gps_mlo = 0.0; \/* minutes of longitude *\/$/;"	v	file:
gps_mod	libloragw/src/loragw_gps.c	/^static char gps_mod = 'N'; \/* GPS mode (N no fix, A autonomous, D differential) *\/$/;"	v	file:
gps_mon	libloragw/src/loragw_gps.c	/^static short gps_mon = 0; \/* month (1-12) *\/$/;"	v	file:
gps_msg	libloragw/inc/loragw_gps.h	/^enum gps_msg {$/;"	g
gps_ola	libloragw/src/loragw_gps.c	/^static char gps_ola = 0; \/* orientation (N-S) of latitude *\/$/;"	v	file:
gps_olo	libloragw/src/loragw_gps.c	/^static char gps_olo = 0; \/* orientation (E-W) of longitude *\/$/;"	v	file:
gps_pos_ok	libloragw/src/loragw_gps.c	/^static bool gps_pos_ok = false;$/;"	v	file:
gps_process_coords	libloragw/tst/test_loragw_gps.c	/^static void gps_process_coords(void) {$/;"	f	file:
gps_process_coords	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static void gps_process_coords(void) {$/;"	f	file:
gps_process_sync	libloragw/tst/test_loragw_gps.c	/^static void gps_process_sync(void) {$/;"	f	file:
gps_process_sync	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static void gps_process_sync(void) {$/;"	f	file:
gps_ref_valid	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool gps_ref_valid; \/* is GPS reference acceptable (ie. not too old) *\/$/;"	v	file:
gps_sat	libloragw/src/loragw_gps.c	/^static short gps_sat = 0; \/* number of satellites used for fix *\/$/;"	v	file:
gps_sec	libloragw/src/loragw_gps.c	/^static short gps_sec = 0; \/* seconds (0-60)(60 is for leap second) *\/$/;"	v	file:
gps_time_ok	libloragw/src/loragw_gps.c	/^static bool gps_time_ok = false;$/;"	v	file:
gps_tty_fd	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int gps_tty_fd = -1; \/* file descriptor of the GPS TTY port *\/$/;"	v	file:
gps_tty_path	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static char gps_tty_path[64] = "\\0"; \/* path of the TTY port GPS is connected on *\/$/;"	v	file:
gps_week	libloragw/src/loragw_gps.c	/^static int16_t gps_week = 0; \/* GPS week number of the navigation epoch *\/$/;"	v	file:
gps_yea	libloragw/src/loragw_gps.c	/^static short gps_yea = 0; \/* year (2 or 4 digits) *\/$/;"	v	file:
if_chain	libloragw/inc/loragw_hal.h	/^    uint8_t     if_chain;       \/*!> by which IF chain was packet received *\/$/;"	m	struct:lgw_pkt_rx_s
if_enable	libloragw/src/loragw_hal.c	/^static bool if_enable[LGW_IF_CHAIN_NB];$/;"	v	file:
if_freq	libloragw/src/loragw_hal.c	/^static int32_t if_freq[LGW_IF_CHAIN_NB]; \/* relative to radio frequency, +\/- in Hz *\/$/;"	v	file:
if_rf_chain	libloragw/src/loragw_hal.c	/^static bool if_rf_chain[LGW_IF_CHAIN_NB]; \/* for each IF, 0 -> radio A, 1 -> radio B *\/$/;"	v	file:
ifmod_config	libloragw/src/loragw_hal.c	/^const uint8_t ifmod_config[LGW_IF_CHAIN_NB] = LGW_IFMODEM_CONFIG;$/;"	v
img_rej_a	libloragw/tst/test_loragw_cal.c	/^    uint8_t img_rej_a;$/;"	m	struct:cal_res_s	file:
img_rej_b	libloragw/tst/test_loragw_cal.c	/^    uint8_t img_rej_b;$/;"	m	struct:cal_res_s	file:
init_socket	gps_hat/dual_pkt_fwd.c	/^static int init_socket(const char *servaddr, const char *servport, const char *rectimeout, int len) {$/;"	f	file:
init_socket	gps_hat/hat_pkt_fwd.c	/^static int init_socket(const char *servaddr, const char *servport, const char *rectimeout, int len) {$/;"	f	file:
init_socket	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int init_socket(const char *servaddr, const char *servport, const char *rectimeout, int len) {$/;"	f	file:
install	compile.sh	/^install() {$/;"	f
invert_pol	gps_hat/radio.h	/^    bool        invert_pol;     \/*!> invert signal polarity, for orthogonal downlinks (LoRa only) *\/$/;"	m	struct:pkt_tx_s
invert_pol	libloragw/inc/loragw_hal.h	/^    bool        invert_pol;     \/*!> invert signal polarity, for orthogonal downlinks (LoRa only) *\/$/;"	m	struct:lgw_pkt_tx_s
invertio	gps_hat/radio.h	/^    uint8_t invertio;$/;"	m	struct:__anon2
invertio	lora_pkt_fwd/inc/radio.h	/^    uint8_t invertio;$/;"	m	struct:__anon4
invertiq	lora_pkt_fwd/src/single_tx.c	/^static int invertiq = 0;$/;"	v	file:
iot_sk_init	reset_lgw.sh	/^iot_sk_init() {$/;"	f
iot_sk_term	reset_lgw.sh	/^iot_sk_term() {$/;"	f
iot_sk_update_gwid	update_gwid.sh	/^iot_sk_update_gwid() {$/;"	f
is_decimal	gps_hat/parson.c	/^static int is_decimal(const char *string, size_t length) {$/;"	f	file:
is_decimal	lora_pkt_fwd/src/parson.c	/^static int is_decimal(const char *string, size_t length) {$/;"	f	file:
is_decimal	util_pkt_logger/src/parson.c	/^static int is_decimal(const char *string, size_t length) {$/;"	f	file:
is_equal_freq	libloragw/src/loragw_lbt.c	/^bool is_equal_freq(uint32_t a, uint32_t b) {$/;"	f
is_utf	gps_hat/parson.c	/^static int is_utf(const unsigned char *s) {$/;"	f	file:
is_utf16_hex	lora_pkt_fwd/src/parson.c	/^static int is_utf16_hex(const unsigned char *s) {$/;"	f	file:
is_utf16_hex	util_pkt_logger/src/parson.c	/^static int is_utf16_hex(const unsigned char *s) {$/;"	f	file:
is_valid_utf8	lora_pkt_fwd/src/parson.c	/^static int is_valid_utf8(const char *string, size_t string_len) {$/;"	f	file:
is_valid_utf8	util_pkt_logger/src/parson.c	/^static int is_valid_utf8(const char *string, size_t string_len) {$/;"	f	file:
items	gps_hat/parson.c	/^    JSON_Value **items;$/;"	m	struct:json_array_t	file:
items	lora_pkt_fwd/src/parson.c	/^    JSON_Value **items;$/;"	m	struct:json_array_t	file:
items	util_pkt_logger/src/parson.c	/^    JSON_Value **items;$/;"	m	struct:json_array_t	file:
jit_collision_test	gps_hat/jitqueue.c	/^bool jit_collision_test(uint32_t p1_count_us, uint32_t p1_pre_delay, uint32_t p1_post_delay, uint32_t p2_count_us, uint32_t p2_pre_delay, uint32_t p2_post_delay) {$/;"	f
jit_collision_test	lora_pkt_fwd/src/jitqueue.c	/^bool jit_collision_test(uint32_t p1_count_us, uint32_t p1_pre_delay, uint32_t p1_post_delay, uint32_t p2_count_us, uint32_t p2_pre_delay, uint32_t p2_post_delay) {$/;"	f
jit_dequeue	gps_hat/jitqueue.c	/^enum jit_error_e jit_dequeue(struct jit_queue_s *queue, int index, struct pkt_tx_s *packet, enum jit_pkt_type_e *pkt_type) {$/;"	f
jit_dequeue	lora_pkt_fwd/src/jitqueue.c	/^enum jit_error_e jit_dequeue(struct jit_queue_s *queue, int index, struct lgw_pkt_tx_s *packet, enum jit_pkt_type_e *pkt_type) {$/;"	f
jit_enqueue	gps_hat/jitqueue.c	/^enum jit_error_e jit_enqueue(struct jit_queue_s *queue, struct timeval *time, struct pkt_tx_s *packet, enum jit_pkt_type_e pkt_type) {$/;"	f
jit_enqueue	lora_pkt_fwd/src/jitqueue.c	/^enum jit_error_e jit_enqueue(struct jit_queue_s *queue, struct timeval *time, struct lgw_pkt_tx_s *packet, enum jit_pkt_type_e pkt_type) {$/;"	f
jit_error_e	gps_hat/jitqueue.h	/^enum jit_error_e {$/;"	g
jit_error_e	lora_pkt_fwd/inc/jitqueue.h	/^enum jit_error_e {$/;"	g
jit_node_s	gps_hat/jitqueue.h	/^struct jit_node_s {$/;"	s
jit_node_s	lora_pkt_fwd/inc/jitqueue.h	/^struct jit_node_s {$/;"	s
jit_peek	gps_hat/jitqueue.c	/^enum jit_error_e jit_peek(struct jit_queue_s *queue, struct timeval *time, int *pkt_idx) {$/;"	f
jit_peek	lora_pkt_fwd/src/jitqueue.c	/^enum jit_error_e jit_peek(struct jit_queue_s *queue, struct timeval *time, int *pkt_idx) {$/;"	f
jit_pkt_type_e	gps_hat/jitqueue.h	/^enum jit_pkt_type_e {$/;"	g
jit_pkt_type_e	lora_pkt_fwd/inc/jitqueue.h	/^enum jit_pkt_type_e {$/;"	g
jit_print_queue	gps_hat/jitqueue.c	/^void jit_print_queue(struct jit_queue_s *queue, bool show_all, int debug_level) {$/;"	f
jit_print_queue	lora_pkt_fwd/src/jitqueue.c	/^void jit_print_queue(struct jit_queue_s *queue, bool show_all, int debug_level) {$/;"	f
jit_queue	gps_hat/dual_pkt_fwd.c	/^static struct jit_queue_s jit_queue;$/;"	v	typeref:struct:jit_queue_s	file:
jit_queue	gps_hat/hat_pkt_fwd.c	/^static struct jit_queue_s jit_queue;$/;"	v	typeref:struct:jit_queue_s	file:
jit_queue	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct jit_queue_s jit_queue;$/;"	v	typeref:struct:jit_queue_s	file:
jit_queue_init	gps_hat/jitqueue.c	/^void jit_queue_init(struct jit_queue_s *queue) {$/;"	f
jit_queue_init	lora_pkt_fwd/src/jitqueue.c	/^void jit_queue_init(struct jit_queue_s *queue) {$/;"	f
jit_queue_is_empty	gps_hat/jitqueue.c	/^bool jit_queue_is_empty(struct jit_queue_s *queue) {$/;"	f
jit_queue_is_empty	lora_pkt_fwd/src/jitqueue.c	/^bool jit_queue_is_empty(struct jit_queue_s *queue) {$/;"	f
jit_queue_is_full	gps_hat/jitqueue.c	/^bool jit_queue_is_full(struct jit_queue_s *queue) {$/;"	f
jit_queue_is_full	lora_pkt_fwd/src/jitqueue.c	/^bool jit_queue_is_full(struct jit_queue_s *queue) {$/;"	f
jit_queue_s	gps_hat/jitqueue.h	/^struct jit_queue_s {$/;"	s
jit_queue_s	lora_pkt_fwd/inc/jitqueue.h	/^struct jit_queue_s {$/;"	s
jit_sort_queue	gps_hat/jitqueue.c	/^void jit_sort_queue(struct jit_queue_s *queue) {$/;"	f
jit_sort_queue	lora_pkt_fwd/src/jitqueue.c	/^void jit_sort_queue(struct jit_queue_s *queue) {$/;"	f
json_array	lora_pkt_fwd/src/parson.c	/^JSON_Array * json_array  (const JSON_Value *value) {$/;"	f
json_array	util_pkt_logger/src/parson.c	/^JSON_Array * json_array  (const JSON_Value *value) {$/;"	f
json_array_add	gps_hat/parson.c	/^static int json_array_add(JSON_Array *array, JSON_Value *value) {$/;"	f	file:
json_array_add	lora_pkt_fwd/src/parson.c	/^static JSON_Status json_array_add(JSON_Array *array, JSON_Value *value) {$/;"	f	file:
json_array_add	util_pkt_logger/src/parson.c	/^static JSON_Status json_array_add(JSON_Array *array, JSON_Value *value) {$/;"	f	file:
json_array_append_boolean	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_append_boolean(JSON_Array *array, int boolean) {$/;"	f
json_array_append_boolean	util_pkt_logger/src/parson.c	/^JSON_Status json_array_append_boolean(JSON_Array *array, int boolean) {$/;"	f
json_array_append_null	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_append_null(JSON_Array *array) {$/;"	f
json_array_append_null	util_pkt_logger/src/parson.c	/^JSON_Status json_array_append_null(JSON_Array *array) {$/;"	f
json_array_append_number	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_append_number(JSON_Array *array, double number) {$/;"	f
json_array_append_number	util_pkt_logger/src/parson.c	/^JSON_Status json_array_append_number(JSON_Array *array, double number) {$/;"	f
json_array_append_string	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_append_string(JSON_Array *array, const char *string) {$/;"	f
json_array_append_string	util_pkt_logger/src/parson.c	/^JSON_Status json_array_append_string(JSON_Array *array, const char *string) {$/;"	f
json_array_append_value	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_append_value(JSON_Array *array, JSON_Value *value) {$/;"	f
json_array_append_value	util_pkt_logger/src/parson.c	/^JSON_Status json_array_append_value(JSON_Array *array, JSON_Value *value) {$/;"	f
json_array_clear	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_clear(JSON_Array *array) {$/;"	f
json_array_clear	util_pkt_logger/src/parson.c	/^JSON_Status json_array_clear(JSON_Array *array) {$/;"	f
json_array_free	gps_hat/parson.c	/^static void json_array_free(JSON_Array *array) {$/;"	f	file:
json_array_free	lora_pkt_fwd/src/parson.c	/^static void json_array_free(JSON_Array *array) {$/;"	f	file:
json_array_free	util_pkt_logger/src/parson.c	/^static void json_array_free(JSON_Array *array) {$/;"	f	file:
json_array_get_array	gps_hat/parson.c	/^JSON_Array * json_array_get_array(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_array	lora_pkt_fwd/src/parson.c	/^JSON_Array * json_array_get_array(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_array	util_pkt_logger/src/parson.c	/^JSON_Array * json_array_get_array(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_boolean	gps_hat/parson.c	/^int json_array_get_boolean(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_boolean	lora_pkt_fwd/src/parson.c	/^int json_array_get_boolean(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_boolean	util_pkt_logger/src/parson.c	/^int json_array_get_boolean(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_count	gps_hat/parson.c	/^size_t json_array_get_count(const JSON_Array *array) {$/;"	f
json_array_get_count	lora_pkt_fwd/src/parson.c	/^size_t json_array_get_count(const JSON_Array *array) {$/;"	f
json_array_get_count	util_pkt_logger/src/parson.c	/^size_t json_array_get_count(const JSON_Array *array) {$/;"	f
json_array_get_number	gps_hat/parson.c	/^double json_array_get_number(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_number	lora_pkt_fwd/src/parson.c	/^double json_array_get_number(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_number	util_pkt_logger/src/parson.c	/^double json_array_get_number(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_object	gps_hat/parson.c	/^JSON_Object * json_array_get_object(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_object	lora_pkt_fwd/src/parson.c	/^JSON_Object * json_array_get_object(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_object	util_pkt_logger/src/parson.c	/^JSON_Object * json_array_get_object(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_string	gps_hat/parson.c	/^const char * json_array_get_string(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_string	lora_pkt_fwd/src/parson.c	/^const char * json_array_get_string(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_string	util_pkt_logger/src/parson.c	/^const char * json_array_get_string(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_value	gps_hat/parson.c	/^JSON_Value * json_array_get_value(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_value	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_array_get_value(const JSON_Array *array, size_t index) {$/;"	f
json_array_get_value	util_pkt_logger/src/parson.c	/^JSON_Value * json_array_get_value(const JSON_Array *array, size_t index) {$/;"	f
json_array_init	gps_hat/parson.c	/^static JSON_Array * json_array_init(void) {$/;"	f	file:
json_array_init	lora_pkt_fwd/src/parson.c	/^static JSON_Array * json_array_init(void) {$/;"	f	file:
json_array_init	util_pkt_logger/src/parson.c	/^static JSON_Array * json_array_init(void) {$/;"	f	file:
json_array_remove	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_remove(JSON_Array *array, size_t ix) {$/;"	f
json_array_remove	util_pkt_logger/src/parson.c	/^JSON_Status json_array_remove(JSON_Array *array, size_t ix) {$/;"	f
json_array_replace_boolean	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_replace_boolean(JSON_Array *array, size_t i, int boolean) {$/;"	f
json_array_replace_boolean	util_pkt_logger/src/parson.c	/^JSON_Status json_array_replace_boolean(JSON_Array *array, size_t i, int boolean) {$/;"	f
json_array_replace_null	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_replace_null(JSON_Array *array, size_t i) {$/;"	f
json_array_replace_null	util_pkt_logger/src/parson.c	/^JSON_Status json_array_replace_null(JSON_Array *array, size_t i) {$/;"	f
json_array_replace_number	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_replace_number(JSON_Array *array, size_t i, double number) {$/;"	f
json_array_replace_number	util_pkt_logger/src/parson.c	/^JSON_Status json_array_replace_number(JSON_Array *array, size_t i, double number) {$/;"	f
json_array_replace_string	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_replace_string(JSON_Array *array, size_t i, const char* string) {$/;"	f
json_array_replace_string	util_pkt_logger/src/parson.c	/^JSON_Status json_array_replace_string(JSON_Array *array, size_t i, const char* string) {$/;"	f
json_array_replace_value	lora_pkt_fwd/src/parson.c	/^JSON_Status json_array_replace_value(JSON_Array *array, size_t ix, JSON_Value *value) {$/;"	f
json_array_replace_value	util_pkt_logger/src/parson.c	/^JSON_Status json_array_replace_value(JSON_Array *array, size_t ix, JSON_Value *value) {$/;"	f
json_array_resize	gps_hat/parson.c	/^static int json_array_resize(JSON_Array *array, size_t capacity) {$/;"	f	file:
json_array_resize	lora_pkt_fwd/src/parson.c	/^static JSON_Status json_array_resize(JSON_Array *array, size_t new_capacity) {$/;"	f	file:
json_array_resize	util_pkt_logger/src/parson.c	/^static JSON_Status json_array_resize(JSON_Array *array, size_t new_capacity) {$/;"	f	file:
json_array_t	gps_hat/parson.c	/^struct json_array_t {$/;"	s	file:
json_array_t	lora_pkt_fwd/src/parson.c	/^struct json_array_t {$/;"	s	file:
json_array_t	util_pkt_logger/src/parson.c	/^struct json_array_t {$/;"	s	file:
json_boolean	lora_pkt_fwd/src/parson.c	/^int json_boolean(const JSON_Value *value) {$/;"	f
json_boolean	util_pkt_logger/src/parson.c	/^int json_boolean(const JSON_Value *value) {$/;"	f
json_free_serialized_string	lora_pkt_fwd/src/parson.c	/^void json_free_serialized_string(char *string) {$/;"	f
json_free_serialized_string	util_pkt_logger/src/parson.c	/^void json_free_serialized_string(char *string) {$/;"	f
json_number	lora_pkt_fwd/src/parson.c	/^double json_number (const JSON_Value *value) {$/;"	f
json_number	util_pkt_logger/src/parson.c	/^double json_number (const JSON_Value *value) {$/;"	f
json_object	lora_pkt_fwd/src/parson.c	/^JSON_Object * json_object (const JSON_Value *value) {$/;"	f
json_object	util_pkt_logger/src/parson.c	/^JSON_Object * json_object (const JSON_Value *value) {$/;"	f
json_object_add	gps_hat/parson.c	/^static int json_object_add(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	file:
json_object_add	lora_pkt_fwd/src/parson.c	/^static JSON_Status json_object_add(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	file:
json_object_add	util_pkt_logger/src/parson.c	/^static JSON_Status json_object_add(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f	file:
json_object_clear	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_clear(JSON_Object *object) {$/;"	f
json_object_clear	util_pkt_logger/src/parson.c	/^JSON_Status json_object_clear(JSON_Object *object) {$/;"	f
json_object_dotget_array	gps_hat/parson.c	/^JSON_Array * json_object_dotget_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_array	lora_pkt_fwd/src/parson.c	/^JSON_Array * json_object_dotget_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_array	util_pkt_logger/src/parson.c	/^JSON_Array * json_object_dotget_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_boolean	gps_hat/parson.c	/^int json_object_dotget_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_boolean	lora_pkt_fwd/src/parson.c	/^int json_object_dotget_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_boolean	util_pkt_logger/src/parson.c	/^int json_object_dotget_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_number	gps_hat/parson.c	/^double json_object_dotget_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_number	lora_pkt_fwd/src/parson.c	/^double json_object_dotget_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_number	util_pkt_logger/src/parson.c	/^double json_object_dotget_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_object	gps_hat/parson.c	/^JSON_Object * json_object_dotget_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_object	lora_pkt_fwd/src/parson.c	/^JSON_Object * json_object_dotget_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_object	util_pkt_logger/src/parson.c	/^JSON_Object * json_object_dotget_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_string	gps_hat/parson.c	/^const char * json_object_dotget_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_string	lora_pkt_fwd/src/parson.c	/^const char * json_object_dotget_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_string	util_pkt_logger/src/parson.c	/^const char * json_object_dotget_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_value	gps_hat/parson.c	/^JSON_Value * json_object_dotget_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_value	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_object_dotget_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotget_value	util_pkt_logger/src/parson.c	/^JSON_Value * json_object_dotget_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_dotremove	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_dotremove(JSON_Object *object, const char *name) {$/;"	f
json_object_dotremove	util_pkt_logger/src/parson.c	/^JSON_Status json_object_dotremove(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_boolean	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_dotset_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_dotset_boolean	util_pkt_logger/src/parson.c	/^JSON_Status json_object_dotset_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_dotset_null	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_dotset_null(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_null	util_pkt_logger/src/parson.c	/^JSON_Status json_object_dotset_null(JSON_Object *object, const char *name) {$/;"	f
json_object_dotset_number	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_dotset_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_dotset_number	util_pkt_logger/src/parson.c	/^JSON_Status json_object_dotset_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_dotset_string	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_dotset_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_dotset_string	util_pkt_logger/src/parson.c	/^JSON_Status json_object_dotset_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_dotset_value	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_dotset_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_dotset_value	util_pkt_logger/src/parson.c	/^JSON_Status json_object_dotset_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_free	gps_hat/parson.c	/^static void json_object_free(JSON_Object *object) {$/;"	f	file:
json_object_free	lora_pkt_fwd/src/parson.c	/^static void json_object_free(JSON_Object *object) {$/;"	f	file:
json_object_free	util_pkt_logger/src/parson.c	/^static void json_object_free(JSON_Object *object) {$/;"	f	file:
json_object_get_array	gps_hat/parson.c	/^JSON_Array * json_object_get_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_array	lora_pkt_fwd/src/parson.c	/^JSON_Array * json_object_get_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_array	util_pkt_logger/src/parson.c	/^JSON_Array * json_object_get_array(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_boolean	gps_hat/parson.c	/^int json_object_get_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_boolean	lora_pkt_fwd/src/parson.c	/^int json_object_get_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_boolean	util_pkt_logger/src/parson.c	/^int json_object_get_boolean(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_count	gps_hat/parson.c	/^size_t json_object_get_count(const JSON_Object *object) {$/;"	f
json_object_get_count	lora_pkt_fwd/src/parson.c	/^size_t json_object_get_count(const JSON_Object *object) {$/;"	f
json_object_get_count	util_pkt_logger/src/parson.c	/^size_t json_object_get_count(const JSON_Object *object) {$/;"	f
json_object_get_name	gps_hat/parson.c	/^const char * json_object_get_name(const JSON_Object *object, size_t index) {$/;"	f
json_object_get_name	lora_pkt_fwd/src/parson.c	/^const char * json_object_get_name(const JSON_Object *object, size_t index) {$/;"	f
json_object_get_name	util_pkt_logger/src/parson.c	/^const char * json_object_get_name(const JSON_Object *object, size_t index) {$/;"	f
json_object_get_number	gps_hat/parson.c	/^double json_object_get_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_number	lora_pkt_fwd/src/parson.c	/^double json_object_get_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_number	util_pkt_logger/src/parson.c	/^double json_object_get_number(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_object	gps_hat/parson.c	/^JSON_Object * json_object_get_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_object	lora_pkt_fwd/src/parson.c	/^JSON_Object * json_object_get_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_object	util_pkt_logger/src/parson.c	/^JSON_Object * json_object_get_object(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_string	gps_hat/parson.c	/^const char * json_object_get_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_string	lora_pkt_fwd/src/parson.c	/^const char * json_object_get_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_string	util_pkt_logger/src/parson.c	/^const char * json_object_get_string(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value	gps_hat/parson.c	/^JSON_Value * json_object_get_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_object_get_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_get_value	util_pkt_logger/src/parson.c	/^JSON_Value * json_object_get_value(const JSON_Object *object, const char *name) {$/;"	f
json_object_init	gps_hat/parson.c	/^static JSON_Object * json_object_init(void) {$/;"	f	file:
json_object_init	lora_pkt_fwd/src/parson.c	/^static JSON_Object * json_object_init(void) {$/;"	f	file:
json_object_init	util_pkt_logger/src/parson.c	/^static JSON_Object * json_object_init(void) {$/;"	f	file:
json_object_nget_value	gps_hat/parson.c	/^static JSON_Value * json_object_nget_value(const JSON_Object *object, const char *name, size_t n) {$/;"	f	file:
json_object_nget_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * json_object_nget_value(const JSON_Object *object, const char *name, size_t n) {$/;"	f	file:
json_object_nget_value	util_pkt_logger/src/parson.c	/^static JSON_Value * json_object_nget_value(const JSON_Object *object, const char *name, size_t n) {$/;"	f	file:
json_object_remove	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_remove(JSON_Object *object, const char *name) {$/;"	f
json_object_remove	util_pkt_logger/src/parson.c	/^JSON_Status json_object_remove(JSON_Object *object, const char *name) {$/;"	f
json_object_resize	gps_hat/parson.c	/^static int json_object_resize(JSON_Object *object, size_t capacity) {$/;"	f	file:
json_object_resize	lora_pkt_fwd/src/parson.c	/^static JSON_Status json_object_resize(JSON_Object *object, size_t new_capacity) {$/;"	f	file:
json_object_resize	util_pkt_logger/src/parson.c	/^static JSON_Status json_object_resize(JSON_Object *object, size_t new_capacity) {$/;"	f	file:
json_object_set_boolean	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_set_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_set_boolean	util_pkt_logger/src/parson.c	/^JSON_Status json_object_set_boolean(JSON_Object *object, const char *name, int boolean) {$/;"	f
json_object_set_null	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_set_null(JSON_Object *object, const char *name) {$/;"	f
json_object_set_null	util_pkt_logger/src/parson.c	/^JSON_Status json_object_set_null(JSON_Object *object, const char *name) {$/;"	f
json_object_set_number	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_set_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_set_number	util_pkt_logger/src/parson.c	/^JSON_Status json_object_set_number(JSON_Object *object, const char *name, double number) {$/;"	f
json_object_set_string	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_set_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_set_string	util_pkt_logger/src/parson.c	/^JSON_Status json_object_set_string(JSON_Object *object, const char *name, const char *string) {$/;"	f
json_object_set_value	lora_pkt_fwd/src/parson.c	/^JSON_Status json_object_set_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_set_value	util_pkt_logger/src/parson.c	/^JSON_Status json_object_set_value(JSON_Object *object, const char *name, JSON_Value *value) {$/;"	f
json_object_t	gps_hat/parson.c	/^struct json_object_t {$/;"	s	file:
json_object_t	lora_pkt_fwd/src/parson.c	/^struct json_object_t {$/;"	s	file:
json_object_t	util_pkt_logger/src/parson.c	/^struct json_object_t {$/;"	s	file:
json_parse_file	gps_hat/parson.c	/^JSON_Value * json_parse_file(const char *filename) {$/;"	f
json_parse_file	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_parse_file(const char *filename) {$/;"	f
json_parse_file	util_pkt_logger/src/parson.c	/^JSON_Value * json_parse_file(const char *filename) {$/;"	f
json_parse_file_with_comments	gps_hat/parson.c	/^JSON_Value * json_parse_file_with_comments(const char *filename) {$/;"	f
json_parse_file_with_comments	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_parse_file_with_comments(const char *filename) {$/;"	f
json_parse_file_with_comments	util_pkt_logger/src/parson.c	/^JSON_Value * json_parse_file_with_comments(const char *filename) {$/;"	f
json_parse_string	gps_hat/parson.c	/^JSON_Value * json_parse_string(const char *string) {$/;"	f
json_parse_string	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_parse_string(const char *string) {$/;"	f
json_parse_string	util_pkt_logger/src/parson.c	/^JSON_Value * json_parse_string(const char *string) {$/;"	f
json_parse_string_with_comments	gps_hat/parson.c	/^JSON_Value * json_parse_string_with_comments(const char *string) {$/;"	f
json_parse_string_with_comments	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_parse_string_with_comments(const char *string) {$/;"	f
json_parse_string_with_comments	util_pkt_logger/src/parson.c	/^JSON_Value * json_parse_string_with_comments(const char *string) {$/;"	f
json_result_t	lora_pkt_fwd/inc/parson.h	/^enum json_result_t {$/;"	g
json_result_t	util_pkt_logger/inc/parson.h	/^enum json_result_t {$/;"	g
json_serialization_size	lora_pkt_fwd/src/parson.c	/^size_t json_serialization_size(const JSON_Value *value) {$/;"	f
json_serialization_size	util_pkt_logger/src/parson.c	/^size_t json_serialization_size(const JSON_Value *value) {$/;"	f
json_serialization_size_pretty	lora_pkt_fwd/src/parson.c	/^size_t json_serialization_size_pretty(const JSON_Value *value) {$/;"	f
json_serialization_size_pretty	util_pkt_logger/src/parson.c	/^size_t json_serialization_size_pretty(const JSON_Value *value) {$/;"	f
json_serialize_string	lora_pkt_fwd/src/parson.c	/^static int json_serialize_string(const char *string, char *buf) {$/;"	f	file:
json_serialize_string	util_pkt_logger/src/parson.c	/^static int json_serialize_string(const char *string, char *buf) {$/;"	f	file:
json_serialize_to_buffer	lora_pkt_fwd/src/parson.c	/^JSON_Status json_serialize_to_buffer(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer	util_pkt_logger/src/parson.c	/^JSON_Status json_serialize_to_buffer(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_pretty	lora_pkt_fwd/src/parson.c	/^JSON_Status json_serialize_to_buffer_pretty(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_pretty	util_pkt_logger/src/parson.c	/^JSON_Status json_serialize_to_buffer_pretty(const JSON_Value *value, char *buf, size_t buf_size_in_bytes) {$/;"	f
json_serialize_to_buffer_r	lora_pkt_fwd/src/parson.c	/^static int json_serialize_to_buffer_r(const JSON_Value *value, char *buf, int level, int is_pretty, char *num_buf)$/;"	f	file:
json_serialize_to_buffer_r	util_pkt_logger/src/parson.c	/^static int json_serialize_to_buffer_r(const JSON_Value *value, char *buf, int level, int is_pretty, char *num_buf)$/;"	f	file:
json_serialize_to_file	lora_pkt_fwd/src/parson.c	/^JSON_Status json_serialize_to_file(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_file	util_pkt_logger/src/parson.c	/^JSON_Status json_serialize_to_file(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_file_pretty	lora_pkt_fwd/src/parson.c	/^JSON_Status json_serialize_to_file_pretty(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_file_pretty	util_pkt_logger/src/parson.c	/^JSON_Status json_serialize_to_file_pretty(const JSON_Value *value, const char *filename) {$/;"	f
json_serialize_to_string	lora_pkt_fwd/src/parson.c	/^char * json_serialize_to_string(const JSON_Value *value) {$/;"	f
json_serialize_to_string	util_pkt_logger/src/parson.c	/^char * json_serialize_to_string(const JSON_Value *value) {$/;"	f
json_serialize_to_string_pretty	lora_pkt_fwd/src/parson.c	/^char * json_serialize_to_string_pretty(const JSON_Value *value) {$/;"	f
json_serialize_to_string_pretty	util_pkt_logger/src/parson.c	/^char * json_serialize_to_string_pretty(const JSON_Value *value) {$/;"	f
json_set_allocation_functions	lora_pkt_fwd/src/parson.c	/^void json_set_allocation_functions(JSON_Malloc_Function malloc_fun, JSON_Free_Function free_fun) {$/;"	f
json_set_allocation_functions	util_pkt_logger/src/parson.c	/^void json_set_allocation_functions(JSON_Malloc_Function malloc_fun, JSON_Free_Function free_fun) {$/;"	f
json_string	lora_pkt_fwd/src/parson.c	/^const char * json_string (const JSON_Value *value) {$/;"	f
json_string	util_pkt_logger/src/parson.c	/^const char * json_string (const JSON_Value *value) {$/;"	f
json_type	lora_pkt_fwd/src/parson.c	/^JSON_Value_Type json_type(const JSON_Value *value) {$/;"	f
json_type	util_pkt_logger/src/parson.c	/^JSON_Value_Type json_type(const JSON_Value *value) {$/;"	f
json_validate	lora_pkt_fwd/src/parson.c	/^JSON_Status json_validate(const JSON_Value *schema, const JSON_Value *value) {$/;"	f
json_validate	util_pkt_logger/src/parson.c	/^JSON_Status json_validate(const JSON_Value *schema, const JSON_Value *value) {$/;"	f
json_value_deep_copy	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_value_deep_copy(const JSON_Value *value) {$/;"	f
json_value_deep_copy	util_pkt_logger/src/parson.c	/^JSON_Value * json_value_deep_copy(const JSON_Value *value) {$/;"	f
json_value_equals	lora_pkt_fwd/src/parson.c	/^JSON_Status json_value_equals(const JSON_Value *a, const JSON_Value *b) {$/;"	f
json_value_equals	util_pkt_logger/src/parson.c	/^JSON_Status json_value_equals(const JSON_Value *a, const JSON_Value *b) {$/;"	f
json_value_free	gps_hat/parson.c	/^void json_value_free(JSON_Value *value) {$/;"	f
json_value_free	lora_pkt_fwd/src/parson.c	/^void json_value_free(JSON_Value *value) {$/;"	f
json_value_free	util_pkt_logger/src/parson.c	/^void json_value_free(JSON_Value *value) {$/;"	f
json_value_get_array	gps_hat/parson.c	/^JSON_Array * json_value_get_array(const JSON_Value *value) {$/;"	f
json_value_get_array	lora_pkt_fwd/src/parson.c	/^JSON_Array * json_value_get_array(const JSON_Value *value) {$/;"	f
json_value_get_array	util_pkt_logger/src/parson.c	/^JSON_Array * json_value_get_array(const JSON_Value *value) {$/;"	f
json_value_get_boolean	gps_hat/parson.c	/^int json_value_get_boolean(const JSON_Value *value) {$/;"	f
json_value_get_boolean	lora_pkt_fwd/src/parson.c	/^int json_value_get_boolean(const JSON_Value *value) {$/;"	f
json_value_get_boolean	util_pkt_logger/src/parson.c	/^int json_value_get_boolean(const JSON_Value *value) {$/;"	f
json_value_get_number	gps_hat/parson.c	/^double json_value_get_number(const JSON_Value *value) {$/;"	f
json_value_get_number	lora_pkt_fwd/src/parson.c	/^double json_value_get_number(const JSON_Value *value) {$/;"	f
json_value_get_number	util_pkt_logger/src/parson.c	/^double json_value_get_number(const JSON_Value *value) {$/;"	f
json_value_get_object	gps_hat/parson.c	/^JSON_Object * json_value_get_object(const JSON_Value *value) {$/;"	f
json_value_get_object	lora_pkt_fwd/src/parson.c	/^JSON_Object * json_value_get_object(const JSON_Value *value) {$/;"	f
json_value_get_object	util_pkt_logger/src/parson.c	/^JSON_Object * json_value_get_object(const JSON_Value *value) {$/;"	f
json_value_get_string	gps_hat/parson.c	/^const char * json_value_get_string(const JSON_Value *value) {$/;"	f
json_value_get_string	lora_pkt_fwd/src/parson.c	/^const char * json_value_get_string(const JSON_Value *value) {$/;"	f
json_value_get_string	util_pkt_logger/src/parson.c	/^const char * json_value_get_string(const JSON_Value *value) {$/;"	f
json_value_get_type	gps_hat/parson.c	/^JSON_Value_Type json_value_get_type(const JSON_Value *value) {$/;"	f
json_value_get_type	lora_pkt_fwd/src/parson.c	/^JSON_Value_Type json_value_get_type(const JSON_Value *value) {$/;"	f
json_value_get_type	util_pkt_logger/src/parson.c	/^JSON_Value_Type json_value_get_type(const JSON_Value *value) {$/;"	f
json_value_init_array	gps_hat/parson.c	/^static JSON_Value * json_value_init_array(void) {$/;"	f	file:
json_value_init_array	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_value_init_array(void) {$/;"	f
json_value_init_array	util_pkt_logger/src/parson.c	/^JSON_Value * json_value_init_array(void) {$/;"	f
json_value_init_boolean	gps_hat/parson.c	/^static JSON_Value * json_value_init_boolean(int boolean) {$/;"	f	file:
json_value_init_boolean	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_value_init_boolean(int boolean) {$/;"	f
json_value_init_boolean	util_pkt_logger/src/parson.c	/^JSON_Value * json_value_init_boolean(int boolean) {$/;"	f
json_value_init_null	gps_hat/parson.c	/^static JSON_Value * json_value_init_null(void) {$/;"	f	file:
json_value_init_null	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_value_init_null(void) {$/;"	f
json_value_init_null	util_pkt_logger/src/parson.c	/^JSON_Value * json_value_init_null(void) {$/;"	f
json_value_init_number	gps_hat/parson.c	/^static JSON_Value * json_value_init_number(double number) {$/;"	f	file:
json_value_init_number	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_value_init_number(double number) {$/;"	f
json_value_init_number	util_pkt_logger/src/parson.c	/^JSON_Value * json_value_init_number(double number) {$/;"	f
json_value_init_object	gps_hat/parson.c	/^static JSON_Value * json_value_init_object(void) {$/;"	f	file:
json_value_init_object	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_value_init_object(void) {$/;"	f
json_value_init_object	util_pkt_logger/src/parson.c	/^JSON_Value * json_value_init_object(void) {$/;"	f
json_value_init_string	gps_hat/parson.c	/^static JSON_Value * json_value_init_string(const char *string) {$/;"	f	file:
json_value_init_string	lora_pkt_fwd/src/parson.c	/^JSON_Value * json_value_init_string(const char *string) {$/;"	f
json_value_init_string	util_pkt_logger/src/parson.c	/^JSON_Value * json_value_init_string(const char *string) {$/;"	f
json_value_init_string_no_copy	lora_pkt_fwd/src/parson.c	/^static JSON_Value * json_value_init_string_no_copy(char *string) {$/;"	f	file:
json_value_init_string_no_copy	util_pkt_logger/src/parson.c	/^static JSON_Value * json_value_init_string_no_copy(char *string) {$/;"	f	file:
json_value_t	gps_hat/parson.c	/^struct json_value_t {$/;"	s	file:
json_value_t	lora_pkt_fwd/src/parson.c	/^struct json_value_t {$/;"	s	file:
json_value_t	util_pkt_logger/src/parson.c	/^struct json_value_t {$/;"	s	file:
json_value_type	gps_hat/parson.h	/^typedef enum json_value_type {$/;"	g
json_value_type	lora_pkt_fwd/inc/parson.h	/^enum json_value_type {$/;"	g
json_value_type	util_pkt_logger/inc/parson.h	/^enum json_value_type {$/;"	g
json_value_value	gps_hat/parson.c	/^typedef union json_value_value {$/;"	u	file:
json_value_value	lora_pkt_fwd/src/parson.c	/^typedef union json_value_value {$/;"	u	file:
json_value_value	util_pkt_logger/src/parson.c	/^typedef union json_value_value {$/;"	u	file:
keepalive_time	gps_hat/dual_pkt_fwd.c	/^static int keepalive_time = DEFAULT_KEEPALIVE; \/* send a PULL_DATA request every X seconds, negative = disabled *\/$/;"	v	file:
keepalive_time	gps_hat/hat_pkt_fwd.c	/^static int keepalive_time = DEFAULT_KEEPALIVE; \/* send a PULL_DATA request every X seconds, negative = disabled *\/$/;"	v	file:
keepalive_time	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int keepalive_time = DEFAULT_KEEPALIVE; \/* send a PULL_DATA request every X seconds, negative = disabled *\/$/;"	v	file:
lat	gps_hat/dual_pkt_fwd.c	/^static float lat = 0.0;$/;"	v	file:
lat	gps_hat/hat_pkt_fwd.c	/^static float lat = 0.0;$/;"	v	file:
lat	libloragw/inc/loragw_gps.h	/^    double  lat;    \/*!> latitude [-90,90] (North +, South -) *\/$/;"	m	struct:coord_s
lbt_channel_cfg	libloragw/src/loragw_lbt.c	/^static struct lgw_conf_lbt_chan_s lbt_channel_cfg[LBT_CHANNEL_FREQ_NB];$/;"	v	typeref:struct:lgw_conf_lbt_chan_s	file:
lbt_enable	libloragw/src/loragw_lbt.c	/^static bool lbt_enable;$/;"	v	file:
lbt_is_channel_free	libloragw/src/loragw_lbt.c	/^int lbt_is_channel_free(struct lgw_pkt_tx_s * pkt_data, uint16_t tx_start_delay, bool * tx_allowed) {$/;"	f
lbt_is_enabled	libloragw/src/loragw_lbt.c	/^bool lbt_is_enabled(void) {$/;"	f
lbt_nb_active_channel	libloragw/src/loragw_lbt.c	/^static uint8_t lbt_nb_active_channel;$/;"	v	file:
lbt_rssi_offset_dB	libloragw/src/loragw_lbt.c	/^static int8_t lbt_rssi_offset_dB;$/;"	v	file:
lbt_rssi_target_dBm	libloragw/src/loragw_lbt.c	/^static int8_t lbt_rssi_target_dBm;$/;"	v	file:
lbt_setconf	libloragw/src/loragw_lbt.c	/^int lbt_setconf(struct lgw_conf_lbt_s * conf) {$/;"	f
lbt_setup	libloragw/src/loragw_lbt.c	/^int lbt_setup(void) {$/;"	f
lbt_start	libloragw/src/loragw_lbt.c	/^int lbt_start(void) {$/;"	f
lbt_start_freq	libloragw/src/loragw_lbt.c	/^static uint32_t lbt_start_freq;$/;"	v	file:
leng	libloragw/inc/loragw_reg.h	/^    uint8_t leng;        \/*!< number of bits in the register *\/$/;"	m	struct:lgw_reg_s
lgw_abort_tx	libloragw/src/loragw_hal.c	/^int lgw_abort_tx(void) {$/;"	f
lgw_board_setconf	libloragw/src/loragw_hal.c	/^int lgw_board_setconf(struct lgw_conf_board_s conf) {$/;"	f
lgw_bw_getval	libloragw/src/loragw_hal.c	/^int32_t lgw_bw_getval(int x) {$/;"	f
lgw_cnt2gps	libloragw/src/loragw_gps.c	/^int lgw_cnt2gps(struct tref ref, uint32_t count_us, struct timespec *gps_time) {$/;"	f
lgw_cnt2utc	libloragw/src/loragw_gps.c	/^int lgw_cnt2utc(struct tref ref, uint32_t count_us, struct timespec *utc) {$/;"	f
lgw_conf_board_s	libloragw/inc/loragw_hal.h	/^struct lgw_conf_board_s {$/;"	s
lgw_conf_lbt_chan_s	libloragw/inc/loragw_hal.h	/^struct lgw_conf_lbt_chan_s {$/;"	s
lgw_conf_lbt_s	libloragw/inc/loragw_hal.h	/^struct lgw_conf_lbt_s {$/;"	s
lgw_conf_rxif_s	libloragw/inc/loragw_hal.h	/^struct lgw_conf_rxif_s {$/;"	s
lgw_conf_rxrf_s	libloragw/inc/loragw_hal.h	/^struct lgw_conf_rxrf_s {$/;"	s
lgw_connect	libloragw/src/loragw_reg.c	/^int lgw_connect(bool spi_only, uint32_t tx_notch_freq) {$/;"	f
lgw_constant_adjust	libloragw/src/loragw_hal.c	/^void lgw_constant_adjust(void) {$/;"	f
lgw_disconnect	libloragw/src/loragw_reg.c	/^int lgw_disconnect(void) {$/;"	f
lgw_fpga_configure	libloragw/src/loragw_fpga.c	/^int lgw_fpga_configure(uint32_t tx_notch_freq) {$/;"	f
lgw_fpga_get_tx_notch_delay	libloragw/src/loragw_fpga.c	/^float lgw_fpga_get_tx_notch_delay(void) {$/;"	f
lgw_fpga_reg_r	libloragw/src/loragw_fpga.c	/^int lgw_fpga_reg_r(uint16_t register_id, int32_t *reg_value) {$/;"	f
lgw_fpga_reg_rb	libloragw/src/loragw_fpga.c	/^int lgw_fpga_reg_rb(uint16_t register_id, uint8_t *data, uint16_t size) {$/;"	f
lgw_fpga_reg_w	libloragw/src/loragw_fpga.c	/^int lgw_fpga_reg_w(uint16_t register_id, int32_t reg_value) {$/;"	f
lgw_fpga_reg_wb	libloragw/src/loragw_fpga.c	/^int lgw_fpga_reg_wb(uint16_t register_id, uint8_t *data, uint16_t size) {$/;"	f
lgw_get_trigcnt	libloragw/src/loragw_hal.c	/^int lgw_get_trigcnt(uint32_t* trig_cnt_us) {$/;"	f
lgw_get_tx_start_delay	libloragw/src/loragw_hal.c	/^uint16_t lgw_get_tx_start_delay(bool tx_notch_enable, uint8_t bw) {$/;"	f
lgw_gps2cnt	libloragw/src/loragw_gps.c	/^int lgw_gps2cnt(struct tref ref, struct timespec gps_time, uint32_t *count_us) {$/;"	f
lgw_gps_disable	libloragw/src/loragw_gps.c	/^int lgw_gps_disable(int fd) {$/;"	f
lgw_gps_enable	libloragw/src/loragw_gps.c	/^int lgw_gps_enable(char *tty_path, char *gps_family_str, speed_t target_brate, int *fd_ptr) {$/;"	f
lgw_gps_get	libloragw/src/loragw_gps.c	/^int lgw_gps_get(struct timespec *utc, struct timespec *gps_time, struct coord_s *loc, struct coord_s *err) {$/;"	f
lgw_gps_sync	libloragw/src/loragw_gps.c	/^int lgw_gps_sync(struct tref *ref, uint32_t count_us, struct timespec utc, struct timespec gps_time) {$/;"	f
lgw_is_started	libloragw/src/loragw_hal.c	/^static bool lgw_is_started;$/;"	v	file:
lgw_lbt_setconf	libloragw/src/loragw_hal.c	/^int lgw_lbt_setconf(struct lgw_conf_lbt_s conf) {$/;"	f
lgw_parse_nmea	libloragw/src/loragw_gps.c	/^enum gps_msg lgw_parse_nmea(const char *serial_buff, int buff_size) {$/;"	f
lgw_parse_ubx	libloragw/src/loragw_gps.c	/^enum gps_msg lgw_parse_ubx(const char *serial_buff, size_t buff_size, size_t *msg_size) {$/;"	f
lgw_pkt_rx_s	libloragw/inc/loragw_hal.h	/^struct lgw_pkt_rx_s {$/;"	s
lgw_pkt_tx_s	libloragw/inc/loragw_hal.h	/^struct lgw_pkt_tx_s {$/;"	s
lgw_radio_type_e	libloragw/inc/loragw_hal.h	/^enum lgw_radio_type_e {$/;"	g
lgw_radio_type_version_s	libloragw/src/loragw_radio.c	/^struct lgw_radio_type_version_s {$/;"	s	file:
lgw_receive	libloragw/src/loragw_hal.c	/^int lgw_receive(uint8_t max_pkt, struct lgw_pkt_rx_s *pkt_data) {$/;"	f
lgw_reg_check	libloragw/src/loragw_reg.c	/^int lgw_reg_check(FILE *f) {$/;"	f
lgw_reg_r	libloragw/src/loragw_reg.c	/^int lgw_reg_r(uint16_t register_id, int32_t *reg_value) {$/;"	f
lgw_reg_rb	libloragw/src/loragw_reg.c	/^int lgw_reg_rb(uint16_t register_id, uint8_t *data, uint16_t size) {$/;"	f
lgw_reg_s	libloragw/inc/loragw_reg.h	/^struct lgw_reg_s {$/;"	s
lgw_reg_w	libloragw/src/loragw_reg.c	/^int lgw_reg_w(uint16_t register_id, int32_t reg_value) {$/;"	f
lgw_reg_wb	libloragw/src/loragw_reg.c	/^int lgw_reg_wb(uint16_t register_id, uint8_t *data, uint16_t size) {$/;"	f
lgw_regpage	libloragw/src/loragw_reg.c	/^static int lgw_regpage = -1; \/*! keep the value of the register page selected *\/$/;"	v	file:
lgw_rxif_setconf	libloragw/src/loragw_hal.c	/^int lgw_rxif_setconf(uint8_t if_chain, struct lgw_conf_rxif_s conf) {$/;"	f
lgw_rxrf_setconf	libloragw/src/loragw_hal.c	/^int lgw_rxrf_setconf(uint8_t rf_chain, struct lgw_conf_rxrf_s conf) {$/;"	f
lgw_send	libloragw/src/loragw_hal.c	/^int lgw_send(struct lgw_pkt_tx_s pkt_data) {$/;"	f
lgw_setup_sx125x	libloragw/src/loragw_radio.c	/^int lgw_setup_sx125x(uint8_t rf_chain, uint8_t rf_clkout, bool rf_enable, uint8_t rf_radio_type, uint32_t freq_hz) {$/;"	f
lgw_setup_sx127x	libloragw/src/loragw_radio.c	/^int lgw_setup_sx127x(uint32_t frequency, uint8_t modulation, enum lgw_sx127x_rxbw_e rxbw_khz, int8_t rssi_offset) {$/;"	f
lgw_sf_getval	libloragw/src/loragw_hal.c	/^int32_t lgw_sf_getval(int x) {$/;"	f
lgw_soft_reset	libloragw/src/loragw_reg.c	/^int lgw_soft_reset(void) {$/;"	f
lgw_spi_close	libloragw/src/loragw_spi.native.c	/^int lgw_spi_close(void *spi_target) {$/;"	f
lgw_spi_mux_mode	libloragw/src/loragw_reg.c	/^uint8_t lgw_spi_mux_mode = 0; \/*! current SPI mux mode used *\/$/;"	v
lgw_spi_open	gps_hat/radio.c	/^int lgw_spi_open(char *spi_path) {$/;"	f
lgw_spi_open	libloragw/src/loragw_spi.native.c	/^int lgw_spi_open(void **spi_target_ptr) {$/;"	f
lgw_spi_r	gps_hat/radio.c	/^static int lgw_spi_r(uint8_t spidev, uint8_t address, uint8_t *data) {$/;"	f	file:
lgw_spi_r	libloragw/src/loragw_spi.native.c	/^int lgw_spi_r(void *spi_target, uint8_t spi_mux_mode, uint8_t spi_mux_target, uint8_t address, uint8_t *data) {$/;"	f
lgw_spi_rb	libloragw/src/loragw_spi.native.c	/^int lgw_spi_rb(void *spi_target, uint8_t spi_mux_mode, uint8_t spi_mux_target, uint8_t address, uint8_t *data, uint16_t size) {$/;"	f
lgw_spi_target	libloragw/src/loragw_reg.c	/^void *lgw_spi_target = NULL; \/*! generic pointer to the SPI device *\/$/;"	v
lgw_spi_w	gps_hat/radio.c	/^static int lgw_spi_w(uint8_t spidev, uint8_t address, uint8_t data) {$/;"	f	file:
lgw_spi_w	libloragw/src/loragw_spi.native.c	/^int lgw_spi_w(void *spi_target, uint8_t spi_mux_mode, uint8_t spi_mux_target, uint8_t address, uint8_t data) {$/;"	f
lgw_spi_wb	libloragw/src/loragw_spi.native.c	/^int lgw_spi_wb(void *spi_target, uint8_t spi_mux_mode, uint8_t spi_mux_target, uint8_t address, uint8_t *data, uint16_t size) {$/;"	f
lgw_start	libloragw/src/loragw_hal.c	/^int lgw_start(void) {$/;"	f
lgw_status	libloragw/src/loragw_hal.c	/^int lgw_status(uint8_t select, uint8_t *code) {$/;"	f
lgw_stop	libloragw/src/loragw_hal.c	/^int lgw_stop(void) {$/;"	f
lgw_sx127x_FSK_bandwidth_s	libloragw/src/loragw_radio.c	/^struct lgw_sx127x_FSK_bandwidth_s {$/;"	s	file:
lgw_sx127x_reg_r	libloragw/src/loragw_radio.c	/^int lgw_sx127x_reg_r(uint8_t address, uint8_t *reg_value) {$/;"	f
lgw_sx127x_reg_w	libloragw/src/loragw_radio.c	/^int lgw_sx127x_reg_w(uint8_t address, uint8_t reg_value) {$/;"	f
lgw_sx127x_rxbw_e	libloragw/inc/loragw_radio.h	/^enum lgw_sx127x_rxbw_e {$/;"	g
lgw_time_on_air	libloragw/src/loragw_hal.c	/^uint32_t lgw_time_on_air(struct lgw_pkt_tx_s *packet) {$/;"	f
lgw_tx_gain_lut_s	libloragw/inc/loragw_hal.h	/^struct lgw_tx_gain_lut_s {$/;"	s
lgw_tx_gain_s	libloragw/inc/loragw_hal.h	/^struct lgw_tx_gain_s {$/;"	s
lgw_txgain_setconf	libloragw/src/loragw_hal.c	/^int lgw_txgain_setconf(struct lgw_tx_gain_lut_s *conf) {$/;"	f
lgw_utc2cnt	libloragw/src/loragw_gps.c	/^int lgw_utc2cnt(struct tref ref, struct timespec utc, uint32_t *count_us) {$/;"	f
lgw_version_info	libloragw/src/loragw_hal.c	/^const char* lgw_version_info() {$/;"	f
lgw_version_string	libloragw/src/loragw_hal.c	/^const char lgw_version_string[] = "Version: " LIBLORAGW_VERSION ";";$/;"	v
lgwm	gps_hat/dual_pkt_fwd.c	/^static uint64_t lgwm = 0; \/* Lora gateway MAC address *\/$/;"	v	file:
lgwm	gps_hat/hat_pkt_fwd.c	/^static uint64_t lgwm = 0; \/* Lora gateway MAC address *\/$/;"	v	file:
lgwm	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint64_t lgwm = 0; \/* Lora gateway MAC address *\/$/;"	v	file:
lgwm	util_pkt_logger/src/util_pkt_logger.c	/^uint64_t lgwm = 0; \/* LoRa gateway MAC address *\/$/;"	v
lgwm_str	util_pkt_logger/src/util_pkt_logger.c	/^char lgwm_str[17];$/;"	v
lgwx_beacon_len	libloragw/src/loragw_hal.c	/^uint8_t lgwx_beacon_len = 0;$/;"	v
lgwx_beacon_sf	libloragw/src/loragw_hal.c	/^uint8_t lgwx_beacon_sf = 0;$/;"	v
lgwx_device_mode	libloragw/src/loragw_hal.c	/^uint8_t lgwx_device_mode = 0;$/;"	v
lgwx_lbt_mode	libloragw/src/loragw_hal.c	/^uint8_t lgwx_lbt_mode = 0;$/;"	v
load_firmware	libloragw/src/loragw_hal.c	/^int load_firmware(uint8_t target, uint8_t *firmware, uint16_t size) {$/;"	f
log_file	util_pkt_logger/src/util_pkt_logger.c	/^FILE * log_file = NULL;$/;"	v
log_file_name	util_pkt_logger/src/util_pkt_logger.c	/^char log_file_name[64];$/;"	v
log_start_time	util_pkt_logger/src/util_pkt_logger.c	/^time_t log_start_time;$/;"	v
logdebug	gps_hat/dual_pkt_fwd.c	/^static uint8_t logdebug = 0;          \/* debug info option *\/$/;"	v	file:
logdebug	gps_hat/hat_pkt_fwd.c	/^static uint8_t logdebug = 0;          \/* debug info option *\/$/;"	v	file:
lon	gps_hat/dual_pkt_fwd.c	/^static float lon = 0.0;$/;"	v	file:
lon	gps_hat/hat_pkt_fwd.c	/^static float lon = 0.0;$/;"	v	file:
lon	libloragw/inc/loragw_gps.h	/^    double  lon;    \/*!> longitude [-180,180] (East +, West -)*\/$/;"	m	struct:coord_s
loop	lora_pkt_fwd/src/single_tx.c	/^static int loop = 0;$/;"	v	file:
lora_multi_sfmask	libloragw/src/loragw_hal.c	/^static uint8_t lora_multi_sfmask[LGW_MULTI_NB]; \/* enables SF for LoRa 'multi' modems *\/$/;"	v	file:
lora_rx_bw	libloragw/src/loragw_hal.c	/^static uint8_t lora_rx_bw; \/* bandwidth setting for LoRa standalone modem *\/$/;"	v	file:
lora_rx_ppm_offset	libloragw/src/loragw_hal.c	/^static bool lora_rx_ppm_offset;$/;"	v	file:
lora_rx_sf	libloragw/src/loragw_hal.c	/^static uint8_t lora_rx_sf; \/* spreading factor setting for LoRa standalone modem *\/$/;"	v	file:
lorawan_public	libloragw/inc/loragw_hal.h	/^    bool    lorawan_public; \/*!> Enable ONLY for *public* networks using the LoRa MAC protocol *\/$/;"	m	struct:lgw_conf_board_s
lorawan_public	libloragw/src/loragw_hal.c	/^static bool lorawan_public = false;$/;"	v	file:
loregs	libloragw/src/loragw_reg.c	/^const struct lgw_reg_s loregs[LGW_TOTALREGS] = {$/;"	v	typeref:struct:lgw_reg_s
lut	libloragw/inc/loragw_hal.h	/^    struct lgw_tx_gain_s    lut[TX_GAIN_LUT_SIZE_MAX];  \/*!> Array of Tx gain struct *\/$/;"	m	struct:lgw_tx_gain_lut_s	typeref:struct:lgw_tx_gain_lut_s::lgw_tx_gain_s
main	gps_hat/dual_pkt_fwd.c	/^int main(int argc, char *argv[])$/;"	f
main	gps_hat/hat_pkt_fwd.c	/^int main(int argc, char *argv[])$/;"	f
main	gps_hat/single_rx_tx.c	/^int main(int argc, char *argv[])$/;"	f
main	libloragw/tst/test_loragw_cal.c	/^int main(int argc, char **argv)$/;"	f
main	libloragw/tst/test_loragw_gps.c	/^int main()$/;"	f
main	libloragw/tst/test_loragw_hal.c	/^int main(int argc, char **argv)$/;"	f
main	libloragw/tst/test_loragw_reg.c	/^int main()$/;"	f
main	libloragw/tst/test_loragw_spi.c	/^int main()$/;"	f
main	lora_pkt_fwd/src/lora_pkt_fwd.c	/^int main(void)$/;"	f
main	lora_pkt_fwd/src/single_tx.c	/^int main(int argc, char *argv[])$/;"	f
main	util_ack/src/util_ack.c	/^int main(int argc, char **argv)$/;"	f
main	util_pkt_logger/src/util_pkt_logger.c	/^int main(int argc, char **argv)$/;"	f
main	util_sink/src/util_sink.c	/^int main(int argc, char **argv)$/;"	f
main	util_tx_continuous/src/util_tx_continuous.c	/^int main(int argc, char **argv)$/;"	f
main	util_tx_test/src/util_tx_test.c	/^int main(int argc, char **argv)$/;"	f
malloc	lora_pkt_fwd/src/parson.c	46;"	d	file:
malloc	util_pkt_logger/src/parson.c	46;"	d	file:
match_label	libloragw/src/loragw_gps.c	/^static bool match_label(const char *s, char *label, int size, char wildcard) {$/;"	f	file:
meas_dw_ack_rcv	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_dw_ack_rcv = 0; \/* number of PULL requests acknowledged for downstream traffic *\/$/;"	v	file:
meas_dw_ack_rcv	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_dw_ack_rcv = 0; \/* number of PULL requests acknowledged for downstream traffic *\/$/;"	v	file:
meas_dw_ack_rcv	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_dw_ack_rcv = 0; \/* number of PULL requests acknowledged for downstream traffic *\/$/;"	v	file:
meas_dw_dgram_rcv	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_dw_dgram_rcv = 0; \/* count PULL response packets received for downstream traffic *\/$/;"	v	file:
meas_dw_dgram_rcv	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_dw_dgram_rcv = 0; \/* count PULL response packets received for downstream traffic *\/$/;"	v	file:
meas_dw_dgram_rcv	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_dw_dgram_rcv = 0; \/* count PULL response packets received for downstream traffic *\/$/;"	v	file:
meas_dw_network_byte	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_dw_network_byte = 0; \/* sum of UDP bytes sent for upstream traffic *\/$/;"	v	file:
meas_dw_network_byte	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_dw_network_byte = 0; \/* sum of UDP bytes sent for upstream traffic *\/$/;"	v	file:
meas_dw_network_byte	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_dw_network_byte = 0; \/* sum of UDP bytes sent for upstream traffic *\/$/;"	v	file:
meas_dw_payload_byte	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_dw_payload_byte = 0; \/* sum of radio payload bytes sent for upstream traffic *\/$/;"	v	file:
meas_dw_payload_byte	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_dw_payload_byte = 0; \/* sum of radio payload bytes sent for upstream traffic *\/$/;"	v	file:
meas_dw_payload_byte	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_dw_payload_byte = 0; \/* sum of radio payload bytes sent for upstream traffic *\/$/;"	v	file:
meas_dw_pull_sent	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_dw_pull_sent = 0; \/* number of PULL requests sent for downstream traffic *\/$/;"	v	file:
meas_dw_pull_sent	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_dw_pull_sent = 0; \/* number of PULL requests sent for downstream traffic *\/$/;"	v	file:
meas_dw_pull_sent	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_dw_pull_sent = 0; \/* number of PULL requests sent for downstream traffic *\/$/;"	v	file:
meas_gps_coord	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct coord_s meas_gps_coord; \/* GPS position of the gateway *\/$/;"	v	typeref:struct:coord_s	file:
meas_gps_err	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct coord_s meas_gps_err; \/* GPS position of the gateway *\/$/;"	v	typeref:struct:coord_s	file:
meas_nb_beacon_queued	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_beacon_queued = 0; \/* count beacon inserted in jit queue *\/$/;"	v	file:
meas_nb_beacon_rejected	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_beacon_rejected = 0; \/* count beacon rejected for queuing *\/$/;"	v	file:
meas_nb_beacon_sent	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_beacon_sent = 0; \/* count beacon actually sent to concentrator *\/$/;"	v	file:
meas_nb_rx_bad	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_rx_bad = 0; \/* count packets received with PAYLOAD CRC ERROR *\/$/;"	v	file:
meas_nb_rx_bad	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_rx_bad = 0; \/* count packets received with PAYLOAD CRC ERROR *\/$/;"	v	file:
meas_nb_rx_bad	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_rx_bad = 0; \/* count packets received with PAYLOAD CRC ERROR *\/$/;"	v	file:
meas_nb_rx_nocrc	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_rx_nocrc = 0; \/* count packets received with NO PAYLOAD CRC *\/$/;"	v	file:
meas_nb_rx_nocrc	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_rx_nocrc = 0; \/* count packets received with NO PAYLOAD CRC *\/$/;"	v	file:
meas_nb_rx_nocrc	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_rx_nocrc = 0; \/* count packets received with NO PAYLOAD CRC *\/$/;"	v	file:
meas_nb_rx_ok	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_rx_ok = 0; \/* count packets received with PAYLOAD CRC OK *\/$/;"	v	file:
meas_nb_rx_ok	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_rx_ok = 0; \/* count packets received with PAYLOAD CRC OK *\/$/;"	v	file:
meas_nb_rx_ok	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_rx_ok = 0; \/* count packets received with PAYLOAD CRC OK *\/$/;"	v	file:
meas_nb_rx_rcv	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_rx_rcv = 0; \/* count packets received *\/$/;"	v	file:
meas_nb_rx_rcv	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_rx_rcv = 0; \/* count packets received *\/$/;"	v	file:
meas_nb_rx_rcv	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_rx_rcv = 0; \/* count packets received *\/$/;"	v	file:
meas_nb_tx_fail	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_tx_fail = 0; \/* count packets were TX failed for other reasons *\/$/;"	v	file:
meas_nb_tx_fail	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_tx_fail = 0; \/* count packets were TX failed for other reasons *\/$/;"	v	file:
meas_nb_tx_fail	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_tx_fail = 0; \/* count packets were TX failed for other reasons *\/$/;"	v	file:
meas_nb_tx_ok	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_tx_ok = 0; \/* count packets emitted successfully *\/$/;"	v	file:
meas_nb_tx_ok	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_tx_ok = 0; \/* count packets emitted successfully *\/$/;"	v	file:
meas_nb_tx_ok	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_tx_ok = 0; \/* count packets emitted successfully *\/$/;"	v	file:
meas_nb_tx_rejected_collision_beacon	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_collision_beacon = 0; \/* count packets were TX request were rejected due to collision with a beac  on already programmed *\/$/;"	v	file:
meas_nb_tx_rejected_collision_beacon	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_collision_beacon = 0; \/* count packets were TX request were rejected due to collision with a beac  on already programmed *\/$/;"	v	file:
meas_nb_tx_rejected_collision_beacon	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_collision_beacon = 0; \/* count packets were TX request were rejected due to collision with a beacon already programmed *\/$/;"	v	file:
meas_nb_tx_rejected_collision_packet	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_collision_packet = 0; \/* count packets were TX request were rejected due to collision with anothe  r packet already programmed *\/$/;"	v	file:
meas_nb_tx_rejected_collision_packet	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_collision_packet = 0; \/* count packets were TX request were rejected due to collision with anothe  r packet already programmed *\/$/;"	v	file:
meas_nb_tx_rejected_collision_packet	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_collision_packet = 0; \/* count packets were TX request were rejected due to collision with another packet already programmed *\/$/;"	v	file:
meas_nb_tx_rejected_too_early	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_too_early = 0; \/* count packets were TX request were rejected because timestamp is too much in ad  vance *\/$/;"	v	file:
meas_nb_tx_rejected_too_early	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_too_early = 0; \/* count packets were TX request were rejected because timestamp is too much in ad  vance *\/$/;"	v	file:
meas_nb_tx_rejected_too_early	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_too_early = 0; \/* count packets were TX request were rejected because timestamp is too much in advance *\/$/;"	v	file:
meas_nb_tx_rejected_too_late	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_too_late = 0; \/* count packets were TX request were rejected because it is too late to program it   *\/$/;"	v	file:
meas_nb_tx_rejected_too_late	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_too_late = 0; \/* count packets were TX request were rejected because it is too late to program it   *\/$/;"	v	file:
meas_nb_tx_rejected_too_late	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_tx_rejected_too_late = 0; \/* count packets were TX request were rejected because it is too late to program it *\/$/;"	v	file:
meas_nb_tx_requested	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_nb_tx_requested = 0; \/* count TX request from server (downlinks) *\/$/;"	v	file:
meas_nb_tx_requested	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_nb_tx_requested = 0; \/* count TX request from server (downlinks) *\/$/;"	v	file:
meas_nb_tx_requested	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_nb_tx_requested = 0; \/* count TX request from server (downlinks) *\/$/;"	v	file:
meas_up_ack_rcv	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_up_ack_rcv = 0; \/* number of datagrams acknowledged for upstream traffic *\/$/;"	v	file:
meas_up_ack_rcv	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_up_ack_rcv = 0; \/* number of datagrams acknowledged for upstream traffic *\/$/;"	v	file:
meas_up_ack_rcv	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_up_ack_rcv = 0; \/* number of datagrams acknowledged for upstream traffic *\/$/;"	v	file:
meas_up_dgram_sent	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_up_dgram_sent = 0; \/* number of datagrams sent for upstream traffic *\/$/;"	v	file:
meas_up_dgram_sent	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_up_dgram_sent = 0; \/* number of datagrams sent for upstream traffic *\/$/;"	v	file:
meas_up_dgram_sent	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_up_dgram_sent = 0; \/* number of datagrams sent for upstream traffic *\/$/;"	v	file:
meas_up_network_byte	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_up_network_byte = 0; \/* sum of UDP bytes sent for upstream traffic *\/$/;"	v	file:
meas_up_network_byte	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_up_network_byte = 0; \/* sum of UDP bytes sent for upstream traffic *\/$/;"	v	file:
meas_up_network_byte	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_up_network_byte = 0; \/* sum of UDP bytes sent for upstream traffic *\/$/;"	v	file:
meas_up_payload_byte	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_up_payload_byte = 0; \/* sum of radio payload bytes sent for upstream traffic *\/$/;"	v	file:
meas_up_payload_byte	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_up_payload_byte = 0; \/* sum of radio payload bytes sent for upstream traffic *\/$/;"	v	file:
meas_up_payload_byte	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_up_payload_byte = 0; \/* sum of radio payload bytes sent for upstream traffic *\/$/;"	v	file:
meas_up_pkt_fwd	gps_hat/dual_pkt_fwd.c	/^static uint32_t meas_up_pkt_fwd = 0; \/* number of radio packet forwarded to the server *\/$/;"	v	file:
meas_up_pkt_fwd	gps_hat/hat_pkt_fwd.c	/^static uint32_t meas_up_pkt_fwd = 0; \/* number of radio packet forwarded to the server *\/$/;"	v	file:
meas_up_pkt_fwd	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t meas_up_pkt_fwd = 0; \/* number of radio packet forwarded to the server *\/$/;"	v	file:
mix_gain	libloragw/inc/loragw_hal.h	/^    uint8_t mix_gain;   \/*!> 4 bits, control of the radio mixer *\/$/;"	m	struct:lgw_tx_gain_s
mode	gps_hat/single_rx_tx.c	/^static int mode = TX_MODE;$/;"	v	file:
mode	lora_pkt_fwd/src/single_tx.c	/^static int mode = 0;$/;"	v	file:
modulation	libloragw/inc/loragw_hal.h	/^    uint8_t     modulation;     \/*!> modulation to use for the packet *\/$/;"	m	struct:lgw_pkt_tx_s
modulation	libloragw/inc/loragw_hal.h	/^    uint8_t     modulation;     \/*!> modulation used by the packet *\/$/;"	m	struct:lgw_pkt_rx_s
mx_concent	lora_pkt_fwd/src/lora_pkt_fwd.c	/^pthread_mutex_t mx_concent = PTHREAD_MUTEX_INITIALIZER; \/* control access to the concentrator *\/$/;"	v
mx_jit_queue	gps_hat/jitqueue.c	/^static pthread_mutex_t mx_jit_queue = PTHREAD_MUTEX_INITIALIZER; \/* control access to JIT queue *\/$/;"	v	file:
mx_jit_queue	lora_pkt_fwd/src/jitqueue.c	/^static pthread_mutex_t mx_jit_queue = PTHREAD_MUTEX_INITIALIZER; \/* control access to JIT queue *\/$/;"	v	file:
mx_meas_dw	gps_hat/dual_pkt_fwd.c	/^static pthread_mutex_t mx_meas_dw = PTHREAD_MUTEX_INITIALIZER; \/* control access to the downstream measurements *\/$/;"	v	file:
mx_meas_dw	gps_hat/hat_pkt_fwd.c	/^static pthread_mutex_t mx_meas_dw = PTHREAD_MUTEX_INITIALIZER; \/* control access to the downstream measurements *\/$/;"	v	file:
mx_meas_dw	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static pthread_mutex_t mx_meas_dw = PTHREAD_MUTEX_INITIALIZER; \/* control access to the downstream measurements *\/$/;"	v	file:
mx_meas_gps	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static pthread_mutex_t mx_meas_gps = PTHREAD_MUTEX_INITIALIZER; \/* control access to the GPS statistics *\/$/;"	v	file:
mx_meas_up	gps_hat/dual_pkt_fwd.c	/^static pthread_mutex_t mx_meas_up = PTHREAD_MUTEX_INITIALIZER; \/* control access to the upstream measurements *\/$/;"	v	file:
mx_meas_up	gps_hat/hat_pkt_fwd.c	/^static pthread_mutex_t mx_meas_up = PTHREAD_MUTEX_INITIALIZER; \/* control access to the upstream measurements *\/$/;"	v	file:
mx_meas_up	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static pthread_mutex_t mx_meas_up = PTHREAD_MUTEX_INITIALIZER; \/* control access to the upstream measurements *\/$/;"	v	file:
mx_radio_lock	gps_hat/hat_pkt_fwd.c	/^static pthread_mutex_t mx_radio_lock = PTHREAD_MUTEX_INITIALIZER; \/* control access to the radio device *\/$/;"	v	file:
mx_stat_rep	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static pthread_mutex_t mx_stat_rep = PTHREAD_MUTEX_INITIALIZER; \/* control access to the status report *\/$/;"	v	file:
mx_timeref	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static pthread_mutex_t mx_timeref = PTHREAD_MUTEX_INITIALIZER; \/* control access to GPS time reference *\/$/;"	v	file:
mx_timersync	lora_pkt_fwd/src/timersync.c	/^static pthread_mutex_t mx_timersync = PTHREAD_MUTEX_INITIALIZER; \/* control access to timer sync offsets *\/$/;"	v	file:
mx_xcorr	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static pthread_mutex_t mx_xcorr = PTHREAD_MUTEX_INITIALIZER; \/* control access to the XTAL correction *\/$/;"	v	file:
names	gps_hat/parson.c	/^    const char **names;$/;"	m	struct:json_object_t	file:
names	lora_pkt_fwd/src/parson.c	/^    char       **names;$/;"	m	struct:json_object_t	file:
names	util_pkt_logger/src/parson.c	/^    char       **names;$/;"	m	struct:json_object_t	file:
nb_channel	libloragw/inc/loragw_hal.h	/^    uint8_t                     nb_channel;         \/*!> number of LBT channels *\/$/;"	m	struct:lgw_conf_lbt_s
net_mac_h	gps_hat/dual_pkt_fwd.c	/^static uint32_t net_mac_h; \/* Most Significant Nibble, network order *\/$/;"	v	file:
net_mac_h	gps_hat/hat_pkt_fwd.c	/^static uint32_t net_mac_h; \/* Most Significant Nibble, network order *\/$/;"	v	file:
net_mac_h	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t net_mac_h; \/* Most Significant Nibble, network order *\/$/;"	v	file:
net_mac_l	gps_hat/dual_pkt_fwd.c	/^static uint32_t net_mac_l; \/* Least Significant Nibble, network order *\/$/;"	v	file:
net_mac_l	gps_hat/hat_pkt_fwd.c	/^static uint32_t net_mac_l; \/* Least Significant Nibble, network order *\/$/;"	v	file:
net_mac_l	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t net_mac_l; \/* Least Significant Nibble, network order *\/$/;"	v	file:
nibble_to_hexchar	libloragw/src/loragw_gps.c	/^static char nibble_to_hexchar(uint8_t a) {$/;"	f	file:
nmea_checksum	libloragw/src/loragw_gps.c	/^static int nmea_checksum(const char *nmea_string, int buff_size, char *checksum) {$/;"	f	file:
no_crc	gps_hat/radio.h	/^    bool        no_crc;         \/*!> if true, do not send a CRC in the packet *\/$/;"	m	struct:pkt_tx_s
no_crc	libloragw/inc/loragw_hal.h	/^    bool        no_crc;         \/*!> if true, do not send a CRC in the packet *\/$/;"	m	struct:lgw_pkt_tx_s
no_header	gps_hat/radio.h	/^    bool        no_header;      \/*!> if true, enable implicit header mode (LoRa), fixed length (FSK) *\/$/;"	m	struct:pkt_tx_s
no_header	libloragw/inc/loragw_hal.h	/^    bool        no_header;      \/*!> if true, enable implicit header mode (LoRa), fixed length (FSK) *\/$/;"	m	struct:lgw_pkt_tx_s
nocrc	gps_hat/radio.h	/^    uint8_t nocrc;$/;"	m	struct:__anon2
nocrc	lora_pkt_fwd/inc/radio.h	/^    uint8_t nocrc;$/;"	m	struct:__anon4
nodes	gps_hat/jitqueue.h	/^    struct jit_node_s nodes[JIT_QUEUE_MAX]; \/* Nodes\/packets array in the queue *\/$/;"	m	struct:jit_queue_s	typeref:struct:jit_queue_s::jit_node_s
nodes	lora_pkt_fwd/inc/jitqueue.h	/^    struct jit_node_s nodes[JIT_QUEUE_MAX]; \/* Nodes\/packets array in the queue *\/$/;"	m	struct:jit_queue_s	typeref:struct:jit_queue_s::jit_node_s
now_time	util_pkt_logger/src/util_pkt_logger.c	/^time_t now_time;$/;"	v
nss	gps_hat/radio.h	/^    uint8_t nss;$/;"	m	struct:__anon2
nss	lora_pkt_fwd/inc/radio.h	/^    uint8_t nss;$/;"	m	struct:__anon4
null	gps_hat/parson.c	/^    int          null;$/;"	m	union:json_value_value	file:
null	lora_pkt_fwd/src/parson.c	/^    int          null;$/;"	m	union:json_value_value	file:
null	util_pkt_logger/src/parson.c	/^    int          null;$/;"	m	union:json_value_value	file:
num_beacon	gps_hat/jitqueue.h	/^    uint8_t num_beacon;             \/* Number of beacons in the queue *\/$/;"	m	struct:jit_queue_s
num_beacon	lora_pkt_fwd/inc/jitqueue.h	/^    uint8_t num_beacon;             \/* Number of beacons in the queue *\/$/;"	m	struct:jit_queue_s
num_bytes_in_utf8_sequence	lora_pkt_fwd/src/parson.c	/^static int num_bytes_in_utf8_sequence(unsigned char c) {$/;"	f	file:
num_bytes_in_utf8_sequence	util_pkt_logger/src/parson.c	/^static int num_bytes_in_utf8_sequence(unsigned char c) {$/;"	f	file:
num_pkt	gps_hat/jitqueue.h	/^    uint8_t num_pkt;                \/* Total number of packets in the queue (downlinks, beacons...) *\/$/;"	m	struct:jit_queue_s
num_pkt	lora_pkt_fwd/inc/jitqueue.h	/^    uint8_t num_pkt;                \/* Total number of packets in the queue (downlinks, beacons...) *\/$/;"	m	struct:jit_queue_s
number	gps_hat/parson.c	/^    double       number;$/;"	m	union:json_value_value	file:
number	lora_pkt_fwd/src/parson.c	/^    double       number;$/;"	m	union:json_value_value	file:
number	util_pkt_logger/src/parson.c	/^    double       number;$/;"	m	union:json_value_value	file:
object	gps_hat/parson.c	/^    JSON_Object *object;$/;"	m	union:json_value_value	file:
object	lora_pkt_fwd/src/parson.c	/^    JSON_Object *object;$/;"	m	union:json_value_value	file:
object	util_pkt_logger/src/parson.c	/^    JSON_Object *object;$/;"	m	union:json_value_value	file:
offs	libloragw/inc/loragw_reg.h	/^    uint8_t offs;        \/*!< position of the register LSB (between 0 to 7) *\/$/;"	m	struct:lgw_reg_s
offset_i_a	libloragw/tst/test_loragw_cal.c	/^    int8_t offset_i_a [8];$/;"	m	struct:cal_res_s	file:
offset_i_b	libloragw/tst/test_loragw_cal.c	/^    int8_t offset_i_b [8];$/;"	m	struct:cal_res_s	file:
offset_q_a	libloragw/tst/test_loragw_cal.c	/^    int8_t offset_q_a [8];$/;"	m	struct:cal_res_s	file:
offset_q_b	libloragw/tst/test_loragw_cal.c	/^    int8_t offset_q_b [8];$/;"	m	struct:cal_res_s	file:
offset_rej_a	libloragw/tst/test_loragw_cal.c	/^    uint8_t offset_rej_a [8];$/;"	m	struct:cal_res_s	file:
offset_rej_b	libloragw/tst/test_loragw_cal.c	/^    uint8_t offset_rej_b [8];$/;"	m	struct:cal_res_s	file:
offset_unix_concent	lora_pkt_fwd/src/timersync.c	/^static struct timeval offset_unix_concent = {0,0}; \/* timer offset between unix host and concentrator *\/$/;"	v	typeref:struct:timeval	file:
open_log	util_pkt_logger/src/util_pkt_logger.c	/^void open_log(void) {$/;"	f
opmode	gps_hat/radio.c	/^static void opmode (uint8_t spidev, uint8_t mode) {$/;"	f	file:
opmode	lora_pkt_fwd/src/radio.c	/^static void opmode (uint8_t spidev, uint8_t mode) {$/;"	f	file:
opmodeLora	gps_hat/radio.c	/^static void opmodeLora(uint8_t spidev) {$/;"	f	file:
opmodeLora	lora_pkt_fwd/src/radio.c	/^static void opmodeLora(uint8_t spidev) {$/;"	f	file:
pa_gain	libloragw/inc/loragw_hal.h	/^    uint8_t pa_gain;    \/*!> 2 bits, control of the external PA (SX1301 I\/O) *\/$/;"	m	struct:lgw_tx_gain_s
page	libloragw/inc/loragw_reg.h	/^    int8_t  page;        \/*!< page containing the register (-1 for all pages) *\/$/;"	m	struct:lgw_reg_s
page_switch	libloragw/src/loragw_reg.c	/^int page_switch(uint8_t target) {$/;"	f
parse_SX1301_configuration	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int parse_SX1301_configuration(const char * conf_file) {$/;"	f	file:
parse_SX1301_configuration	util_pkt_logger/src/util_pkt_logger.c	/^int parse_SX1301_configuration(const char * conf_file) {$/;"	f
parse_array_value	gps_hat/parson.c	/^static JSON_Value * parse_array_value(const char **string, size_t nesting) {$/;"	f	file:
parse_array_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * parse_array_value(const char **string, size_t nesting) {$/;"	f	file:
parse_array_value	util_pkt_logger/src/parson.c	/^static JSON_Value * parse_array_value(const char **string, size_t nesting) {$/;"	f	file:
parse_boolean_value	gps_hat/parson.c	/^static JSON_Value * parse_boolean_value(const char **string) {$/;"	f	file:
parse_boolean_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * parse_boolean_value(const char **string) {$/;"	f	file:
parse_boolean_value	util_pkt_logger/src/parson.c	/^static JSON_Value * parse_boolean_value(const char **string) {$/;"	f	file:
parse_gateway_config	gps_hat/dual_pkt_fwd.c	/^static int parse_gateway_config(const char * conf_file) {$/;"	f	file:
parse_gateway_config	gps_hat/hat_pkt_fwd.c	/^static int parse_gateway_config(const char * conf_file) {$/;"	f	file:
parse_gateway_configuration	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int parse_gateway_configuration(const char * conf_file) {$/;"	f	file:
parse_gateway_configuration	util_pkt_logger/src/util_pkt_logger.c	/^int parse_gateway_configuration(const char * conf_file) {$/;"	f
parse_null_value	gps_hat/parson.c	/^static JSON_Value * parse_null_value(const char **string) {$/;"	f	file:
parse_null_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * parse_null_value(const char **string) {$/;"	f	file:
parse_null_value	util_pkt_logger/src/parson.c	/^static JSON_Value * parse_null_value(const char **string) {$/;"	f	file:
parse_number_value	gps_hat/parson.c	/^static JSON_Value * parse_number_value(const char **string) {$/;"	f	file:
parse_number_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * parse_number_value(const char **string) {$/;"	f	file:
parse_number_value	util_pkt_logger/src/parson.c	/^static JSON_Value * parse_number_value(const char **string) {$/;"	f	file:
parse_object_value	gps_hat/parson.c	/^static JSON_Value * parse_object_value(const char **string, size_t nesting) {$/;"	f	file:
parse_object_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * parse_object_value(const char **string, size_t nesting) {$/;"	f	file:
parse_object_value	util_pkt_logger/src/parson.c	/^static JSON_Value * parse_object_value(const char **string, size_t nesting) {$/;"	f	file:
parse_string_value	gps_hat/parson.c	/^static JSON_Value * parse_string_value(const char **string) {$/;"	f	file:
parse_string_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * parse_string_value(const char **string) {$/;"	f	file:
parse_string_value	util_pkt_logger/src/parson.c	/^static JSON_Value * parse_string_value(const char **string) {$/;"	f	file:
parse_utf_16	lora_pkt_fwd/src/parson.c	/^static int parse_utf_16(const char **unprocessed, char **processed) {$/;"	f	file:
parse_utf_16	util_pkt_logger/src/parson.c	/^static int parse_utf_16(const char **unprocessed, char **processed) {$/;"	f	file:
parse_value	gps_hat/parson.c	/^static JSON_Value * parse_value(const char **string, size_t nesting) {$/;"	f	file:
parse_value	lora_pkt_fwd/src/parson.c	/^static JSON_Value * parse_value(const char **string, size_t nesting) {$/;"	f	file:
parse_value	util_pkt_logger/src/parson.c	/^static JSON_Value * parse_value(const char **string, size_t nesting) {$/;"	f	file:
parson_free	gps_hat/parson.c	43;"	d	file:
parson_free	lora_pkt_fwd/src/parson.c	/^static JSON_Free_Function parson_free = free;$/;"	v	file:
parson_free	util_pkt_logger/src/parson.c	/^static JSON_Free_Function parson_free = free;$/;"	v	file:
parson_malloc	gps_hat/parson.c	42;"	d	file:
parson_malloc	lora_pkt_fwd/src/parson.c	/^static JSON_Malloc_Function parson_malloc = malloc;$/;"	v	file:
parson_malloc	util_pkt_logger/src/parson.c	/^static JSON_Malloc_Function parson_malloc = malloc;$/;"	v	file:
parson_parson_h	gps_hat/parson.h	25;"	d
parson_parson_h	lora_pkt_fwd/inc/parson.h	25;"	d
parson_parson_h	util_pkt_logger/inc/parson.h	25;"	d
parson_realloc	gps_hat/parson.c	44;"	d	file:
parson_strdup	lora_pkt_fwd/src/parson.c	/^static char * parson_strdup(const char *string) {$/;"	f	file:
parson_strdup	util_pkt_logger/src/parson.c	/^static char * parson_strdup(const char *string) {$/;"	f	file:
parson_strndup	gps_hat/parson.c	/^static char * parson_strndup(const char *string, size_t n) {$/;"	f	file:
parson_strndup	lora_pkt_fwd/src/parson.c	/^static char * parson_strndup(const char *string, size_t n) {$/;"	f	file:
parson_strndup	util_pkt_logger/src/parson.c	/^static char * parson_strndup(const char *string, size_t n) {$/;"	f	file:
payload	gps_hat/radio.h	/^    uint8_t     payload[256];   \/*!> buffer containing the payload *\/$/;"	m	struct:pkt_tx_s
payload	gps_hat/radio.h	/^    uint8_t     payload[256]; \/*!> buffer containing the payload *\/$/;"	m	struct:pkt_rx_s
payload	libloragw/inc/loragw_hal.h	/^    uint8_t     payload[256];   \/*!> buffer containing the payload *\/$/;"	m	struct:lgw_pkt_rx_s
payload	libloragw/inc/loragw_hal.h	/^    uint8_t     payload[256];   \/*!> buffer containing the payload *\/$/;"	m	struct:lgw_pkt_tx_s
payload_format	gps_hat/single_rx_tx.c	/^static int payload_format = 0; $/;"	v	file:
phi_a	libloragw/tst/test_loragw_cal.c	/^    int8_t phi_a;$/;"	m	struct:cal_res_s	file:
phi_b	libloragw/tst/test_loragw_cal.c	/^    int8_t phi_b;$/;"	m	struct:cal_res_s	file:
pkt	gps_hat/jitqueue.h	/^    struct pkt_tx_s pkt;        \/* TX packet *\/$/;"	m	struct:jit_node_s	typeref:struct:jit_node_s::pkt_tx_s
pkt	lora_pkt_fwd/inc/jitqueue.h	/^    struct lgw_pkt_tx_s pkt;        \/* TX packet *\/$/;"	m	struct:jit_node_s	typeref:struct:jit_node_s::lgw_pkt_tx_s
pkt_alloc	gps_hat/dual_pkt_fwd.c	/^static struct pkt_rx_s *pkt_alloc(void) {$/;"	f	file:
pkt_alloc	gps_hat/hat_pkt_fwd.c	/^static struct pkt_rx_s *pkt_alloc(void) {$/;"	f	file:
pkt_rx_s	gps_hat/radio.h	/^struct pkt_rx_s {$/;"	s
pkt_tx_s	gps_hat/radio.h	/^struct pkt_tx_s {$/;"	s
pkt_type	gps_hat/jitqueue.h	/^    enum jit_pkt_type_e pkt_type;   \/* Packet type: Downlink, Beacon... *\/$/;"	m	struct:jit_node_s	typeref:enum:jit_node_s::jit_pkt_type_e
pkt_type	lora_pkt_fwd/inc/jitqueue.h	/^    enum jit_pkt_type_e pkt_type;   \/* Packet type: Downlink, Beacon... *\/$/;"	m	struct:jit_node_s	typeref:enum:jit_node_s::jit_pkt_type_e
pktrx	gps_hat/dual_pkt_fwd.c	/^static struct pkt_rx_s pktrx[QUEUESIZE]; \/* allocat queuesize struct of pkt_rx_s *\/$/;"	v	typeref:struct:pkt_rx_s	file:
pktrx	gps_hat/hat_pkt_fwd.c	/^static struct pkt_rx_s pktrx[QUEUESIZE]; \/* allocat queuesize struct of pkt_rx_s *\/$/;"	v	typeref:struct:pkt_rx_s	file:
pktrx_clean	gps_hat/dual_pkt_fwd.c	/^static void pktrx_clean(struct pkt_rx_s *rx) {$/;"	f	file:
pktrx_clean	gps_hat/hat_pkt_fwd.c	/^static void pktrx_clean(struct pkt_rx_s *rx) {$/;"	f	file:
platform	gps_hat/dual_pkt_fwd.c	/^static char platform[16] = "GPSHAT";  \/* platform definition *\/$/;"	v	file:
platform	gps_hat/hat_pkt_fwd.c	/^static char platform[16] = "GPSHAT";  \/* platform definition *\/$/;"	v	file:
post_delay	gps_hat/jitqueue.h	/^    uint32_t post_delay;            \/* Amount of time after packet timestamp to be reserved (time on air) *\/$/;"	m	struct:jit_node_s
post_delay	lora_pkt_fwd/inc/jitqueue.h	/^    uint32_t post_delay;            \/* Amount of time after packet timestamp to be reserved (time on air) *\/$/;"	m	struct:jit_node_s
power	gps_hat/radio.h	/^    uint8_t power;$/;"	m	struct:__anon2
power	gps_hat/single_rx_tx.c	/^static char power[8] = "14";$/;"	v	file:
ppm_ref	libloragw/tst/test_loragw_gps.c	/^struct tref ppm_ref;$/;"	v	typeref:struct:tref
pre_delay	gps_hat/jitqueue.h	/^    uint32_t pre_delay;             \/* Amount of time before packet timestamp to be reserved *\/$/;"	m	struct:jit_node_s
pre_delay	lora_pkt_fwd/inc/jitqueue.h	/^    uint32_t pre_delay;             \/* Amount of time before packet timestamp to be reserved *\/$/;"	m	struct:jit_node_s
preamble	gps_hat/radio.h	/^    uint16_t    preamble;       \/*!> set the preamble length, 0 for default *\/$/;"	m	struct:pkt_tx_s
preamble	libloragw/inc/loragw_hal.h	/^    uint16_t    preamble;       \/*!> set the preamble length, 0 for default *\/$/;"	m	struct:lgw_pkt_tx_s
prev	gps_hat/dual_pkt_fwd.c	/^static int pt = 0, prev = 0;  \/* pt is point of receive packet postion,  prev is point of process packet thread*\/$/;"	v	file:
prev	gps_hat/hat_pkt_fwd.c	/^static int pt = 0, prev = 0;  \/* pt is point of receive packet postion,  prev is point of process packet thread*\/$/;"	v	file:
print_help	gps_hat/single_rx_tx.c	/^void print_help(void) {$/;"	f
print_help	lora_pkt_fwd/src/single_tx.c	/^void print_help(void) {$/;"	f
print_tx_status	lora_pkt_fwd/src/lora_pkt_fwd.c	/^void print_tx_status(uint8_t tx_status) {$/;"	f
prlen	gps_hat/radio.h	/^    uint8_t prlen;$/;"	m	struct:__anon2
prlen	gps_hat/single_rx_tx.c	/^static char prlen[8] = "8";$/;"	v	file:
prlen	lora_pkt_fwd/inc/radio.h	/^    uint8_t prlen;$/;"	m	struct:__anon4
prlen	lora_pkt_fwd/src/single_tx.c	/^static char prlen[8] = "8";$/;"	v	file:
process_string	lora_pkt_fwd/src/parson.c	/^static char* process_string(const char *input, size_t len) {$/;"	f	file:
process_string	util_pkt_logger/src/parson.c	/^static char* process_string(const char *input, size_t len) {$/;"	f	file:
pt	gps_hat/dual_pkt_fwd.c	/^static int pt = 0, prev = 0;  \/* pt is point of receive packet postion,  prev is point of process packet thread*\/$/;"	v	file:
pt	gps_hat/hat_pkt_fwd.c	/^static int pt = 0, prev = 0;  \/* pt is point of receive packet postion,  prev is point of process packet thread*\/$/;"	v	file:
pull_timeout	gps_hat/dual_pkt_fwd.c	/^static struct timeval pull_timeout = {0, (PULL_TIMEOUT_MS * 1000)}; \/* non critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
pull_timeout	gps_hat/hat_pkt_fwd.c	/^static struct timeval pull_timeout = {0, (PULL_TIMEOUT_MS * 1000)}; \/* non critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
pull_timeout	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct timeval pull_timeout = {0, (PULL_TIMEOUT_MS * 1000)}; \/* non critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
push_timeout_half	gps_hat/dual_pkt_fwd.c	/^static struct timeval push_timeout_half = {0, (PUSH_TIMEOUT_MS * 500)}; \/* cut in half, critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
push_timeout_half	gps_hat/hat_pkt_fwd.c	/^static struct timeval push_timeout_half = {0, (PUSH_TIMEOUT_MS * 500)}; \/* cut in half, critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
push_timeout_half	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct timeval push_timeout_half = {0, (PUSH_TIMEOUT_MS * 500)}; \/* cut in half, critical for throughput *\/$/;"	v	typeref:struct:timeval	file:
pw	lora_pkt_fwd/src/single_tx.c	/^static char pw[8] = "16";$/;"	v	file:
qsort_r	gps_hat/jitqueue.c	/^static void qsort_r(void  *base,$/;"	f	file:
quit_sig	gps_hat/dual_pkt_fwd.c	/^volatile bool quit_sig = false; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v
quit_sig	gps_hat/hat_pkt_fwd.c	/^volatile bool quit_sig = false; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v
quit_sig	gps_hat/single_rx_tx.c	/^volatile bool quit_sig = false; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v
quit_sig	libloragw/tst/test_loragw_gps.c	/^static int quit_sig = 0; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v	file:
quit_sig	libloragw/tst/test_loragw_hal.c	/^static int quit_sig = 0; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v	file:
quit_sig	lora_pkt_fwd/src/lora_pkt_fwd.c	/^volatile bool quit_sig = false; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v
quit_sig	lora_pkt_fwd/src/single_tx.c	/^volatile bool quit_sig = false; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v
quit_sig	util_pkt_logger/src/util_pkt_logger.c	/^static int quit_sig = 0; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v	file:
quit_sig	util_tx_continuous/src/util_tx_continuous.c	/^static int quit_sig = 0; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v	file:
quit_sig	util_tx_test/src/util_tx_test.c	/^static int quit_sig = 0; \/* 1 -> application terminates without shutting down the hardware *\/$/;"	v	file:
radio	gps_hat/single_rx_tx.c	/^static char radio[16] = RADIO1;$/;"	v	file:
radio_inuse	gps_hat/hat_pkt_fwd.c	/^static int radio_inuse = 0;  \/* radio device if free *\/$/;"	v	file:
radiodev	gps_hat/radio.h	/^}radiodev; $/;"	t	typeref:struct:__anon2
radiodev	lora_pkt_fwd/inc/radio.h	/^}radiodev; $/;"	t	typeref:struct:__anon4
rdon	libloragw/inc/loragw_reg.h	/^    bool    rdon;        \/*!< 1 indicates a read-only register *\/$/;"	m	struct:lgw_reg_s
readReg	gps_hat/radio.c	/^static uint8_t readReg(uint8_t spidev, uint8_t addr)$/;"	f	file:
readReg	lora_pkt_fwd/src/radio.c	/^static uint8_t readReg(uint8_t spidev, uint8_t addr)$/;"	f	file:
read_capture	libloragw/tst/test_loragw_cal.c	/^int read_capture(int16_t *sig_i, int16_t *sig_q, int nb_samp) {$/;"	f
read_file	gps_hat/parson.c	/^static char * read_file(const char * filename) {$/;"	f	file:
read_file	lora_pkt_fwd/src/parson.c	/^static char * read_file(const char * filename) {$/;"	f	file:
read_file	util_pkt_logger/src/parson.c	/^static char * read_file(const char * filename) {$/;"	f	file:
received	gps_hat/radio.c	/^bool received(uint8_t spidev, struct pkt_rx_s *pkt_rx) {$/;"	f
received	lora_pkt_fwd/src/radio.c	/^bool received(uint8_t spidev, struct lgw_pkt_rx_s *pkt_rx) {$/;"	f
reference_coord	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct coord_s reference_coord;$/;"	v	typeref:struct:coord_s	file:
reg_r_align32	libloragw/src/loragw_reg.c	/^int reg_r_align32(void *spi_target, uint8_t spi_mux_mode, uint8_t spi_mux_target, struct lgw_reg_s r, int32_t *reg_value) {$/;"	f
reg_version	libloragw/src/loragw_radio.c	/^    uint8_t reg_version;$/;"	m	struct:lgw_radio_type_version_s	file:
reg_w_align32	libloragw/src/loragw_reg.c	/^int reg_w_align32(void *spi_target, uint8_t spi_mux_mode, uint8_t spi_mux_target, struct lgw_reg_s r, int32_t reg_value) {$/;"	f
remove_comments	gps_hat/parson.c	/^static void remove_comments(char *string, const char *start_token, const char *end_token) {$/;"	f	file:
remove_comments	lora_pkt_fwd/src/parson.c	/^static void remove_comments(char *string, const char *start_token, const char *end_token) {$/;"	f	file:
remove_comments	util_pkt_logger/src/parson.c	/^static void remove_comments(char *string, const char *start_token, const char *end_token) {$/;"	f	file:
report_ready	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool report_ready = false; \/* true when there is a new report to send to the server *\/$/;"	v	file:
reset_sx127x	libloragw/src/loragw_radio.c	/^int reset_sx127x(enum lgw_radio_type_e radio_type) {$/;"	f
rf_chain	libloragw/inc/loragw_hal.h	/^    uint8_t     rf_chain;       \/*!> through which RF chain the packet was received *\/$/;"	m	struct:lgw_pkt_rx_s
rf_chain	libloragw/inc/loragw_hal.h	/^    uint8_t     rf_chain;       \/*!> through which RF chain will the packet be sent *\/$/;"	m	struct:lgw_pkt_tx_s
rf_chain	libloragw/inc/loragw_hal.h	/^    uint8_t     rf_chain;       \/*!> to which RF chain is that IF chain associated *\/$/;"	m	struct:lgw_conf_rxif_s
rf_clkout	libloragw/src/loragw_hal.c	/^static uint8_t rf_clkout = 0;$/;"	v	file:
rf_enable	libloragw/src/loragw_hal.c	/^static bool rf_enable[LGW_RF_CHAIN_NB];$/;"	v	file:
rf_freq	gps_hat/dual_pkt_fwd.c	/^static uint32_t rf_freq = 868100000;            \/* rx frequency of radio *\/$/;"	v	file:
rf_freq	gps_hat/hat_pkt_fwd.c	/^static uint32_t rf_freq = 868100000;            \/* rx frequency of radio *\/$/;"	v	file:
rf_power	gps_hat/dual_pkt_fwd.c	/^static uint8_t rf_power = 16;            \/* tx power of radio *\/$/;"	v	file:
rf_power	gps_hat/hat_pkt_fwd.c	/^static uint8_t rf_power = 16;            \/* tx power of radio *\/$/;"	v	file:
rf_power	gps_hat/radio.h	/^    uint8_t     rf_power;       \/*!> TX power, in dBm *\/$/;"	m	struct:pkt_tx_s
rf_power	libloragw/inc/loragw_hal.h	/^    int8_t      rf_power;       \/*!> TX power, in dBm *\/$/;"	m	struct:lgw_pkt_tx_s
rf_power	libloragw/inc/loragw_hal.h	/^    int8_t  rf_power;   \/*!> measured TX power at the board connector, in dBm *\/$/;"	m	struct:lgw_tx_gain_s
rf_power	lora_pkt_fwd/inc/radio.h	/^    int8_t rf_power;$/;"	m	struct:__anon4
rf_radio_type	libloragw/src/loragw_hal.c	/^static enum lgw_radio_type_e rf_radio_type[LGW_RF_CHAIN_NB];$/;"	v	typeref:enum:lgw_radio_type_e	file:
rf_rssi_offset	libloragw/src/loragw_hal.c	/^static float rf_rssi_offset[LGW_RF_CHAIN_NB];$/;"	v	file:
rf_rx_freq	libloragw/src/loragw_hal.c	/^static uint32_t rf_rx_freq[LGW_RF_CHAIN_NB]; \/* absolute, in Hz *\/$/;"	v	file:
rf_tx_enable	libloragw/src/loragw_hal.c	/^static bool rf_tx_enable[LGW_RF_CHAIN_NB];$/;"	v	file:
rf_tx_notch_freq	libloragw/src/loragw_hal.c	/^static uint32_t rf_tx_notch_freq[LGW_RF_CHAIN_NB];$/;"	v	file:
rfbw	gps_hat/dual_pkt_fwd.c	/^static uint32_t rfbw = 125000;$/;"	v	file:
rfbw	gps_hat/hat_pkt_fwd.c	/^static uint32_t rfbw = 125000;$/;"	v	file:
rfcr	gps_hat/dual_pkt_fwd.c	/^static uint8_t rfcr = 5;$/;"	v	file:
rfcr	gps_hat/hat_pkt_fwd.c	/^static uint8_t rfcr = 5;$/;"	v	file:
rfdev	gps_hat/hat_pkt_fwd.c	/^radiodev *rfdev;$/;"	v
rfprlen	gps_hat/dual_pkt_fwd.c	/^static uint8_t rfprlen = 8;$/;"	v	file:
rfprlen	gps_hat/hat_pkt_fwd.c	/^static uint8_t rfprlen = 8;$/;"	v	file:
rfsf	gps_hat/dual_pkt_fwd.c	/^static uint8_t rfsf = 7;$/;"	v	file:
rfsf	gps_hat/hat_pkt_fwd.c	/^static uint8_t rfsf = 7;$/;"	v	file:
rssi	gps_hat/radio.h	/^    float       rssi;         \/*!> average packet RSSI in dB *\/$/;"	m	struct:pkt_rx_s
rssi	libloragw/inc/loragw_hal.h	/^    float       rssi;           \/*!> average packet RSSI in dB *\/$/;"	m	struct:lgw_pkt_rx_s
rssi_offset	libloragw/inc/loragw_hal.h	/^    float                   rssi_offset;    \/*!> Board-specific RSSI correction factor *\/$/;"	m	struct:lgw_conf_rxrf_s
rssi_offset	libloragw/inc/loragw_hal.h	/^    int8_t                      rssi_offset;        \/*!> RSSI offset to be applied to SX127x RSSI values *\/$/;"	m	struct:lgw_conf_lbt_s
rssi_target	libloragw/inc/loragw_hal.h	/^    int8_t                      rssi_target;        \/*!> RSSI threshold to detect if channel is busy or not (dBm) *\/$/;"	m	struct:lgw_conf_lbt_s
rst	gps_hat/radio.h	/^    uint8_t rst;$/;"	m	struct:__anon2
rst	lora_pkt_fwd/inc/radio.h	/^    uint8_t rst;$/;"	m	struct:__anon4
rxdev	gps_hat/dual_pkt_fwd.c	/^radiodev *rxdev;$/;"	v
rxlora	gps_hat/radio.c	/^void rxlora(radiodev *dev, uint8_t rxmode)$/;"	f
rxlora	lora_pkt_fwd/src/radio.c	/^void rxlora(int spidev, uint8_t rxmode)$/;"	f
rxlorairqmask	gps_hat/radio.c	/^static const uint8_t rxlorairqmask[] = {$/;"	v	file:
rxlorairqmask	lora_pkt_fwd/src/radio.c	/^static const uint8_t rxlorairqmask[] = {$/;"	v	file:
scan_time_us	libloragw/inc/loragw_hal.h	/^    uint16_t scan_time_us;$/;"	m	struct:lgw_conf_lbt_chan_s
selectreceiver	gps_hat/radio.c	/^static void selectreceiver(int pin)$/;"	f	file:
send_tx_ack	gps_hat/dual_pkt_fwd.c	/^static int send_tx_ack(uint8_t token_h, uint8_t token_l, enum jit_error_e error) {$/;"	f	file:
send_tx_ack	gps_hat/hat_pkt_fwd.c	/^static int send_tx_ack(uint8_t token_h, uint8_t token_l, enum jit_error_e error) {$/;"	f	file:
send_tx_ack	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int send_tx_ack(uint8_t token_h, uint8_t token_l, enum jit_error_e error) {$/;"	f	file:
serv_addr	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static char serv_addr[64] = STR(DEFAULT_SERVER); \/* address of the server (host name or IPv4\/IPv6) *\/$/;"	v	file:
serv_port_down	gps_hat/dual_pkt_fwd.c	/^static char serv_port_down[8] = "1700"; \/* server port for downstream traffic *\/$/;"	v	file:
serv_port_down	gps_hat/hat_pkt_fwd.c	/^static char serv_port_down[8] = "1700"; \/* server port for downstream traffic *\/$/;"	v	file:
serv_port_down	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static char serv_port_down[8] = STR(DEFAULT_PORT_DW); \/* server port for downstream traffic *\/$/;"	v	file:
serv_port_up	gps_hat/dual_pkt_fwd.c	/^static char serv_port_up[8] = "1700"; \/* server port for upstream traffic *\/$/;"	v	file:
serv_port_up	gps_hat/hat_pkt_fwd.c	/^static char serv_port_up[8] = "1700"; \/* server port for upstream traffic *\/$/;"	v	file:
serv_port_up	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static char serv_port_up[8] = STR(DEFAULT_PORT_UP); \/* server port for upstream traffic *\/$/;"	v	file:
server	gps_hat/dual_pkt_fwd.c	/^static char server[64] = {'\\0'}; \/* address of the server (host name or IPv4\/IPv6) *\/$/;"	v	file:
server	gps_hat/hat_pkt_fwd.c	/^static char server[64] = {'\\0'}; \/* address of the server (host name or IPv4\/IPv6) *\/$/;"	v	file:
server_type	gps_hat/dual_pkt_fwd.c	/^static char server_type[16] = "LoRaWAN";          \/* debug info option *\/$/;"	v	file:
server_type	gps_hat/hat_pkt_fwd.c	/^static char server_type[16] = "LoRaWAN";          \/* debug info option *\/$/;"	v	file:
server_type	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static char server_type[16] = "server_type";$/;"	v	file:
setcr	gps_hat/radio.c	/^void setcr(uint8_t spidev, int denominator)$/;"	f
setcr	lora_pkt_fwd/src/radio.c	/^void setcr(uint8_t spidev, int denominator)$/;"	f
setfreq	gps_hat/radio.c	/^void setfreq(uint8_t spidev, long frequency)$/;"	f
setfreq	lora_pkt_fwd/src/radio.c	/^void setfreq(uint8_t spidev, long frequency)$/;"	f
setpower	gps_hat/radio.c	/^void setpower(uint8_t spidev, uint8_t pw) {$/;"	f
setpower	lora_pkt_fwd/src/radio.c	/^void setpower(uint8_t spidev, uint8_t pw) {$/;"	f
setprlen	gps_hat/radio.c	/^void setprlen(uint8_t spidev, long length)$/;"	f
setprlen	lora_pkt_fwd/src/radio.c	/^void setprlen(uint8_t spidev, long length)$/;"	f
setsbw	gps_hat/radio.c	/^void setsbw(uint8_t spidev, long sbw)$/;"	f
setsbw	lora_pkt_fwd/src/radio.c	/^void setsbw(uint8_t spidev, long sbw)$/;"	f
setsf	gps_hat/radio.c	/^void setsf(uint8_t spidev, int sf)$/;"	f
setsf	lora_pkt_fwd/src/radio.c	/^void setsf(uint8_t spidev, int sf)$/;"	f
setsyncword	gps_hat/radio.c	/^void setsyncword(uint8_t spidev, int sw)$/;"	f
setsyncword	lora_pkt_fwd/src/radio.c	/^void setsyncword(uint8_t spidev, int sw)$/;"	f
setup_channel	gps_hat/radio.c	/^void setup_channel(radiodev *dev)$/;"	f
setup_channel	lora_pkt_fwd/src/radio.c	/^void setup_channel(radiodev *dev)$/;"	f
setup_sx1272_FSK	libloragw/src/loragw_radio.c	/^int setup_sx1272_FSK(uint32_t frequency, enum lgw_sx127x_rxbw_e rxbw_khz, int8_t rssi_offset) {$/;"	f
setup_sx1276_FSK	libloragw/src/loragw_radio.c	/^int setup_sx1276_FSK(uint32_t frequency, enum lgw_sx127x_rxbw_e rxbw_khz, int8_t rssi_offset) {$/;"	f
sf	gps_hat/radio.h	/^    uint8_t sf;$/;"	m	struct:__anon2
sf	gps_hat/single_rx_tx.c	/^static char sf[8] = "7";$/;"	v	file:
sf	lora_pkt_fwd/inc/radio.h	/^    uint8_t sf;$/;"	m	struct:__anon4
sf	lora_pkt_fwd/src/single_tx.c	/^static char sf[8] = "7";$/;"	v	file:
sf_getval	gps_hat/radio.c	/^int32_t sf_getval(int x) {$/;"	f
sf_t	gps_hat/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	g
sf_t	lora_pkt_fwd/inc/radio.h	/^enum sf_t { SF7=7, SF8, SF9, SF10, SF11, SF12 };$/;"	g
sf_toval	gps_hat/radio.c	/^int32_t sf_toval(int x) {$/;"	f
sig_handler	gps_hat/dual_pkt_fwd.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sig_handler	gps_hat/hat_pkt_fwd.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sig_handler	gps_hat/single_rx_tx.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sig_handler	libloragw/tst/test_loragw_gps.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sig_handler	libloragw/tst/test_loragw_hal.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sig_handler	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sig_handler	util_pkt_logger/src/util_pkt_logger.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sig_handler	util_tx_continuous/src/util_tx_continuous.c	/^static void sig_handler(int sigio)$/;"	f	file:
sig_handler	util_tx_test/src/util_tx_test.c	/^static void sig_handler(int sigio) {$/;"	f	file:
sigact	util_pkt_logger/src/util_pkt_logger.c	/^struct sigaction sigact; \/* SIGQUIT&SIGINT&SIGTERM signal handling *\/$/;"	v	typeref:struct:sigaction
sigact	util_tx_test/src/util_tx_test.c	/^struct sigaction sigact; \/* SIGQUIT&SIGINT&SIGTERM signal handling *\/$/;"	v	typeref:struct:sigaction
sign	libloragw/inc/loragw_reg.h	/^    bool    sign;        \/*!< 1 indicates the register is signed (2 complem.) *\/$/;"	m	struct:lgw_reg_s
single_tx	gps_hat/radio.c	/^void single_tx(radiodev *dev, uint8_t *payload, int size) {$/;"	f
single_tx	lora_pkt_fwd/src/radio.c	/^void single_tx(radiodev *dev, uint8_t *payload, int size) {$/;"	f
size	gps_hat/radio.h	/^    uint16_t    size;           \/*!> payload size in bytes *\/$/;"	m	struct:pkt_tx_s
size	gps_hat/radio.h	/^    uint16_t    size;         \/*!> payload size in bytes *\/ $/;"	m	struct:pkt_rx_s
size	libloragw/inc/loragw_hal.h	/^    uint16_t    size;           \/*!> payload size in bytes *\/$/;"	m	struct:lgw_pkt_rx_s
size	libloragw/inc/loragw_hal.h	/^    uint16_t    size;           \/*!> payload size in bytes *\/$/;"	m	struct:lgw_pkt_tx_s
size	libloragw/inc/loragw_hal.h	/^    uint8_t                 size;                       \/*!> Number of LUT indexes *\/$/;"	m	struct:lgw_tx_gain_lut_s
sizeof_token	gps_hat/parson.c	37;"	d	file:
skip_char	gps_hat/parson.c	38;"	d	file:
skip_quotes	gps_hat/parson.c	/^static void skip_quotes(const char **string) {$/;"	f	file:
skip_quotes	lora_pkt_fwd/src/parson.c	/^static void skip_quotes(const char **string) {$/;"	f	file:
skip_quotes	util_pkt_logger/src/parson.c	/^static void skip_quotes(const char **string) {$/;"	f	file:
skip_whitespaces	gps_hat/parson.c	39;"	d	file:
snr	gps_hat/radio.h	/^    float       snr;          \/*!> average packet SNR, in dB (LoRa only) *\/$/;"	m	struct:pkt_rx_s
snr	libloragw/inc/loragw_hal.h	/^    float       snr;            \/*!> average packet SNR, in dB (LoRa only) *\/$/;"	m	struct:lgw_pkt_rx_s
snr_max	libloragw/inc/loragw_hal.h	/^    float       snr_max;        \/*!> maximum packet SNR, in dB (LoRa only) *\/$/;"	m	struct:lgw_pkt_rx_s
snr_min	libloragw/inc/loragw_hal.h	/^    float       snr_min;        \/*!> minimum packet SNR, in dB (LoRa only) *\/$/;"	m	struct:lgw_pkt_rx_s
sock_down	gps_hat/dual_pkt_fwd.c	/^static int sock_down; \/* socket for downstream traffic *\/$/;"	v	file:
sock_down	gps_hat/hat_pkt_fwd.c	/^static int sock_down; \/* socket for downstream traffic *\/$/;"	v	file:
sock_down	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int sock_down; \/* socket for downstream traffic *\/$/;"	v	file:
sock_up	gps_hat/dual_pkt_fwd.c	/^static int sock_up; \/* socket for upstream traffic *\/$/;"	v	file:
sock_up	gps_hat/hat_pkt_fwd.c	/^static int sock_up; \/* socket for upstream traffic *\/$/;"	v	file:
sock_up	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int sock_up; \/* socket for upstream traffic *\/$/;"	v	file:
spi_open	lora_pkt_fwd/src/radio.c	/^int spi_open(char *spi_path) {$/;"	f
spi_r	lora_pkt_fwd/src/radio.c	/^static int spi_r(uint8_t spidev, uint8_t address, uint8_t *data) {$/;"	f	file:
spi_w	lora_pkt_fwd/src/radio.c	/^static int spi_w(uint8_t spidev, uint8_t address, uint8_t data) {$/;"	f	file:
spiport	gps_hat/radio.h	/^    uint8_t  spiport;$/;"	m	struct:__anon2
spiport	lora_pkt_fwd/inc/radio.h	/^    uint8_t  spiport;$/;"	m	struct:__anon4
stat_interval	gps_hat/dual_pkt_fwd.c	/^static uint8_t stat_interval = 45; \/* time interval (in sec) at which statistics are collected and displayed *\/$/;"	v	file:
stat_interval	gps_hat/hat_pkt_fwd.c	/^static uint8_t stat_interval = 45; \/* time interval (in sec) at which statistics are collected and displayed *\/$/;"	v	file:
stat_interval	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static unsigned stat_interval = DEFAULT_STAT; \/* time interval (in sec) at which statistics are collected and displayed *\/$/;"	v	file:
status	libloragw/inc/loragw_hal.h	/^    uint8_t     status;         \/*!> status of the received packet *\/$/;"	m	struct:lgw_pkt_rx_s
status_report	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static char status_report[STATUS_SIZE]; \/* status report as a JSON object *\/$/;"	v	file:
str_chop	libloragw/src/loragw_gps.c	/^int str_chop(char *s, int buff_size, char separator, int *idx_ary, int max_idx) {$/;"	f
string	gps_hat/parson.c	/^    const char  *string;$/;"	m	union:json_value_value	file:
string	lora_pkt_fwd/src/parson.c	/^    char        *string;$/;"	m	union:json_value_value	file:
string	util_pkt_logger/src/parson.c	/^    char        *string;$/;"	m	union:json_value_value	file:
sx125x_cal	libloragw/tst/test_loragw_cal.c	/^uint8_t sx125x_cal(uint8_t cal_cmd, struct cal_res_s *cal_res) {$/;"	f
sx125x_read	libloragw/src/loragw_radio.c	/^uint8_t sx125x_read(uint8_t channel, uint8_t addr) {$/;"	f
sx125x_write	libloragw/src/loragw_radio.c	/^void sx125x_write(uint8_t channel, uint8_t addr, uint8_t data) {$/;"	f
sx1276	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool sx1276 = false;$/;"	v	file:
sx1276_txpw	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static int sx1276_txpw = 20;$/;"	v	file:
sx127x_FskBandwidths	libloragw/src/loragw_radio.c	/^const struct lgw_sx127x_FSK_bandwidth_s sx127x_FskBandwidths[] =$/;"	v	typeref:struct:lgw_sx127x_FSK_bandwidth_s
sxradio	lora_pkt_fwd/src/lora_pkt_fwd.c	/^radiodev *sxradio;$/;"	v
sync_word	libloragw/inc/loragw_hal.h	/^    uint64_t    sync_word;      \/*!> FSK sync word (ALIGN RIGHT, eg. 0xC194C1) *\/$/;"	m	struct:lgw_conf_rxif_s
sync_word_size	libloragw/inc/loragw_hal.h	/^    uint8_t     sync_word_size; \/*!> size of FSK sync word (number of bytes, 0 for default) *\/$/;"	m	struct:lgw_conf_rxif_s
syncwd	gps_hat/dual_pkt_fwd.c	/^static uint8_t syncwd = 52;            \/* tx frequency of radio *\/$/;"	v	file:
syncwd	gps_hat/hat_pkt_fwd.c	/^static uint8_t syncwd = 52;            \/* tx frequency of radio *\/$/;"	v	file:
syncword	gps_hat/radio.h	/^    uint8_t syncword;$/;"	m	struct:__anon2
syncword	lora_pkt_fwd/inc/radio.h	/^    uint8_t syncword;$/;"	m	struct:__anon4
systime	libloragw/inc/loragw_gps.h	/^    time_t          systime;    \/*!> system time when solution was calculated *\/$/;"	m	struct:tref
thread_down	gps_hat/dual_pkt_fwd.c	/^void thread_down(void) {$/;"	f
thread_down	gps_hat/hat_pkt_fwd.c	/^void thread_down(void) {$/;"	f
thread_down	lora_pkt_fwd/src/lora_pkt_fwd.c	/^void thread_down(void) {$/;"	f
thread_gps	lora_pkt_fwd/src/lora_pkt_fwd.c	/^void thread_gps(void) {$/;"	f
thread_jit	gps_hat/dual_pkt_fwd.c	/^void thread_jit(void) {$/;"	f
thread_jit	gps_hat/hat_pkt_fwd.c	/^void thread_jit(void) {$/;"	f
thread_jit	lora_pkt_fwd/src/lora_pkt_fwd.c	/^void thread_jit(void) {$/;"	f
thread_push	gps_hat/dual_pkt_fwd.c	/^void thread_push(void) {$/;"	f
thread_push	gps_hat/hat_pkt_fwd.c	/^void thread_push(void) {$/;"	f
thread_stat	gps_hat/dual_pkt_fwd.c	/^void thread_stat(void) {$/;"	f
thread_stat	gps_hat/hat_pkt_fwd.c	/^void thread_stat(void) {$/;"	f
thread_timersync	lora_pkt_fwd/src/timersync.c	/^void thread_timersync(void) {$/;"	f
thread_up	gps_hat/dual_pkt_fwd.c	/^void thread_up(void) {$/;"	f
thread_up	gps_hat/hat_pkt_fwd.c	/^void thread_up(void) {$/;"	f
thread_up	lora_pkt_fwd/src/lora_pkt_fwd.c	/^void thread_up(void) {$/;"	f
thread_valid	lora_pkt_fwd/src/lora_pkt_fwd.c	/^void thread_valid(void) {$/;"	f
time_on_air	gps_hat/jitqueue.c	/^uint32_t time_on_air(struct pkt_tx_s *packet) {$/;"	f
time_reference_gps	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct tref time_reference_gps; \/* time reference used for GPS <-> timestamp conversion *\/$/;"	v	typeref:struct:tref	file:
timersub	lora_pkt_fwd/src/timersync.c	36;"	d	file:
tref	libloragw/inc/loragw_gps.h	/^struct tref {$/;"	s
try_realloc	gps_hat/parson.c	/^static int try_realloc(void **ptr, size_t new_size) {$/;"	f	file:
ttyopt_restore	libloragw/src/loragw_gps.c	/^static struct termios ttyopt_restore;$/;"	v	typeref:struct:termios	file:
tx_enable	libloragw/inc/loragw_hal.h	/^    bool                    tx_enable;      \/*!> enable or disable TX on that RF chain *\/$/;"	m	struct:lgw_conf_rxrf_s
tx_freq_max	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t tx_freq_max[LGW_RF_CHAIN_NB]; \/* highest frequency supported by TX chain *\/$/;"	v	file:
tx_freq_min	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static uint32_t tx_freq_min[LGW_RF_CHAIN_NB]; \/* lowest frequency supported by TX chain *\/$/;"	v	file:
tx_mode	gps_hat/radio.h	/^    uint8_t     tx_mode;        \/*!> select on what event\/time the TX is triggered *\/$/;"	m	struct:pkt_tx_s
tx_mode	libloragw/inc/loragw_hal.h	/^    uint8_t     tx_mode;        \/*!> select on what event\/time the TX is triggered *\/$/;"	m	struct:lgw_pkt_tx_s
tx_notch_freq	libloragw/inc/loragw_hal.h	/^    uint32_t                tx_notch_freq;  \/*!> TX notch filter frequency [126KHz..250KHz] *\/$/;"	m	struct:lgw_conf_rxrf_s
tx_notch_offset	libloragw/src/loragw_fpga.c	/^static uint8_t tx_notch_offset;$/;"	v	file:
tx_notch_support	libloragw/src/loragw_fpga.c	/^static bool tx_notch_support = false;$/;"	v	file:
txdev	gps_hat/dual_pkt_fwd.c	/^radiodev *txdev;$/;"	v
txgain_lut	libloragw/src/loragw_hal.c	/^static struct lgw_tx_gain_lut_s txgain_lut = {$/;"	v	typeref:struct:lgw_tx_gain_lut_s	file:
txgain_lut	util_tx_test/src/util_tx_test.c	/^static struct lgw_tx_gain_lut_s txgain_lut = {$/;"	v	typeref:struct:lgw_tx_gain_lut_s	file:
txlora	gps_hat/radio.c	/^void txlora(radiodev *dev, struct pkt_tx_s *pkt) {$/;"	f
txlora	lora_pkt_fwd/src/radio.c	/^void txlora(radiodev *dev, struct lgw_pkt_tx_s *pkt) {$/;"	f
txlut	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static struct lgw_tx_gain_lut_s txlut; \/* TX gain table *\/$/;"	v	typeref:struct:lgw_tx_gain_lut_s	file:
type	gps_hat/parson.c	/^    JSON_Value_Type     type;$/;"	m	struct:json_value_t	file:
type	libloragw/inc/loragw_hal.h	/^    enum lgw_radio_type_e   type;           \/*!> Radio type for that RF chain (SX1255, SX1257....) *\/$/;"	m	struct:lgw_conf_rxrf_s	typeref:enum:lgw_conf_rxrf_s::lgw_radio_type_e
type	libloragw/src/loragw_radio.c	/^    enum lgw_radio_type_e type;$/;"	m	struct:lgw_radio_type_version_s	typeref:enum:lgw_radio_type_version_s::lgw_radio_type_e	file:
type	lora_pkt_fwd/src/parson.c	/^    JSON_Value_Type     type;$/;"	m	struct:json_value_t	file:
type	util_pkt_logger/src/parson.c	/^    JSON_Value_Type     type;$/;"	m	struct:json_value_t	file:
uci_config_file	gps_hat/dual_pkt_fwd.c	/^static char uci_config_file[32] = {'\\0'};$/;"	v	file:
unselectreceiver	gps_hat/radio.c	/^static void unselectreceiver(int pin)$/;"	f	file:
usage	libloragw/tst/test_loragw_cal.c	/^void usage(void) {$/;"	f
usage	libloragw/tst/test_loragw_hal.c	/^void usage(void) {$/;"	f
usage	util_pkt_logger/src/util_pkt_logger.c	/^void usage(void) {$/;"	f
usage	util_tx_test/src/util_tx_test.c	/^void usage(void) {$/;"	f
utc	libloragw/inc/loragw_gps.h	/^    struct timespec utc;        \/*!> reference UTC time (from GPS\/NMEA) *\/$/;"	m	struct:tref	typeref:struct:tref::timespec
validate_nmea_checksum	libloragw/src/loragw_gps.c	/^static bool validate_nmea_checksum(const char *serial_buff, int buff_size) {$/;"	f	file:
value	gps_hat/parson.c	/^    JSON_Value_Value    value;$/;"	m	struct:json_value_t	file:
value	lora_pkt_fwd/src/parson.c	/^    JSON_Value_Value    value;$/;"	m	struct:json_value_t	file:
value	util_pkt_logger/src/parson.c	/^    JSON_Value_Value    value;$/;"	m	struct:json_value_t	file:
values	gps_hat/parson.c	/^    JSON_Value **values;$/;"	m	struct:json_object_t	file:
values	lora_pkt_fwd/src/parson.c	/^    JSON_Value **values;$/;"	m	struct:json_object_t	file:
values	util_pkt_logger/src/parson.c	/^    JSON_Value **values;$/;"	m	struct:json_object_t	file:
ver	gps_hat/single_rx_tx.c	/^static char ver[8] = "0.2";$/;"	v	file:
verify_utf8_sequence	lora_pkt_fwd/src/parson.c	/^static int verify_utf8_sequence(const unsigned char *string, int *len) {$/;"	f	file:
verify_utf8_sequence	util_pkt_logger/src/parson.c	/^static int verify_utf8_sequence(const unsigned char *string, int *len) {$/;"	f	file:
wait_ms	gps_hat/radio.c	/^void wait_ms(unsigned long a) {$/;"	f
wait_ms	libloragw/src/loragw_aux.c	/^void wait_ms(unsigned long a) {$/;"	f
wait_us	gps_hat/radio.c	/^void wait_us(unsigned long a) {$/;"	f
wd	gps_hat/single_rx_tx.c	/^static char wd[8] = "52";$/;"	v	file:
wd	lora_pkt_fwd/src/single_tx.c	/^static char wd[8] = "52";$/;"	v	file:
writeReg	gps_hat/radio.c	/^static void writeReg(uint8_t spidev, uint8_t addr, uint8_t value)$/;"	f	file:
writeReg	lora_pkt_fwd/src/radio.c	/^static void writeReg(uint8_t spidev, uint8_t addr, uint8_t value)$/;"	f	file:
xtal_correct	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static double xtal_correct = 1.0;$/;"	v	file:
xtal_correct_ok	lora_pkt_fwd/src/lora_pkt_fwd.c	/^static bool xtal_correct_ok = false; \/* set true when XTAL correction is stable enough *\/$/;"	v	file:
xtal_err	libloragw/inc/loragw_gps.h	/^    double          xtal_err;   \/*!> raw clock error (eg. <1 'slow' XTAL) *\/$/;"	m	struct:tref
